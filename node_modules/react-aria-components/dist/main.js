"use client";

var $7e3b9f6c0d3f98a7$exports = require("./ar-AE.main.js");
var $7c11c8bafabff514$exports = require("./bg-BG.main.js");
var $d55d6a46d896aa4e$exports = require("./cs-CZ.main.js");
var $0bf85a6224525466$exports = require("./da-DK.main.js");
var $3cffc1bd30a143a7$exports = require("./de-DE.main.js");
var $af25cfd8212114c4$exports = require("./el-GR.main.js");
var $4f0d6cca330ebbae$exports = require("./en-US.main.js");
var $1e942d208b3f081e$exports = require("./es-ES.main.js");
var $7ecf22cba6524ed5$exports = require("./et-EE.main.js");
var $4c3e2c694f8954f2$exports = require("./fi-FI.main.js");
var $5c093d840945be34$exports = require("./fr-FR.main.js");
var $54ebe5cc44e081ca$exports = require("./he-IL.main.js");
var $c87f289edc3c8208$exports = require("./hr-HR.main.js");
var $6752ef148a3dc43f$exports = require("./hu-HU.main.js");
var $58fa24283081b65c$exports = require("./it-IT.main.js");
var $770533c19d7b553a$exports = require("./ja-JP.main.js");
var $de8f7b8ad7f54d6d$exports = require("./ko-KR.main.js");
var $de235b5235305f02$exports = require("./lt-LT.main.js");
var $1badb5b4b4fa9042$exports = require("./lv-LV.main.js");
var $e0e47ca0931d41e2$exports = require("./nb-NO.main.js");
var $adb96033a361a81b$exports = require("./nl-NL.main.js");
var $96ebda5b7b663ef6$exports = require("./pl-PL.main.js");
var $010ef53c23794e08$exports = require("./pt-BR.main.js");
var $a0d0918dbe8cd238$exports = require("./pt-PT.main.js");
var $b73baeec3a0b138d$exports = require("./ro-RO.main.js");
var $aed1f56161d4731e$exports = require("./ru-RU.main.js");
var $3ff95b3a8291cbd7$exports = require("./sk-SK.main.js");
var $c7459bccfcc668d8$exports = require("./sl-SI.main.js");
var $d4deb497858acd42$exports = require("./sr-SP.main.js");
var $f07511ec9106f700$exports = require("./sv-SE.main.js");
var $8ecd910775d75b2a$exports = require("./tr-TR.main.js");
var $db0c53fb82554560$exports = require("./uk-UA.main.js");
var $c6fb62cc552205b8$exports = require("./zh-CN.main.js");
var $1830911445b53dbf$exports = require("./zh-TW.main.js");
var $bzgmy$reactaria = require("react-aria");
var $bzgmy$reactstately = require("react-stately");
var $bzgmy$reactariautils = require("@react-aria/utils");
var $bzgmy$react = require("react");
var $bzgmy$reactdom = require("react-dom");
var $bzgmy$usesyncexternalstoreshimindexjs = require("use-sync-external-store/shim/index.js");
var $bzgmy$internationalizeddate = require("@internationalized/date");
var $bzgmy$reactariainteractions = require("@react-aria/interactions");
var $bzgmy$reactstatelytable = require("@react-stately/table");
var $bzgmy$reactariatoolbar = require("@react-aria/toolbar");
var $bzgmy$reactariafocus = require("@react-aria/focus");


function $parcel$export(e, n, v, s) {
  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});
}

function $parcel$interopDefault(a) {
  return a && a.__esModule ? a.default : a;
}

$parcel$export(module.exports, "Breadcrumbs", () => $afa44b644f65ed30$export$2dc68d50d56fbbd);
$parcel$export(module.exports, "BreadcrumbsContext", () => $afa44b644f65ed30$export$65596d3621b0a4a0);
$parcel$export(module.exports, "Breadcrumb", () => $afa44b644f65ed30$export$dabcc1ec9dd9d1cc);
$parcel$export(module.exports, "Button", () => $b856e6788a7ea5bf$export$353f5b6fc5456de1);
$parcel$export(module.exports, "ButtonContext", () => $b856e6788a7ea5bf$export$24d547caef80ccd1);
$parcel$export(module.exports, "Calendar", () => $3f539f26b167ddde$export$e1aef45b828286de);
$parcel$export(module.exports, "CalendarGrid", () => $3f539f26b167ddde$export$5bd780d491cfc46c);
$parcel$export(module.exports, "CalendarGridHeader", () => $3f539f26b167ddde$export$22e2d15eaa4d2377);
$parcel$export(module.exports, "CalendarGridBody", () => $3f539f26b167ddde$export$e11f8ba65d857bff);
$parcel$export(module.exports, "CalendarHeaderCell", () => $3f539f26b167ddde$export$ad2135cac3a11b3d);
$parcel$export(module.exports, "CalendarCell", () => $3f539f26b167ddde$export$5d847498420df57b);
$parcel$export(module.exports, "RangeCalendar", () => $3f539f26b167ddde$export$a4f5c8b89d277a8d);
$parcel$export(module.exports, "CalendarContext", () => $3f539f26b167ddde$export$3b805cea1f178355);
$parcel$export(module.exports, "RangeCalendarContext", () => $3f539f26b167ddde$export$233dd9682e1ad64b);
$parcel$export(module.exports, "CalendarStateContext", () => $3f539f26b167ddde$export$9e31dcedda1dadc7);
$parcel$export(module.exports, "RangeCalendarStateContext", () => $3f539f26b167ddde$export$5e0fc348c00f87a0);
$parcel$export(module.exports, "Checkbox", () => $e733553516d848a9$export$48513f6b9f8ce62d);
$parcel$export(module.exports, "CheckboxGroup", () => $e733553516d848a9$export$4aa08d5625cb8ead);
$parcel$export(module.exports, "CheckboxGroupContext", () => $e733553516d848a9$export$baf37c4be89255b8);
$parcel$export(module.exports, "CheckboxContext", () => $e733553516d848a9$export$b085522c77523c51);
$parcel$export(module.exports, "CheckboxGroupStateContext", () => $e733553516d848a9$export$139c5b8563afc1fc);
$parcel$export(module.exports, "ComboBox", () => $1d716ce69f118fad$export$72b9695b8216309a);
$parcel$export(module.exports, "ComboBoxContext", () => $1d716ce69f118fad$export$d414ccceff7063c3);
$parcel$export(module.exports, "ComboBoxStateContext", () => $1d716ce69f118fad$export$c02625b26074192c);
$parcel$export(module.exports, "composeRenderProps", () => $c5ccf687772c0422$export$c245e6201fed2f75);
$parcel$export(module.exports, "Provider", () => $c5ccf687772c0422$export$2881499e37b75b9a);
$parcel$export(module.exports, "useContextProps", () => $c5ccf687772c0422$export$29f1550f4b0d4415);
$parcel$export(module.exports, "useSlottedContext", () => $c5ccf687772c0422$export$fabf2dc03a41866e);
$parcel$export(module.exports, "DateField", () => $9eb4e1c2268ca198$export$d9781c7894a82487);
$parcel$export(module.exports, "DateInput", () => $9eb4e1c2268ca198$export$7edc06cf1783b30f);
$parcel$export(module.exports, "DateSegment", () => $9eb4e1c2268ca198$export$336ab7fa954c4b5f);
$parcel$export(module.exports, "TimeField", () => $9eb4e1c2268ca198$export$5eaee2322dd727eb);
$parcel$export(module.exports, "DateFieldContext", () => $9eb4e1c2268ca198$export$7b3e670c86da5fe8);
$parcel$export(module.exports, "TimeFieldContext", () => $9eb4e1c2268ca198$export$8e17ddc448e87c1e);
$parcel$export(module.exports, "DateFieldStateContext", () => $9eb4e1c2268ca198$export$3b08bebcf796eea0);
$parcel$export(module.exports, "TimeFieldStateContext", () => $9eb4e1c2268ca198$export$5d8dc44abd10a920);
$parcel$export(module.exports, "DatePicker", () => $adfe8d3f75d5162e$export$5109c6dd95d8fb00);
$parcel$export(module.exports, "DateRangePicker", () => $adfe8d3f75d5162e$export$17334619f3ac2224);
$parcel$export(module.exports, "DatePickerContext", () => $adfe8d3f75d5162e$export$cf316c7f3b44c11e);
$parcel$export(module.exports, "DateRangePickerContext", () => $adfe8d3f75d5162e$export$8282edba42ee28a);
$parcel$export(module.exports, "DatePickerStateContext", () => $adfe8d3f75d5162e$export$50a10c048fdcdee9);
$parcel$export(module.exports, "DateRangePickerStateContext", () => $adfe8d3f75d5162e$export$80d7ae1f804790be);
$parcel$export(module.exports, "DialogTrigger", () => $2979ab89b336194b$export$2e1e1122cf0cba88);
$parcel$export(module.exports, "Dialog", () => $2979ab89b336194b$export$3ddf2d174ce01153);
$parcel$export(module.exports, "DialogContext", () => $2979ab89b336194b$export$8b93a07348a7730c);
$parcel$export(module.exports, "OverlayTriggerStateContext", () => $2979ab89b336194b$export$d2f961adcb0afbe);
$parcel$export(module.exports, "DropZone", () => $80a65baccb138f12$export$3c6489d84dc98b6);
$parcel$export(module.exports, "DropZoneContext", () => $80a65baccb138f12$export$14a72053295ff9a6);
$parcel$export(module.exports, "FieldError", () => $846a838139f2ac6b$export$f551688fc98f2e09);
$parcel$export(module.exports, "FileTrigger", () => $8e055a19745f522c$export$6fb4a10d2c950550);
$parcel$export(module.exports, "Form", () => $35157657e549736b$export$a7fed597f4b8afd8);
$parcel$export(module.exports, "GridList", () => $132cbde493282f82$export$a7bfbda1311ca015);
$parcel$export(module.exports, "GridListItem", () => $132cbde493282f82$export$e96fc9a8407faa6b);
$parcel$export(module.exports, "GridListContext", () => $132cbde493282f82$export$54fe942636b6416d);
$parcel$export(module.exports, "Group", () => $dcae72abc18c0045$export$eb2fcfdbd7ba97d4);
$parcel$export(module.exports, "GroupContext", () => $dcae72abc18c0045$export$f9c6924e160136d1);
$parcel$export(module.exports, "Header", () => $c7efb75a1a3fe2d2$export$8b251419efc915eb);
$parcel$export(module.exports, "HeaderContext", () => $c7efb75a1a3fe2d2$export$e0e4026c12a8bdbb);
$parcel$export(module.exports, "Heading", () => $1063ac64677bb13f$export$a8a3e93435678ff9);
$parcel$export(module.exports, "HeadingContext", () => $1063ac64677bb13f$export$d688439359537581);
$parcel$export(module.exports, "Input", () => $1bcfcef5af644e13$export$f5b8910cec6cf069);
$parcel$export(module.exports, "InputContext", () => $1bcfcef5af644e13$export$37fb8590cf2c088c);
$parcel$export(module.exports, "Section", () => $3114c2382242bdc0$export$6e2c8f0811a474ce);
$parcel$export(module.exports, "Collection", () => $3114c2382242bdc0$export$fb8073518f34e6ec);
$parcel$export(module.exports, "Keyboard", () => $70c886ca98ebdc2b$export$16e4d70cc375e707);
$parcel$export(module.exports, "KeyboardContext", () => $70c886ca98ebdc2b$export$744d98a3b8a94e1c);
$parcel$export(module.exports, "Label", () => $84ae0bf5bd8e2a5f$export$b04be29aa201d4f5);
$parcel$export(module.exports, "LabelContext", () => $84ae0bf5bd8e2a5f$export$75b6ee27786ba447);
$parcel$export(module.exports, "Link", () => $c87397ee936d2bda$export$a6c7ac8248d6e38a);
$parcel$export(module.exports, "LinkContext", () => $c87397ee936d2bda$export$e2509388b49734e7);
$parcel$export(module.exports, "ListBox", () => $a03b42240404b420$export$41f133550aa26f48);
$parcel$export(module.exports, "ListBoxItem", () => $a03b42240404b420$export$a11e76429ed99b4);
$parcel$export(module.exports, "ListBoxContext", () => $a03b42240404b420$export$7ff8f37d2d81a48d);
$parcel$export(module.exports, "ListStateContext", () => $a03b42240404b420$export$7c5906fe4f1f2af2);
$parcel$export(module.exports, "Menu", () => $a8f6e7d095d1cc86$export$d9b273488cd8ce6f);
$parcel$export(module.exports, "MenuItem", () => $a8f6e7d095d1cc86$export$2ce376c2cc3355c8);
$parcel$export(module.exports, "MenuTrigger", () => $a8f6e7d095d1cc86$export$27d2ad3c5815583e);
$parcel$export(module.exports, "MenuContext", () => $a8f6e7d095d1cc86$export$c7e742effb1c51e2);
$parcel$export(module.exports, "MenuStateContext", () => $a8f6e7d095d1cc86$export$24aad8519b95b41b);
$parcel$export(module.exports, "Meter", () => $e85da53562ca5320$export$62e3ae2a4090b879);
$parcel$export(module.exports, "MeterContext", () => $e85da53562ca5320$export$8b645da15a96b44f);
$parcel$export(module.exports, "Modal", () => $71899cff63e14b82$export$2b77a92f1a5ad772);
$parcel$export(module.exports, "ModalOverlay", () => $71899cff63e14b82$export$8948f78d83984c69);
$parcel$export(module.exports, "ModalContext", () => $71899cff63e14b82$export$ab57792b9b6974a6);
$parcel$export(module.exports, "NumberField", () => $177b28eee7968d58$export$63c5fa0b2fdccd2e);
$parcel$export(module.exports, "NumberFieldContext", () => $177b28eee7968d58$export$b414a48cf5dcbc11);
$parcel$export(module.exports, "NumberFieldStateContext", () => $177b28eee7968d58$export$6cc906c6cff9bec5);
$parcel$export(module.exports, "OverlayArrow", () => $ee5958cbdc6becc1$export$746d02f47f4d381);
$parcel$export(module.exports, "Popover", () => $61e2b7078adb18bc$export$5b6b19405a83ff9d);
$parcel$export(module.exports, "PopoverContext", () => $61e2b7078adb18bc$export$9b9a0cd73afb7ca4);
$parcel$export(module.exports, "ProgressBar", () => $0d6436f6a1b0b001$export$c17561cb55d4db30);
$parcel$export(module.exports, "ProgressBarContext", () => $0d6436f6a1b0b001$export$e9f3bf65a26ce129);
$parcel$export(module.exports, "RadioGroup", () => $1456b76f687bd4ed$export$a98f0dcb43a68a25);
$parcel$export(module.exports, "Radio", () => $1456b76f687bd4ed$export$d7b12c4107be0d61);
$parcel$export(module.exports, "RadioGroupContext", () => $1456b76f687bd4ed$export$a79eda4ff50e30b6);
$parcel$export(module.exports, "RadioContext", () => $1456b76f687bd4ed$export$b118023277d4a5c3);
$parcel$export(module.exports, "RadioGroupStateContext", () => $1456b76f687bd4ed$export$29d84393af70866c);
$parcel$export(module.exports, "SearchField", () => $a83c69b310385d53$export$b94867ecbd698f21);
$parcel$export(module.exports, "SearchFieldContext", () => $a83c69b310385d53$export$d1c4e4c63cb03a11);
$parcel$export(module.exports, "Select", () => $17f0ecdc17674b23$export$ef9b1a59e592288f);
$parcel$export(module.exports, "SelectValue", () => $17f0ecdc17674b23$export$e288731fd71264f0);
$parcel$export(module.exports, "SelectContext", () => $17f0ecdc17674b23$export$7540cee5be7dc19b);
$parcel$export(module.exports, "SelectValueContext", () => $17f0ecdc17674b23$export$f8f745c04421623f);
$parcel$export(module.exports, "SelectStateContext", () => $17f0ecdc17674b23$export$ef445b55be0601bd);
$parcel$export(module.exports, "Separator", () => $54b202ace195eaa4$export$1ff3c3f08ae963c0);
$parcel$export(module.exports, "SeparatorContext", () => $54b202ace195eaa4$export$6615d83f6de245ce);
$parcel$export(module.exports, "Slider", () => $b7152ce4839d0838$export$472062a354075cee);
$parcel$export(module.exports, "SliderOutput", () => $b7152ce4839d0838$export$a590f758a961cb5b);
$parcel$export(module.exports, "SliderTrack", () => $b7152ce4839d0838$export$105594979f116971);
$parcel$export(module.exports, "SliderThumb", () => $b7152ce4839d0838$export$2c1b491743890dec);
$parcel$export(module.exports, "SliderContext", () => $b7152ce4839d0838$export$e99164f0030f3bff);
$parcel$export(module.exports, "SliderOutputContext", () => $b7152ce4839d0838$export$6189c2744041d8f8);
$parcel$export(module.exports, "SliderTrackContext", () => $b7152ce4839d0838$export$f1fce0420cc6d8ee);
$parcel$export(module.exports, "SliderStateContext", () => $b7152ce4839d0838$export$1e7083018727fa60);
$parcel$export(module.exports, "Switch", () => $8d81efc5c2ff8011$export$b5d5cf8927ab7262);
$parcel$export(module.exports, "SwitchContext", () => $8d81efc5c2ff8011$export$8699e3b644d5a28a);
$parcel$export(module.exports, "Table", () => $37b9a5d4bd0d4ded$export$54ec01a60f47d33d);
$parcel$export(module.exports, "Row", () => $37b9a5d4bd0d4ded$export$b59bdbef9ce70de2);
$parcel$export(module.exports, "Cell", () => $37b9a5d4bd0d4ded$export$f6f0c3fe4ec306ea);
$parcel$export(module.exports, "Column", () => $37b9a5d4bd0d4ded$export$816b5d811295e6bc);
$parcel$export(module.exports, "ColumnResizer", () => $37b9a5d4bd0d4ded$export$ee689e97a7664bfd);
$parcel$export(module.exports, "TableHeader", () => $37b9a5d4bd0d4ded$export$f850895b287ef28e);
$parcel$export(module.exports, "TableBody", () => $37b9a5d4bd0d4ded$export$76ccd210b9029917);
$parcel$export(module.exports, "TableContext", () => $37b9a5d4bd0d4ded$export$93e4b0b2cc49b648);
$parcel$export(module.exports, "ResizableTableContainer", () => $37b9a5d4bd0d4ded$export$7063e69b8a954175);
$parcel$export(module.exports, "useTableOptions", () => $37b9a5d4bd0d4ded$export$fddc468cd8cb4db9);
$parcel$export(module.exports, "TableStateContext", () => $37b9a5d4bd0d4ded$export$38de1cb0526c21fb);
$parcel$export(module.exports, "TableColumnResizeStateContext", () => $37b9a5d4bd0d4ded$export$a2680a798823803c);
$parcel$export(module.exports, "Tabs", () => $f982e6cd1aac14a3$export$b2539bed5023c21c);
$parcel$export(module.exports, "TabList", () => $f982e6cd1aac14a3$export$e51a686c67fdaa2d);
$parcel$export(module.exports, "TabPanel", () => $f982e6cd1aac14a3$export$3d96ec278d3efce4);
$parcel$export(module.exports, "Tab", () => $f982e6cd1aac14a3$export$3e41faf802a29e71);
$parcel$export(module.exports, "TabsContext", () => $f982e6cd1aac14a3$export$cfa7aa87c26e7d1f);
$parcel$export(module.exports, "TabListStateContext", () => $f982e6cd1aac14a3$export$364712098d2aa57c);
$parcel$export(module.exports, "TagGroup", () => $ecf55d0c218a575e$export$67ea30858aaf75e3);
$parcel$export(module.exports, "TagGroupContext", () => $ecf55d0c218a575e$export$5b07b5dd2cbd96e3);
$parcel$export(module.exports, "TagList", () => $ecf55d0c218a575e$export$f9fef0f55402315b);
$parcel$export(module.exports, "TagListContext", () => $ecf55d0c218a575e$export$e755ce3685dd0ca9);
$parcel$export(module.exports, "Tag", () => $ecf55d0c218a575e$export$3288d34c523a1192);
$parcel$export(module.exports, "Text", () => $a8a589c28affdc40$export$5f1af8db9871e1d6);
$parcel$export(module.exports, "TextContext", () => $a8a589c28affdc40$export$9afb8bc826b033ea);
$parcel$export(module.exports, "TextArea", () => $a5d2423f42834231$export$f5c9f3c2c4054eec);
$parcel$export(module.exports, "TextAreaContext", () => $a5d2423f42834231$export$2dc6166a7e65358c);
$parcel$export(module.exports, "TextField", () => $3f2c5af9d7d8905b$export$2c73285ae9390cec);
$parcel$export(module.exports, "TextFieldContext", () => $3f2c5af9d7d8905b$export$2129e27b3ef0d483);
$parcel$export(module.exports, "ToggleButton", () => $3def510c5b419a98$export$d2b052e7b4be1756);
$parcel$export(module.exports, "ToggleButtonContext", () => $3def510c5b419a98$export$43506d75ebd2e218);
$parcel$export(module.exports, "Toolbar", () => $a36bb7fee39de77a$export$4c260019440d418f);
$parcel$export(module.exports, "ToolbarContext", () => $a36bb7fee39de77a$export$6311e7ab80ef752f);
$parcel$export(module.exports, "TooltipTrigger", () => $f9dd4061eb43ac38$export$8c610744efcf8a1d);
$parcel$export(module.exports, "Tooltip", () => $f9dd4061eb43ac38$export$28c660c63b792dea);
$parcel$export(module.exports, "TooltipTriggerStateContext", () => $f9dd4061eb43ac38$export$7a7623236eec67fa);
$parcel$export(module.exports, "TooltipContext", () => $f9dd4061eb43ac38$export$39ae08fa83328b12);
$parcel$export(module.exports, "useDragAndDrop", () => $368d79437ab76c11$export$2cfc5be7a55829f6);
$parcel$export(module.exports, "DropIndicator", () => $368d79437ab76c11$export$62ed72bc21f6b8a6);
$parcel$export(module.exports, "DropIndicatorContext", () => $368d79437ab76c11$export$f55761759794cf55);
$parcel$export(module.exports, "DragAndDropContext", () => $368d79437ab76c11$export$d188a835a7bc5783);
$parcel$export(module.exports, "DIRECTORY_DRAG_TYPE", () => $bzgmy$reactaria.DIRECTORY_DRAG_TYPE);
$parcel$export(module.exports, "isDirectoryDropItem", () => $bzgmy$reactaria.isDirectoryDropItem);
$parcel$export(module.exports, "isFileDropItem", () => $bzgmy$reactaria.isFileDropItem);
$parcel$export(module.exports, "isTextDropItem", () => $bzgmy$reactaria.isTextDropItem);
$parcel$export(module.exports, "SSRProvider", () => $bzgmy$reactaria.SSRProvider);
$parcel$export(module.exports, "RouterProvider", () => $bzgmy$reactaria.RouterProvider);
$parcel$export(module.exports, "I18nProvider", () => $bzgmy$reactaria.I18nProvider);
$parcel$export(module.exports, "useLocale", () => $bzgmy$reactaria.useLocale);
$parcel$export(module.exports, "FormValidationContext", () => $bzgmy$reactstately.FormValidationContext);
/*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ /*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ /*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 



class $3114c2382242bdc0$export$f5d856d854e74713 {
    get childNodes() {
        throw new Error("childNodes is not supported");
    }
    clone() {
        let node = new $3114c2382242bdc0$export$f5d856d854e74713(this.type, this.key);
        node.value = this.value;
        node.level = this.level;
        node.hasChildNodes = this.hasChildNodes;
        node.rendered = this.rendered;
        node.textValue = this.textValue;
        node["aria-label"] = this["aria-label"];
        node.index = this.index;
        node.parentKey = this.parentKey;
        node.prevKey = this.prevKey;
        node.nextKey = this.nextKey;
        node.firstChildKey = this.firstChildKey;
        node.lastChildKey = this.lastChildKey;
        node.props = this.props;
        return node;
    }
    constructor(type, key){
        this.value = null;
        this.level = 0;
        this.hasChildNodes = false;
        this.rendered = null;
        this.textValue = "";
        this["aria-label"] = undefined;
        this.index = 0;
        this.parentKey = null;
        this.prevKey = null;
        this.nextKey = null;
        this.firstChildKey = null;
        this.lastChildKey = null;
        this.props = {};
        this.type = type;
        this.key = key;
    }
}
/**
 * A mutable node in the fake DOM tree. When mutated, it marks itself as dirty
 * and queues an update with the owner document.
 */ class $3114c2382242bdc0$var$BaseNode {
    *[Symbol.iterator]() {
        let node = this.firstChild;
        while(node){
            yield node;
            node = node.nextSibling;
        }
    }
    get firstChild() {
        return this._firstChild;
    }
    set firstChild(firstChild) {
        this._firstChild = firstChild;
        this.ownerDocument.markDirty(this);
    }
    get lastChild() {
        return this._lastChild;
    }
    set lastChild(lastChild) {
        this._lastChild = lastChild;
        this.ownerDocument.markDirty(this);
    }
    get previousSibling() {
        return this._previousSibling;
    }
    set previousSibling(previousSibling) {
        this._previousSibling = previousSibling;
        this.ownerDocument.markDirty(this);
    }
    get nextSibling() {
        return this._nextSibling;
    }
    set nextSibling(nextSibling) {
        this._nextSibling = nextSibling;
        this.ownerDocument.markDirty(this);
    }
    get parentNode() {
        return this._parentNode;
    }
    set parentNode(parentNode) {
        this._parentNode = parentNode;
        this.ownerDocument.markDirty(this);
    }
    get isConnected() {
        var _this_parentNode;
        return ((_this_parentNode = this.parentNode) === null || _this_parentNode === void 0 ? void 0 : _this_parentNode.isConnected) || false;
    }
    appendChild(child) {
        this.ownerDocument.startTransaction();
        if (child.parentNode) child.parentNode.removeChild(child);
        if (this.firstChild == null) this.firstChild = child;
        if (this.lastChild) {
            this.lastChild.nextSibling = child;
            child.index = this.lastChild.index + 1;
            child.previousSibling = this.lastChild;
        } else {
            child.previousSibling = null;
            child.index = 0;
        }
        child.parentNode = this;
        child.nextSibling = null;
        this.lastChild = child;
        this.ownerDocument.markDirty(this);
        if (child.hasSetProps) // Only add the node to the collection if we already received props for it.
        // Otherwise wait until then so we have the correct id for the node.
        this.ownerDocument.addNode(child);
        this.ownerDocument.endTransaction();
        this.ownerDocument.queueUpdate();
    }
    insertBefore(newNode, referenceNode) {
        if (referenceNode == null) return this.appendChild(newNode);
        this.ownerDocument.startTransaction();
        if (newNode.parentNode) newNode.parentNode.removeChild(newNode);
        newNode.nextSibling = referenceNode;
        newNode.previousSibling = referenceNode.previousSibling;
        newNode.index = referenceNode.index;
        if (this.firstChild === referenceNode) this.firstChild = newNode;
        else if (referenceNode.previousSibling) referenceNode.previousSibling.nextSibling = newNode;
        referenceNode.previousSibling = newNode;
        newNode.parentNode = referenceNode.parentNode;
        let node = referenceNode;
        while(node){
            node.index++;
            node = node.nextSibling;
        }
        if (newNode.hasSetProps) this.ownerDocument.addNode(newNode);
        this.ownerDocument.endTransaction();
        this.ownerDocument.queueUpdate();
    }
    removeChild(child) {
        if (child.parentNode !== this) return;
        this.ownerDocument.startTransaction();
        let node = child.nextSibling;
        while(node){
            node.index--;
            node = node.nextSibling;
        }
        if (child.nextSibling) child.nextSibling.previousSibling = child.previousSibling;
        if (child.previousSibling) child.previousSibling.nextSibling = child.nextSibling;
        if (this.firstChild === child) this.firstChild = child.nextSibling;
        if (this.lastChild === child) this.lastChild = child.previousSibling;
        child.parentNode = null;
        child.nextSibling = null;
        child.previousSibling = null;
        child.index = 0;
        this.ownerDocument.removeNode(child);
        this.ownerDocument.endTransaction();
        this.ownerDocument.queueUpdate();
    }
    addEventListener() {}
    removeEventListener() {}
    constructor(ownerDocument){
        this._firstChild = null;
        this._lastChild = null;
        this._previousSibling = null;
        this._nextSibling = null;
        this._parentNode = null;
        this.ownerDocument = ownerDocument;
    }
}
class $3114c2382242bdc0$export$dc064fe9e59310fd extends $3114c2382242bdc0$var$BaseNode {
    get index() {
        return this._index;
    }
    set index(index) {
        this._index = index;
        this.ownerDocument.markDirty(this);
    }
    get level() {
        if (this.parentNode instanceof $3114c2382242bdc0$export$dc064fe9e59310fd) return this.parentNode.level + (this.node.type === "item" ? 1 : 0);
        return 0;
    }
    updateNode() {
        var _this_previousSibling, _this_nextSibling, _this_firstChild, _this_lastChild;
        let node = this.ownerDocument.getMutableNode(this);
        node.index = this.index;
        node.level = this.level;
        node.parentKey = this.parentNode instanceof $3114c2382242bdc0$export$dc064fe9e59310fd ? this.parentNode.node.key : null;
        var _this_previousSibling_node_key;
        node.prevKey = (_this_previousSibling_node_key = (_this_previousSibling = this.previousSibling) === null || _this_previousSibling === void 0 ? void 0 : _this_previousSibling.node.key) !== null && _this_previousSibling_node_key !== void 0 ? _this_previousSibling_node_key : null;
        var _this_nextSibling_node_key;
        node.nextKey = (_this_nextSibling_node_key = (_this_nextSibling = this.nextSibling) === null || _this_nextSibling === void 0 ? void 0 : _this_nextSibling.node.key) !== null && _this_nextSibling_node_key !== void 0 ? _this_nextSibling_node_key : null;
        node.hasChildNodes = !!this.firstChild;
        var _this_firstChild_node_key;
        node.firstChildKey = (_this_firstChild_node_key = (_this_firstChild = this.firstChild) === null || _this_firstChild === void 0 ? void 0 : _this_firstChild.node.key) !== null && _this_firstChild_node_key !== void 0 ? _this_firstChild_node_key : null;
        var _this_lastChild_node_key;
        node.lastChildKey = (_this_lastChild_node_key = (_this_lastChild = this.lastChild) === null || _this_lastChild === void 0 ? void 0 : _this_lastChild.node.key) !== null && _this_lastChild_node_key !== void 0 ? _this_lastChild_node_key : null;
    }
    setProps(obj, ref, rendered) {
        let node = this.ownerDocument.getMutableNode(this);
        let { value: value, textValue: textValue, id: id, ...props } = obj;
        props.ref = ref;
        node.props = props;
        node.rendered = rendered;
        node.value = value;
        node.textValue = textValue || (typeof rendered === "string" ? rendered : "") || obj["aria-label"] || "";
        if (id != null && id !== node.key) {
            if (this.hasSetProps) throw new Error("Cannot change the id of an item");
            node.key = id;
        }
        // If this is the first time props have been set, end the transaction started in the constructor
        // so this node can be emitted.
        if (!this.hasSetProps) {
            this.ownerDocument.addNode(this);
            this.ownerDocument.endTransaction();
            this.hasSetProps = true;
        }
        this.ownerDocument.queueUpdate();
    }
    get style() {
        return {};
    }
    hasAttribute() {}
    setAttribute() {}
    setAttributeNS() {}
    removeAttribute() {}
    constructor(type, ownerDocument){
        super(ownerDocument);
        this.nodeType = 8 // COMMENT_NODE (we'd use ELEMENT_NODE but React DevTools will fail to get its dimensions)
        ;
        this._index = 0;
        this.hasSetProps = false;
        this.node = new $3114c2382242bdc0$export$f5d856d854e74713(type, `react-aria-${++ownerDocument.nodeId}`);
        // Start a transaction so that no updates are emitted from the collection
        // until the props for this node are set. We don't know the real id for the
        // node until then, so we need to avoid emitting collections in an inconsistent state.
        this.ownerDocument.startTransaction();
    }
}
class $3114c2382242bdc0$export$408d25a4e12db025 {
    get size() {
        return this.keyMap.size;
    }
    getKeys() {
        return this.keyMap.keys();
    }
    *[Symbol.iterator]() {
        let node = this.firstKey != null ? this.keyMap.get(this.firstKey) : undefined;
        while(node){
            yield node;
            node = node.nextKey != null ? this.keyMap.get(node.nextKey) : undefined;
        }
    }
    getChildren(key) {
        let keyMap = this.keyMap;
        return {
            *[Symbol.iterator] () {
                let parent = keyMap.get(key);
                let node = (parent === null || parent === void 0 ? void 0 : parent.firstChildKey) != null ? keyMap.get(parent.firstChildKey) : null;
                while(node){
                    yield node;
                    node = node.nextKey != null ? keyMap.get(node.nextKey) : undefined;
                }
            }
        };
    }
    getKeyBefore(key) {
        let node = this.keyMap.get(key);
        if (!node) return null;
        if (node.prevKey != null) {
            node = this.keyMap.get(node.prevKey);
            while(node && node.type !== "item" && node.lastChildKey != null)node = this.keyMap.get(node.lastChildKey);
            var _node_key;
            return (_node_key = node === null || node === void 0 ? void 0 : node.key) !== null && _node_key !== void 0 ? _node_key : null;
        }
        return node.parentKey;
    }
    getKeyAfter(key) {
        let node = this.keyMap.get(key);
        if (!node) return null;
        if (node.type !== "item" && node.firstChildKey != null) return node.firstChildKey;
        while(node){
            if (node.nextKey != null) return node.nextKey;
            if (node.parentKey != null) node = this.keyMap.get(node.parentKey);
            else return null;
        }
        return null;
    }
    getFirstKey() {
        return this.firstKey;
    }
    getLastKey() {
        let node = this.lastKey != null ? this.keyMap.get(this.lastKey) : null;
        while((node === null || node === void 0 ? void 0 : node.lastChildKey) != null)node = this.keyMap.get(node.lastChildKey);
        var _node_key;
        return (_node_key = node === null || node === void 0 ? void 0 : node.key) !== null && _node_key !== void 0 ? _node_key : null;
    }
    getItem(key) {
        var _this_keyMap_get;
        return (_this_keyMap_get = this.keyMap.get(key)) !== null && _this_keyMap_get !== void 0 ? _this_keyMap_get : null;
    }
    at() {
        throw new Error("Not implemented");
    }
    clone() {
        // We need to clone using this.constructor so that subclasses have the right prototype.
        // TypeScript isn't happy about this yet.
        // https://github.com/microsoft/TypeScript/issues/3841
        let Constructor = this.constructor;
        let collection = new Constructor();
        collection.keyMap = new Map(this.keyMap);
        collection.firstKey = this.firstKey;
        collection.lastKey = this.lastKey;
        return collection;
    }
    addNode(node) {
        if (this.frozen) throw new Error("Cannot add a node to a frozen collection");
        this.keyMap.set(node.key, node);
    }
    removeNode(key) {
        if (this.frozen) throw new Error("Cannot remove a node to a frozen collection");
        this.keyMap.delete(key);
    }
    commit(firstKey, lastKey, isSSR = false) {
        if (this.frozen) throw new Error("Cannot commit a frozen collection");
        this.firstKey = firstKey;
        this.lastKey = lastKey;
        this.frozen = !isSSR;
    }
    constructor(){
        this.keyMap = new Map();
        this.firstKey = null;
        this.lastKey = null;
        this.frozen = false;
    }
}
class $3114c2382242bdc0$export$b34a105447964f9f extends $3114c2382242bdc0$var$BaseNode {
    get isConnected() {
        return true;
    }
    createElement(type) {
        return new $3114c2382242bdc0$export$dc064fe9e59310fd(type, this);
    }
    /**
   * Lazily gets a mutable instance of a Node. If the node has already
   * been cloned during this update cycle, it just returns the existing one.
   */ getMutableNode(element) {
        let node = element.node;
        if (!this.mutatedNodes.has(element)) {
            node = element.node.clone();
            this.mutatedNodes.add(element);
            element.node = node;
        }
        this.markDirty(element);
        return node;
    }
    getMutableCollection() {
        if (!this.isSSR && !this.collectionMutated) {
            this.collection = this.collection.clone();
            this.collectionMutated = true;
        }
        return this.collection;
    }
    markDirty(node) {
        this.dirtyNodes.add(node);
    }
    startTransaction() {
        this.transactionCount++;
    }
    endTransaction() {
        this.transactionCount--;
    }
    addNode(element) {
        let collection = this.getMutableCollection();
        if (!collection.getItem(element.node.key)) {
            collection.addNode(element.node);
            for (let child of element)this.addNode(child);
        }
        this.markDirty(element);
    }
    removeNode(node) {
        for (let child of node)this.removeNode(child);
        let collection = this.getMutableCollection();
        collection.removeNode(node.node.key);
        this.markDirty(node);
    }
    /** Finalizes the collection update, updating all nodes and freezing the collection. */ getCollection() {
        if (this.transactionCount > 0) return this.collection;
        this.updateCollection();
        return this.collection;
    }
    updateCollection() {
        for (let element of this.dirtyNodes)if (element instanceof $3114c2382242bdc0$export$dc064fe9e59310fd && element.isConnected) element.updateNode();
        this.dirtyNodes.clear();
        if (this.mutatedNodes.size) {
            var _this_firstChild, _this_lastChild;
            let collection = this.getMutableCollection();
            for (let element of this.mutatedNodes)if (element.isConnected) collection.addNode(element.node);
            var _this_firstChild_node_key, _this_lastChild_node_key;
            collection.commit((_this_firstChild_node_key = (_this_firstChild = this.firstChild) === null || _this_firstChild === void 0 ? void 0 : _this_firstChild.node.key) !== null && _this_firstChild_node_key !== void 0 ? _this_firstChild_node_key : null, (_this_lastChild_node_key = (_this_lastChild = this.lastChild) === null || _this_lastChild === void 0 ? void 0 : _this_lastChild.node.key) !== null && _this_lastChild_node_key !== void 0 ? _this_lastChild_node_key : null, this.isSSR);
            this.mutatedNodes.clear();
        }
        this.collectionMutated = false;
    }
    queueUpdate() {
        // Don't emit any updates if there is a transaction in progress.
        // queueUpdate should be called again after the transaction.
        if (this.dirtyNodes.size === 0 || this.transactionCount > 0) return;
        for (let fn of this.subscriptions)fn();
    }
    subscribe(fn) {
        this.subscriptions.add(fn);
        return ()=>this.subscriptions.delete(fn);
    }
    resetAfterSSR() {
        if (this.isSSR) {
            this.isSSR = false;
            this.firstChild = null;
            this.lastChild = null;
            this.nodeId = 0;
        }
    }
    constructor(collection){
        // @ts-ignore
        super(null);
        this.nodeType = 11 // DOCUMENT_FRAGMENT_NODE
        ;
        this.ownerDocument = this;
        this.dirtyNodes = new Set();
        this.isSSR = false;
        this.nodeId = 0;
        this.nodesByProps = new WeakMap();
        this.mutatedNodes = new Set();
        this.subscriptions = new Set();
        this.transactionCount = 0;
        this.collection = collection;
        this.collectionMutated = true;
    }
}
function $3114c2382242bdc0$export$727c8fc270210f13(props) {
    let { children: children, items: items, idScope: idScope, addIdAndValue: addIdAndValue, dependencies: dependencies = [] } = props;
    // Invalidate the cache whenever the parent value changes.
    let cache = (0, $bzgmy$react.useMemo)(()=>new WeakMap(), dependencies);
    return (0, $bzgmy$react.useMemo)(()=>{
        if (items && typeof children === "function") {
            let res = [];
            for (let item of items){
                let rendered = cache.get(item);
                if (!rendered) {
                    rendered = children(item);
                    var _rendered_props_id, _ref;
                    // @ts-ignore
                    let key = (_ref = (_rendered_props_id = rendered.props.id) !== null && _rendered_props_id !== void 0 ? _rendered_props_id : item.key) !== null && _ref !== void 0 ? _ref : item.id;
                    // eslint-disable-next-line max-depth
                    if (key == null) throw new Error("Could not determine key for item");
                    // eslint-disable-next-line max-depth
                    if (idScope) key = idScope + ":" + key;
                    // Note: only works if wrapped Item passes through id...
                    rendered = /*#__PURE__*/ (0, $bzgmy$react.cloneElement)(rendered, addIdAndValue ? {
                        key: key,
                        id: key,
                        value: item
                    } : {
                        key: key
                    });
                    cache.set(item, rendered);
                }
                res.push(rendered);
            }
            return res;
        } else if (typeof children !== "function") return children;
    }, [
        children,
        items,
        cache,
        idScope,
        addIdAndValue
    ]);
}
function $3114c2382242bdc0$export$901dbff4e54a6dd0(props) {
    return $3114c2382242bdc0$export$727c8fc270210f13({
        ...props,
        addIdAndValue: true
    });
}
const $3114c2382242bdc0$var$ShallowRenderContext = /*#__PURE__*/ (0, $bzgmy$react.createContext)(false);
function $3114c2382242bdc0$export$6cd28814d92fa9c9(props, initialCollection) {
    let { collection: collection, document: document } = $3114c2382242bdc0$export$7cd71aa5ddd6dc4e(initialCollection);
    let portal = $3114c2382242bdc0$export$ad42d5efb4461b31(props, document);
    return {
        portal: portal,
        collection: collection
    };
}
// React 16 and 17 don't support useSyncExternalStore natively, and the shim provided by React does not support getServerSnapshot.
// This wrapper uses the shim, but additionally calls getServerSnapshot during SSR (according to SSRProvider).
function $3114c2382242bdc0$var$useSyncExternalStoreFallback(subscribe, getSnapshot, getServerSnapshot) {
    let isSSR = (0, $bzgmy$reactaria.useIsSSR)();
    let isSSRRef = (0, $bzgmy$react.useRef)(isSSR);
    // This is read immediately inside the wrapper, which also runs during render.
    // We just need a ref to avoid invalidating the callback itself, which
    // would cause React to re-run the callback more than necessary.
    // eslint-disable-next-line rulesdir/pure-render
    isSSRRef.current = isSSR;
    let getSnapshotWrapper = (0, $bzgmy$react.useCallback)(()=>{
        return isSSRRef.current ? getServerSnapshot() : getSnapshot();
    }, [
        getSnapshot,
        getServerSnapshot
    ]);
    return (0, $bzgmy$usesyncexternalstoreshimindexjs.useSyncExternalStore)(subscribe, getSnapshotWrapper);
}
const $3114c2382242bdc0$var$useSyncExternalStore = typeof (0, ($parcel$interopDefault($bzgmy$react)))["useSyncExternalStore"] === "function" ? (0, ($parcel$interopDefault($bzgmy$react)))["useSyncExternalStore"] : $3114c2382242bdc0$var$useSyncExternalStoreFallback;
function $3114c2382242bdc0$export$7cd71aa5ddd6dc4e(initialCollection) {
    // The document instance is mutable, and should never change between renders.
    // useSyncExternalStore is used to subscribe to updates, which vends immutable Collection objects.
    let document = (0, $bzgmy$react.useMemo)(()=>new $3114c2382242bdc0$export$b34a105447964f9f(initialCollection || new $3114c2382242bdc0$export$408d25a4e12db025()), [
        initialCollection
    ]);
    let subscribe = (0, $bzgmy$react.useCallback)((fn)=>document.subscribe(fn), [
        document
    ]);
    let getSnapshot = (0, $bzgmy$react.useCallback)(()=>{
        let collection = document.getCollection();
        if (document.isSSR) // After SSR is complete, reset the document to empty so it is ready for React to render the portal into.
        // We do this _after_ getting the collection above so that the collection still has content in it from SSR
        // during the current render, before React has finished the client render.
        document.resetAfterSSR();
        return collection;
    }, [
        document
    ]);
    let getServerSnapshot = (0, $bzgmy$react.useCallback)(()=>{
        document.isSSR = true;
        return document.getCollection();
    }, [
        document
    ]);
    let collection = $3114c2382242bdc0$var$useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
    return {
        collection: collection,
        document: document
    };
}
const $3114c2382242bdc0$var$SSRContext = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
const $3114c2382242bdc0$export$8c25dea96356a8b6 = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
function $3114c2382242bdc0$export$ad42d5efb4461b31(props, document) {
    let ctx = (0, $bzgmy$react.useContext)($3114c2382242bdc0$export$8c25dea96356a8b6);
    let doc = document !== null && document !== void 0 ? document : ctx;
    let children = $3114c2382242bdc0$export$901dbff4e54a6dd0(props);
    let wrappedChildren = (0, $bzgmy$react.useMemo)(()=>/*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($3114c2382242bdc0$var$ShallowRenderContext.Provider, {
            value: true
        }, children), [
        children
    ]);
    // During SSR, we render the content directly, and append nodes to the document during render.
    // The collection children return null so that nothing is actually rendered into the HTML.
    return (0, $bzgmy$reactaria.useIsSSR)() ? /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($3114c2382242bdc0$var$SSRContext.Provider, {
        value: doc
    }, wrappedChildren) : /*#__PURE__*/ (0, $bzgmy$reactdom.createPortal)(wrappedChildren, doc);
}
function $3114c2382242bdc0$export$813b5978dd974d8(props) {
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, ($parcel$interopDefault($bzgmy$react))).Fragment, null, $3114c2382242bdc0$export$ad42d5efb4461b31(props));
}
function $3114c2382242bdc0$export$aeba0b1fb3dcd8b8(type, props, ref) {
    let isShallow = (0, $bzgmy$react.useContext)($3114c2382242bdc0$var$ShallowRenderContext);
    var _useSSRCollectionNode;
    if (isShallow) // Elements cannot be re-parented, so the context will always be there.
    // eslint-disable-next-line react-hooks/rules-of-hooks
    return (_useSSRCollectionNode = $3114c2382242bdc0$export$e7c29ae2353b16ea(type, props, ref, "children" in props ? props.children : null)) !== null && _useSSRCollectionNode !== void 0 ? _useSSRCollectionNode : /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, ($parcel$interopDefault($bzgmy$react))).Fragment, null);
    return null;
}
function $3114c2382242bdc0$export$636783d3732b5559(props, ref, rendered) {
    // Return a callback ref that sets the props object on the fake DOM node.
    return (0, $bzgmy$react.useCallback)((element)=>{
        element === null || element === void 0 ? void 0 : element.setProps(props, ref, rendered);
    }, [
        props,
        ref,
        rendered
    ]);
}
function $3114c2382242bdc0$export$e7c29ae2353b16ea(Type, props, ref, rendered, children) {
    // During SSR, portals are not supported, so the collection children will be wrapped in an SSRContext.
    // Since SSR occurs only once, we assume that the elements are rendered in order and never re-render.
    // Therefore we can create elements in our collection document during render so that they are in the
    // collection by the time we need to use the collection to render to the real DOM.
    // After hydration, we switch to client rendering using the portal.
    let itemRef = $3114c2382242bdc0$export$636783d3732b5559(props, ref, rendered);
    let parentNode = (0, $bzgmy$react.useContext)($3114c2382242bdc0$var$SSRContext);
    if (parentNode) {
        // Guard against double rendering in strict mode.
        let element = parentNode.ownerDocument.nodesByProps.get(props);
        if (!element) {
            element = parentNode.ownerDocument.createElement(Type);
            element.setProps(props, ref, rendered);
            parentNode.appendChild(element);
            parentNode.ownerDocument.updateCollection();
            parentNode.ownerDocument.nodesByProps.set(props, element);
        }
        return children ? /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($3114c2382242bdc0$var$SSRContext.Provider, {
            value: element
        }, children) : null;
    }
    // @ts-ignore
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement(Type, {
        ref: itemRef
    }, children);
}
function $3114c2382242bdc0$var$Section(props, ref) {
    let children = $3114c2382242bdc0$export$901dbff4e54a6dd0(props);
    return $3114c2382242bdc0$export$e7c29ae2353b16ea("section", props, ref, null, children);
}
const $3114c2382242bdc0$export$6e2c8f0811a474ce = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($3114c2382242bdc0$var$Section);
const $3114c2382242bdc0$export$db36075d98ba73d3 = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
const $3114c2382242bdc0$export$4feb769f8ddf26c5 = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
function $3114c2382242bdc0$export$fb8073518f34e6ec(props) {
    let ctx = (0, $bzgmy$react.useContext)($3114c2382242bdc0$export$db36075d98ba73d3);
    props = (0, $bzgmy$reactaria.mergeProps)(ctx, props);
    props.dependencies = ((ctx === null || ctx === void 0 ? void 0 : ctx.dependencies) || []).concat(props.dependencies);
    let renderer = typeof props.children === "function" ? props.children : null;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($3114c2382242bdc0$export$4feb769f8ddf26c5.Provider, {
        value: renderer
    }, $3114c2382242bdc0$export$901dbff4e54a6dd0(props));
}


/*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 



const $c5ccf687772c0422$export$91172ebb93c441a2 = Symbol("callback");
const $c5ccf687772c0422$export$8e0ef2c5844bfb6b = Symbol("default");
function $c5ccf687772c0422$export$2881499e37b75b9a({ values: values, children: children }) {
    for (let [Context, value] of values)// @ts-ignore
    children = /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement(Context.Provider, {
        value: value
    }, children);
    return children;
}
function $c5ccf687772c0422$export$4d86445c2cf5e3(props) {
    let { className: className, style: style, children: children, defaultClassName: defaultClassName, defaultChildren: defaultChildren, values: values } = props;
    return (0, $bzgmy$react.useMemo)(()=>{
        let computedClassName;
        let computedStyle;
        let computedChildren;
        if (typeof className === "function") computedClassName = className(values);
        else computedClassName = className;
        if (typeof style === "function") computedStyle = style(values);
        else computedStyle = style;
        if (typeof children === "function") computedChildren = children(values);
        else if (children == null) computedChildren = defaultChildren;
        else computedChildren = children;
        return {
            className: computedClassName !== null && computedClassName !== void 0 ? computedClassName : defaultClassName,
            style: computedStyle,
            children: computedChildren,
            "data-rac": ""
        };
    }, [
        className,
        style,
        children,
        defaultClassName,
        defaultChildren,
        values
    ]);
}
function $c5ccf687772c0422$export$c245e6201fed2f75(// https://stackoverflow.com/questions/60898079/typescript-type-t-or-function-t-usage
value, wrap) {
    return (renderProps)=>wrap(typeof value === "function" ? value(renderProps) : value, renderProps);
}
function $c5ccf687772c0422$export$fabf2dc03a41866e(context, slot) {
    let ctx = (0, $bzgmy$react.useContext)(context);
    if (slot === null) // An explicit `null` slot means don't use context.
    return null;
    if (ctx && typeof ctx === "object" && "slots" in ctx && ctx.slots) {
        let availableSlots = new Intl.ListFormat().format(Object.keys(ctx.slots).map((p)=>`"${p}"`));
        if (!slot && !ctx.slots[$c5ccf687772c0422$export$8e0ef2c5844bfb6b]) throw new Error(`A slot prop is required. Valid slot names are ${availableSlots}.`);
        let slotKey = slot || $c5ccf687772c0422$export$8e0ef2c5844bfb6b;
        if (!ctx.slots[slotKey]) // @ts-ignore
        throw new Error(`Invalid slot "${slot}". Valid slot names are ${availableSlots}.`);
        return ctx.slots[slotKey];
    }
    // @ts-ignore
    return ctx;
}
function $c5ccf687772c0422$export$29f1550f4b0d4415(props, ref, context) {
    let ctx = $c5ccf687772c0422$export$fabf2dc03a41866e(context, props.slot) || {};
    // @ts-ignore - TS says "Type 'unique symbol' cannot be used as an index type." but not sure why.
    let { ref: contextRef, [$c5ccf687772c0422$export$91172ebb93c441a2]: callback, ...contextProps } = ctx;
    let mergedRef = (0, $bzgmy$reactariautils.useObjectRef)((0, $bzgmy$react.useMemo)(()=>(0, $bzgmy$reactariautils.mergeRefs)(ref, contextRef), [
        ref,
        contextRef
    ]));
    let mergedProps = (0, $bzgmy$reactariautils.mergeProps)(contextProps, props);
    // mergeProps does not merge `style`. Adding this there might be a breaking change.
    if ("style" in contextProps && contextProps.style && typeof contextProps.style === "object" && "style" in props && props.style && typeof props.style === "object") // @ts-ignore
    mergedProps.style = {
        ...contextProps.style,
        ...props.style
    };
    // A parent component might need the props from a child, so call slot callback if needed.
    (0, $bzgmy$react.useEffect)(()=>{
        if (callback) callback(props);
    }, [
        callback,
        props
    ]);
    return [
        mergedProps,
        mergedRef
    ];
}
function $c5ccf687772c0422$export$9d4c57ee4c6ffdd8() {
    // Assume we do have the slot in the initial render.
    let [hasSlot, setHasSlot] = (0, $bzgmy$react.useState)(true);
    let hasRun = (0, $bzgmy$react.useRef)(false);
    // A callback ref which will run when the slotted element mounts.
    // This should happen before the useLayoutEffect below.
    let ref = (0, $bzgmy$react.useCallback)((el)=>{
        hasRun.current = true;
        setHasSlot(!!el);
    }, []);
    // If the callback hasn't been called, then reset to false.
    (0, $bzgmy$reactariautils.useLayoutEffect)(()=>{
        if (!hasRun.current) setHasSlot(false);
    }, []);
    return [
        ref,
        hasSlot
    ];
}
function $c5ccf687772c0422$export$6d3443f2c48bfc20(ref, isReady = true) {
    let [isEntering, setEntering] = (0, $bzgmy$react.useState)(true);
    $c5ccf687772c0422$var$useAnimation(ref, isEntering && isReady, (0, $bzgmy$react.useCallback)(()=>setEntering(false), []));
    return isEntering && isReady;
}
function $c5ccf687772c0422$export$45fda7c47f93fd48(ref, isOpen) {
    // State to trigger a re-render after animation is complete, which causes the element to be removed from the DOM.
    // Ref to track the state we're in, so we don't immediately reset isExiting to true after the animation.
    let [isExiting, setExiting] = (0, $bzgmy$react.useState)(false);
    let [exitState, setExitState] = (0, $bzgmy$react.useState)("idle");
    // If isOpen becomes false, set isExiting to true.
    if (!isOpen && ref.current && exitState === "idle") {
        isExiting = true;
        setExiting(true);
        setExitState("exiting");
    }
    // If we exited, and the element has been removed, reset exit state to idle.
    if (!ref.current && exitState === "exited") setExitState("idle");
    $c5ccf687772c0422$var$useAnimation(ref, isExiting, (0, $bzgmy$react.useCallback)(()=>{
        setExitState("exited");
        setExiting(false);
    }, []));
    return isExiting;
}
function $c5ccf687772c0422$var$useAnimation(ref, isActive, onEnd) {
    let prevAnimation = (0, $bzgmy$react.useRef)(null);
    if (isActive && ref.current) // This is ok because we only read it in the layout effect below, immediately after the commit phase.
    // We could move this to another effect that runs every render, but this would be unnecessarily slow.
    // We only need the computed style right before the animation becomes active.
    // eslint-disable-next-line rulesdir/pure-render
    prevAnimation.current = window.getComputedStyle(ref.current).animation;
    (0, $bzgmy$reactariautils.useLayoutEffect)(()=>{
        if (isActive && ref.current) {
            // Make sure there's actually an animation, and it wasn't there before we triggered the update.
            let computedStyle = window.getComputedStyle(ref.current);
            if (computedStyle.animationName && computedStyle.animationName !== "none" && computedStyle.animation !== prevAnimation.current) {
                let onAnimationEnd = (e)=>{
                    if (e.target === ref.current) {
                        element.removeEventListener("animationend", onAnimationEnd);
                        (0, ($parcel$interopDefault($bzgmy$reactdom))).flushSync(()=>{
                            onEnd();
                        });
                    }
                };
                let element = ref.current;
                element.addEventListener("animationend", onAnimationEnd);
                return ()=>{
                    element.removeEventListener("animationend", onAnimationEnd);
                };
            } else onEnd();
        }
    }, [
        ref,
        isActive,
        onEnd
    ]);
}
// React doesn't understand the <template> element, which doesn't have children like a normal element.
// It will throw an error during hydration when it expects the firstChild to contain content rendered
// on the server, when in reality, the browser will have placed this inside the `content` document fragment.
// This monkey patches the firstChild property for our special hidden template elements to work around this error.
// See https://github.com/facebook/react/issues/19932
if (typeof HTMLTemplateElement !== "undefined") {
    const getFirstChild = Object.getOwnPropertyDescriptor(Node.prototype, "firstChild").get;
    Object.defineProperty(HTMLTemplateElement.prototype, "firstChild", {
        configurable: true,
        enumerable: true,
        get: function() {
            if (this.dataset.reactAriaHidden) return this.content.firstChild;
            else return getFirstChild.call(this);
        }
    });
}
const $c5ccf687772c0422$export$94b6d0abf7d33e8c = /*#__PURE__*/ (0, $bzgmy$react.createContext)(false);
// Portal to nowhere
const $c5ccf687772c0422$var$hiddenFragment = typeof DocumentFragment !== "undefined" ? new DocumentFragment() : null;
function $c5ccf687772c0422$export$8dc98ba7eadeaa56(props) {
    let isHidden = (0, $bzgmy$react.useContext)($c5ccf687772c0422$export$94b6d0abf7d33e8c);
    let isSSR = (0, $bzgmy$reactaria.useIsSSR)();
    if (isHidden) // Don't hide again if we are already hidden.
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, ($parcel$interopDefault($bzgmy$react))).Fragment, null, props.children);
    let children = /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($c5ccf687772c0422$export$94b6d0abf7d33e8c.Provider, {
        value: true
    }, props.children);
    // In SSR, portals are not supported by React. Instead, render into a <template>
    // element, which the browser will never display to the user. In addition, the
    // content is not part of the DOM tree, so it won't affect ids or other accessibility attributes.
    return isSSR ? /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("template", {
        "data-react-aria-hidden": true
    }, children) : /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$reactdom))).createPortal(children, $c5ccf687772c0422$var$hiddenFragment);
}
function $c5ccf687772c0422$export$86427a43e3e48ebb(fn) {
    let Wrapper = (props, ref)=>{
        let isHidden = (0, $bzgmy$react.useContext)($c5ccf687772c0422$export$94b6d0abf7d33e8c);
        if (isHidden) return null;
        return fn(props, ref);
    };
    // @ts-ignore - for react dev tools
    Wrapper.displayName = fn.displayName || fn.name;
    return (0, ($parcel$interopDefault($bzgmy$react))).forwardRef(Wrapper);
}
function $c5ccf687772c0422$export$ef03459518577ad4(props) {
    const prefix = /^(data-.*)$/;
    let filteredProps = {};
    for(const prop in props)if (!prefix.test(prop)) filteredProps[prop] = props[prop];
    return filteredProps;
}



/*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 


const $c87397ee936d2bda$export$e2509388b49734e7 = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
function $c87397ee936d2bda$var$Link(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $c87397ee936d2bda$export$e2509388b49734e7);
    let ElementType = props.href ? "a" : "span";
    let { linkProps: linkProps, isPressed: isPressed } = (0, $bzgmy$reactaria.useLink)({
        ...props,
        elementType: ElementType
    }, ref);
    let { hoverProps: hoverProps, isHovered: isHovered } = (0, $bzgmy$reactaria.useHover)(props);
    let { focusProps: focusProps, isFocused: isFocused, isFocusVisible: isFocusVisible } = (0, $bzgmy$reactaria.useFocusRing)();
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        defaultClassName: "react-aria-Link",
        values: {
            isCurrent: !!props["aria-current"],
            isDisabled: props.isDisabled || false,
            isPressed: isPressed,
            isHovered: isHovered,
            isFocused: isFocused,
            isFocusVisible: isFocusVisible
        }
    });
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement(ElementType, {
        ref: ref,
        slot: props.slot || undefined,
        ...(0, $bzgmy$reactaria.mergeProps)(renderProps, linkProps, hoverProps, focusProps),
        "data-focused": isFocused || undefined,
        "data-hovered": isHovered || undefined,
        "data-pressed": isPressed || undefined,
        "data-focus-visible": isFocusVisible || undefined,
        "data-current": !!props["aria-current"] || undefined,
        "data-disabled": props.isDisabled || undefined
    }, renderProps.children);
}
/**
 * A link allows a user to navigate to another page or resource within a web page
 * or application.
 */ const $c87397ee936d2bda$export$a6c7ac8248d6e38a = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($c87397ee936d2bda$var$Link);



const $afa44b644f65ed30$export$65596d3621b0a4a0 = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
function $afa44b644f65ed30$var$Breadcrumbs(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $afa44b644f65ed30$export$65596d3621b0a4a0);
    let { portal: portal, collection: collection } = (0, $3114c2382242bdc0$export$6cd28814d92fa9c9)(props);
    // Render the portal first so that we have the collection by the time we render the DOM in SSR
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, ($parcel$interopDefault($bzgmy$react))).Fragment, null, portal, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($afa44b644f65ed30$var$BreadcrumbsInner, {
        props: props,
        collection: collection,
        breadcrumbsRef: ref
    }));
}
function $afa44b644f65ed30$var$BreadcrumbsInner({ props: props, collection: collection, breadcrumbsRef: ref }) {
    var _props_className;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("ol", {
        ref: ref,
        ...(0, $bzgmy$reactariautils.filterDOMProps)(props, {
            labelable: true
        }),
        slot: props.slot || undefined,
        style: props.style,
        className: (_props_className = props.className) !== null && _props_className !== void 0 ? _props_className : "react-aria-Breadcrumbs"
    }, [
        ...collection
    ].map((node, i)=>/*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($afa44b644f65ed30$var$BreadcrumbItem, {
            key: node.key,
            node: node,
            isCurrent: i === collection.size - 1,
            isDisabled: props.isDisabled,
            onAction: props.onAction
        })));
}
/**
 * Breadcrumbs display a hierarchy of links to the current page or resource in an application.
 */ const $afa44b644f65ed30$export$2dc68d50d56fbbd = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($afa44b644f65ed30$var$Breadcrumbs);
function $afa44b644f65ed30$var$Breadcrumb(props, ref) {
    return (0, $3114c2382242bdc0$export$e7c29ae2353b16ea)("item", props, ref, props.children);
}
/**
 * A Breadcrumb represents an individual item in a `<Breadcrumbs>` list.
 */ const $afa44b644f65ed30$export$dabcc1ec9dd9d1cc = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($afa44b644f65ed30$var$Breadcrumb);
function $afa44b644f65ed30$var$BreadcrumbItem({ node: node, isCurrent: isCurrent, isDisabled: isDisabled, onAction: onAction }) {
    // Recreating useBreadcrumbItem because we want to use composition instead of having the link builtin.
    let linkProps = {
        "aria-current": isCurrent ? "page" : null,
        isDisabled: isDisabled || isCurrent,
        onPress: ()=>onAction === null || onAction === void 0 ? void 0 : onAction(node.key)
    };
    var _node_props_className;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("li", {
        ...(0, $bzgmy$reactariautils.filterDOMProps)(node.props),
        ref: node.props.ref,
        style: node.props.style,
        className: (_node_props_className = node.props.className) !== null && _node_props_className !== void 0 ? _node_props_className : "react-aria-Breadcrumb"
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c87397ee936d2bda$export$e2509388b49734e7).Provider, {
        value: linkProps
    }, node.rendered));
}


/*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 



const $b856e6788a7ea5bf$var$additionalButtonHTMLAttributes = new Set([
    "form",
    "formAction",
    "formEncType",
    "formMethod",
    "formNoValidate",
    "formTarget",
    "name",
    "value"
]);
const $b856e6788a7ea5bf$export$24d547caef80ccd1 = /*#__PURE__*/ (0, $bzgmy$react.createContext)({});
function $b856e6788a7ea5bf$var$Button(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $b856e6788a7ea5bf$export$24d547caef80ccd1);
    let ctx = props;
    let { buttonProps: buttonProps, isPressed: isPressed } = (0, $bzgmy$reactaria.useButton)(props, ref);
    let { focusProps: focusProps, isFocused: isFocused, isFocusVisible: isFocusVisible } = (0, $bzgmy$reactaria.useFocusRing)(props);
    let { hoverProps: hoverProps, isHovered: isHovered } = (0, $bzgmy$reactaria.useHover)(props);
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        values: {
            isHovered: isHovered,
            isPressed: isPressed,
            isFocused: isFocused,
            isFocusVisible: isFocusVisible,
            isDisabled: props.isDisabled || false
        },
        defaultClassName: "react-aria-Button"
    });
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("button", {
        ...(0, $bzgmy$reactariautils.filterDOMProps)(props, {
            propNames: $b856e6788a7ea5bf$var$additionalButtonHTMLAttributes
        }),
        ...(0, $bzgmy$reactaria.mergeProps)(buttonProps, focusProps, hoverProps),
        ...renderProps,
        ref: ref,
        slot: props.slot || undefined,
        "data-disabled": props.isDisabled || undefined,
        "data-pressed": ctx.isPressed || isPressed || undefined,
        "data-hovered": isHovered || undefined,
        "data-focused": isFocused || undefined,
        "data-focus-visible": isFocusVisible || undefined
    });
}
/**
 * A button allows a user to perform an action, with mouse, touch, and keyboard interactions.
 */ const $b856e6788a7ea5bf$export$353f5b6fc5456de1 = /*#__PURE__*/ (0, $c5ccf687772c0422$export$86427a43e3e48ebb)($b856e6788a7ea5bf$var$Button);


/*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 





/*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 

const $1063ac64677bb13f$export$d688439359537581 = /*#__PURE__*/ (0, $bzgmy$react.createContext)({});
function $1063ac64677bb13f$var$Heading(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $1063ac64677bb13f$export$d688439359537581);
    let { children: children, level: level = 3, className: className, ...domProps } = props;
    let Element = `h${level}`;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement(Element, {
        ...domProps,
        ref: ref,
        className: className !== null && className !== void 0 ? className : "react-aria-Heading"
    }, children);
}
const $1063ac64677bb13f$export$a8a3e93435678ff9 = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($1063ac64677bb13f$var$Heading);



/*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 

const $a8a589c28affdc40$export$9afb8bc826b033ea = /*#__PURE__*/ (0, $bzgmy$react.createContext)({});
function $a8a589c28affdc40$var$Text(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $a8a589c28affdc40$export$9afb8bc826b033ea);
    let { elementType: ElementType = "span", ...domProps } = props;
    // @ts-ignore
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement(ElementType, {
        className: "react-aria-Text",
        ...domProps,
        ref: ref
    });
}
const $a8a589c28affdc40$export$5f1af8db9871e1d6 = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($a8a589c28affdc40$var$Text);


const $3f539f26b167ddde$export$3b805cea1f178355 = /*#__PURE__*/ (0, $bzgmy$react.createContext)({});
const $3f539f26b167ddde$export$233dd9682e1ad64b = /*#__PURE__*/ (0, $bzgmy$react.createContext)({});
const $3f539f26b167ddde$export$9e31dcedda1dadc7 = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
const $3f539f26b167ddde$export$5e0fc348c00f87a0 = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
function $3f539f26b167ddde$var$Calendar(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $3f539f26b167ddde$export$3b805cea1f178355);
    let { locale: locale } = (0, $bzgmy$reactaria.useLocale)();
    let state = (0, $bzgmy$reactstately.useCalendarState)({
        ...props,
        locale: locale,
        createCalendar: $bzgmy$internationalizeddate.createCalendar
    });
    let { calendarProps: calendarProps, prevButtonProps: prevButtonProps, nextButtonProps: nextButtonProps, errorMessageProps: errorMessageProps, title: title } = (0, $bzgmy$reactaria.useCalendar)(props, state);
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        values: {
            state: state,
            isDisabled: props.isDisabled || false,
            isInvalid: state.isValueInvalid
        },
        defaultClassName: "react-aria-Calendar"
    });
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...renderProps,
        ...calendarProps,
        ref: ref,
        slot: props.slot || undefined,
        "data-disabled": props.isDisabled || undefined,
        "data-invalid": state.isValueInvalid || undefined
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c5ccf687772c0422$export$2881499e37b75b9a), {
        values: [
            [
                (0, $b856e6788a7ea5bf$export$24d547caef80ccd1),
                {
                    slots: {
                        previous: prevButtonProps,
                        next: nextButtonProps
                    }
                }
            ],
            [
                (0, $1063ac64677bb13f$export$d688439359537581),
                {
                    "aria-hidden": true,
                    level: 2,
                    children: title
                }
            ],
            [
                $3f539f26b167ddde$export$9e31dcedda1dadc7,
                state
            ],
            [
                (0, $a8a589c28affdc40$export$9afb8bc826b033ea),
                {
                    slots: {
                        errorMessage: errorMessageProps
                    }
                }
            ]
        ]
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $bzgmy$reactaria.VisuallyHidden), null, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("h2", null, calendarProps["aria-label"])), renderProps.children, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $bzgmy$reactaria.VisuallyHidden), null, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("button", {
        "aria-label": nextButtonProps["aria-label"],
        disabled: nextButtonProps.isDisabled,
        onClick: ()=>state.focusNextPage(),
        tabIndex: -1
    }))));
}
/**
 * A calendar displays one or more date grids and allows users to select a single date.
 */ const $3f539f26b167ddde$export$e1aef45b828286de = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($3f539f26b167ddde$var$Calendar);
function $3f539f26b167ddde$var$RangeCalendar(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $3f539f26b167ddde$export$233dd9682e1ad64b);
    let { locale: locale } = (0, $bzgmy$reactaria.useLocale)();
    let state = (0, $bzgmy$reactstately.useRangeCalendarState)({
        ...props,
        locale: locale,
        createCalendar: $bzgmy$internationalizeddate.createCalendar
    });
    let { calendarProps: calendarProps, prevButtonProps: prevButtonProps, nextButtonProps: nextButtonProps, errorMessageProps: errorMessageProps, title: title } = (0, $bzgmy$reactaria.useRangeCalendar)(props, state, ref);
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        values: {
            state: state,
            isDisabled: props.isDisabled || false,
            isInvalid: state.isValueInvalid
        },
        defaultClassName: "react-aria-RangeCalendar"
    });
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...renderProps,
        ...calendarProps,
        ref: ref,
        slot: props.slot || undefined,
        "data-disabled": props.isDisabled || undefined,
        "data-invalid": state.isValueInvalid || undefined
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c5ccf687772c0422$export$2881499e37b75b9a), {
        values: [
            [
                (0, $b856e6788a7ea5bf$export$24d547caef80ccd1),
                {
                    slots: {
                        previous: prevButtonProps,
                        next: nextButtonProps
                    }
                }
            ],
            [
                (0, $1063ac64677bb13f$export$d688439359537581),
                {
                    "aria-hidden": true,
                    level: 2,
                    children: title
                }
            ],
            [
                $3f539f26b167ddde$export$5e0fc348c00f87a0,
                state
            ],
            [
                (0, $a8a589c28affdc40$export$9afb8bc826b033ea),
                {
                    slots: {
                        errorMessage: errorMessageProps
                    }
                }
            ]
        ]
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $bzgmy$reactaria.VisuallyHidden), null, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("h2", null, calendarProps["aria-label"])), renderProps.children, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $bzgmy$reactaria.VisuallyHidden), null, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("button", {
        "aria-label": nextButtonProps["aria-label"],
        disabled: nextButtonProps.isDisabled,
        onClick: ()=>state.focusNextPage(),
        tabIndex: -1
    }))));
}
/**
 * A range calendar displays one or more date grids and allows users to select a contiguous range of dates.
 */ const $3f539f26b167ddde$export$a4f5c8b89d277a8d = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($3f539f26b167ddde$var$RangeCalendar);
const $3f539f26b167ddde$var$InternalCalendarGridContext = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
function $3f539f26b167ddde$var$CalendarGrid(props, ref) {
    let calendarState = (0, $bzgmy$react.useContext)($3f539f26b167ddde$export$9e31dcedda1dadc7);
    let rangeCalendarState = (0, $bzgmy$react.useContext)($3f539f26b167ddde$export$5e0fc348c00f87a0);
    let state = calendarState !== null && calendarState !== void 0 ? calendarState : rangeCalendarState;
    let startDate = state.visibleRange.start;
    if (props.offset) startDate = startDate.add(props.offset);
    let { gridProps: gridProps, headerProps: headerProps, weekDays: weekDays } = (0, $bzgmy$reactaria.useCalendarGrid)({
        startDate: startDate,
        endDate: (0, $bzgmy$internationalizeddate.endOfMonth)(startDate),
        weekdayStyle: props.weekdayStyle
    }, state);
    var _props_className;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($3f539f26b167ddde$var$InternalCalendarGridContext.Provider, {
        value: {
            headerProps: headerProps,
            weekDays: weekDays,
            startDate: startDate
        }
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("table", {
        ...(0, $bzgmy$reactariautils.filterDOMProps)(props),
        ...gridProps,
        ref: ref,
        style: props.style,
        className: (_props_className = props.className) !== null && _props_className !== void 0 ? _props_className : "react-aria-CalendarGrid"
    }, typeof props.children !== "function" ? props.children : /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, ($parcel$interopDefault($bzgmy$react))).Fragment, null, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($3f539f26b167ddde$export$22e2d15eaa4d2377, null, (day)=>/*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($3f539f26b167ddde$export$ad2135cac3a11b3d, null, day)), /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($3f539f26b167ddde$export$e11f8ba65d857bff, null, props.children))));
}
/**
 * A calendar grid displays a single grid of days within a calendar or range calendar which
 * can be keyboard navigated and selected by the user.
 */ const $3f539f26b167ddde$export$5bd780d491cfc46c = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($3f539f26b167ddde$var$CalendarGrid);
function $3f539f26b167ddde$var$CalendarGridHeader(props, ref) {
    let { children: children, style: style, className: className } = props;
    let { headerProps: headerProps, weekDays: weekDays } = (0, $bzgmy$react.useContext)($3f539f26b167ddde$var$InternalCalendarGridContext);
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("thead", {
        ...(0, $bzgmy$reactariautils.filterDOMProps)(props),
        ...headerProps,
        ref: ref,
        style: style,
        className: className || "react-aria-CalendarGridHeader"
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("tr", null, weekDays.map((day, key)=>/*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).cloneElement(children(day), {
            key: key
        }))));
}
/**
 * A calendar grid header displays a row of week day names at the top of a month.
 */ const $3f539f26b167ddde$export$22e2d15eaa4d2377 = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($3f539f26b167ddde$var$CalendarGridHeader);
function $3f539f26b167ddde$var$CalendarHeaderCell(props, ref) {
    let { children: children, style: style, className: className } = props;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("th", {
        ...(0, $bzgmy$reactariautils.filterDOMProps)(props),
        ref: ref,
        style: style,
        className: className || "react-aria-CalendarHeaderCell"
    }, children);
}
/**
 * A calendar header cell displays a week day name at the top of a column within a calendar.
 */ const $3f539f26b167ddde$export$ad2135cac3a11b3d = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($3f539f26b167ddde$var$CalendarHeaderCell);
function $3f539f26b167ddde$var$CalendarGridBody(props, ref) {
    let { children: children, style: style, className: className } = props;
    let calendarState = (0, $bzgmy$react.useContext)($3f539f26b167ddde$export$9e31dcedda1dadc7);
    let rangeCalendarState = (0, $bzgmy$react.useContext)($3f539f26b167ddde$export$5e0fc348c00f87a0);
    let state = calendarState !== null && calendarState !== void 0 ? calendarState : rangeCalendarState;
    let { startDate: startDate } = (0, $bzgmy$react.useContext)($3f539f26b167ddde$var$InternalCalendarGridContext);
    let { locale: locale } = (0, $bzgmy$reactaria.useLocale)();
    let weeksInMonth = (0, $bzgmy$internationalizeddate.getWeeksInMonth)(startDate, locale);
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("tbody", {
        ...(0, $bzgmy$reactariautils.filterDOMProps)(props),
        ref: ref,
        style: style,
        className: className || "react-aria-CalendarGridBody"
    }, [
        ...new Array(weeksInMonth).keys()
    ].map((weekIndex)=>/*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("tr", {
            key: weekIndex
        }, state.getDatesInWeek(weekIndex, startDate).map((date, i)=>date ? /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).cloneElement(children(date), {
                key: i
            }) : /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("td", {
                key: i
            })))));
}
/**
 * A calendar grid body displays a grid of calendar cells within a month.
 */ const $3f539f26b167ddde$export$e11f8ba65d857bff = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($3f539f26b167ddde$var$CalendarGridBody);
function $3f539f26b167ddde$var$CalendarCell({ date: date, ...otherProps }, ref) {
    let calendarState = (0, $bzgmy$react.useContext)($3f539f26b167ddde$export$9e31dcedda1dadc7);
    let rangeCalendarState = (0, $bzgmy$react.useContext)($3f539f26b167ddde$export$5e0fc348c00f87a0);
    let state = calendarState !== null && calendarState !== void 0 ? calendarState : rangeCalendarState;
    var _useContext;
    let { startDate: currentMonth } = (_useContext = (0, $bzgmy$react.useContext)($3f539f26b167ddde$var$InternalCalendarGridContext)) !== null && _useContext !== void 0 ? _useContext : {
        startDate: state.visibleRange.start
    };
    let buttonRef = (0, $bzgmy$react.useRef)(null);
    let { cellProps: cellProps, buttonProps: buttonProps, ...states } = (0, $bzgmy$reactaria.useCalendarCell)({
        date: date
    }, state, buttonRef);
    let { hoverProps: hoverProps, isHovered: isHovered } = (0, $bzgmy$reactaria.useHover)({
        ...otherProps,
        isDisabled: states.isDisabled
    });
    let { focusProps: focusProps, isFocusVisible: isFocusVisible } = (0, $bzgmy$reactaria.useFocusRing)();
    let isOutsideMonth = !(0, $bzgmy$internationalizeddate.isSameMonth)(currentMonth, date);
    let isSelectionStart = false;
    let isSelectionEnd = false;
    if ("highlightedRange" in state && state.highlightedRange) {
        isSelectionStart = (0, $bzgmy$internationalizeddate.isSameDay)(date, state.highlightedRange.start);
        isSelectionEnd = (0, $bzgmy$internationalizeddate.isSameDay)(date, state.highlightedRange.end);
    }
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...otherProps,
        defaultChildren: states.formattedDate,
        defaultClassName: "react-aria-CalendarCell",
        values: {
            date: date,
            isHovered: isHovered,
            isOutsideMonth: isOutsideMonth,
            isFocusVisible: isFocusVisible,
            isSelectionStart: isSelectionStart,
            isSelectionEnd: isSelectionEnd,
            ...states
        }
    });
    let dataAttrs = {
        "data-focused": states.isFocused || undefined,
        "data-hovered": isHovered || undefined,
        "data-pressed": states.isPressed || undefined,
        "data-unavailable": states.isUnavailable || undefined,
        "data-disabled": states.isDisabled || undefined,
        "data-focus-visible": isFocusVisible || undefined,
        "data-outside-visible-range": states.isOutsideVisibleRange || undefined,
        "data-outside-month": isOutsideMonth || undefined,
        "data-selected": states.isSelected || undefined,
        "data-selection-start": isSelectionStart || undefined,
        "data-selection-end": isSelectionEnd || undefined,
        "data-invalid": states.isInvalid || undefined
    };
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("td", {
        ...cellProps,
        ref: ref
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...(0, $bzgmy$reactaria.mergeProps)((0, $bzgmy$reactariautils.filterDOMProps)(otherProps), buttonProps, focusProps, hoverProps, dataAttrs, renderProps),
        ref: buttonRef
    }));
}
/**
 * A calendar cell displays a date cell within a calendar grid which can be selected by the user.
 */ const $3f539f26b167ddde$export$5d847498420df57b = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($3f539f26b167ddde$var$CalendarCell);


/*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 


/*
 * Copyright 2023 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 


const $846a838139f2ac6b$export$ff05c3ac10437e03 = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
function $846a838139f2ac6b$var$FieldError(props, ref) {
    let validation = (0, $bzgmy$react.useContext)($846a838139f2ac6b$export$ff05c3ac10437e03);
    if (!(validation === null || validation === void 0 ? void 0 : validation.isInvalid)) return null;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($846a838139f2ac6b$var$FieldErrorInner, {
        ...props,
        ref: ref
    });
}
/**
 * A FieldError displays validation errors for a form field.
 */ const $846a838139f2ac6b$export$f551688fc98f2e09 = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($846a838139f2ac6b$var$FieldError);
const $846a838139f2ac6b$var$FieldErrorInner = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)((props, ref)=>{
    let validation = (0, $bzgmy$react.useContext)($846a838139f2ac6b$export$ff05c3ac10437e03);
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        defaultClassName: "react-aria-FieldError",
        defaultChildren: validation.validationErrors.join(" "),
        values: validation
    });
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $a8a589c28affdc40$export$5f1af8db9871e1d6), {
        slot: "errorMessage",
        ...renderProps,
        ref: ref
    });
});



/*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 

const $84ae0bf5bd8e2a5f$export$75b6ee27786ba447 = /*#__PURE__*/ (0, $bzgmy$react.createContext)({});
function $84ae0bf5bd8e2a5f$var$Label(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $84ae0bf5bd8e2a5f$export$75b6ee27786ba447);
    let { elementType: ElementType = "label", ...labelProps } = props;
    // @ts-ignore
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement(ElementType, {
        className: "react-aria-Label",
        ...labelProps,
        ref: ref
    });
}
const $84ae0bf5bd8e2a5f$export$b04be29aa201d4f5 = /*#__PURE__*/ (0, $c5ccf687772c0422$export$86427a43e3e48ebb)($84ae0bf5bd8e2a5f$var$Label);




const $e733553516d848a9$export$baf37c4be89255b8 = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
const $e733553516d848a9$export$139c5b8563afc1fc = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
function $e733553516d848a9$var$CheckboxGroup(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $e733553516d848a9$export$baf37c4be89255b8);
    var _props_validationBehavior;
    let state = (0, $bzgmy$reactstately.useCheckboxGroupState)({
        ...props,
        validationBehavior: (_props_validationBehavior = props.validationBehavior) !== null && _props_validationBehavior !== void 0 ? _props_validationBehavior : "native"
    });
    let [labelRef, label] = (0, $c5ccf687772c0422$export$9d4c57ee4c6ffdd8)();
    var _props_validationBehavior1;
    let { groupProps: groupProps, labelProps: labelProps, descriptionProps: descriptionProps, errorMessageProps: errorMessageProps, ...validation } = (0, $bzgmy$reactaria.useCheckboxGroup)({
        ...props,
        label: label,
        validationBehavior: (_props_validationBehavior1 = props.validationBehavior) !== null && _props_validationBehavior1 !== void 0 ? _props_validationBehavior1 : "native"
    }, state);
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        values: {
            isDisabled: state.isDisabled,
            isReadOnly: state.isReadOnly,
            isRequired: props.isRequired || false,
            isInvalid: state.isInvalid,
            state: state
        },
        defaultClassName: "react-aria-CheckboxGroup"
    });
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...groupProps,
        ...renderProps,
        ref: ref,
        slot: props.slot || undefined,
        "data-readonly": state.isReadOnly || undefined,
        "data-required": props.isRequired || undefined,
        "data-invalid": state.isInvalid || undefined,
        "data-disabled": props.isDisabled || undefined
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c5ccf687772c0422$export$2881499e37b75b9a), {
        values: [
            [
                $e733553516d848a9$export$139c5b8563afc1fc,
                state
            ],
            [
                (0, $84ae0bf5bd8e2a5f$export$75b6ee27786ba447),
                {
                    ...labelProps,
                    ref: labelRef,
                    elementType: "span"
                }
            ],
            [
                (0, $a8a589c28affdc40$export$9afb8bc826b033ea),
                {
                    slots: {
                        description: descriptionProps,
                        errorMessage: errorMessageProps
                    }
                }
            ],
            [
                (0, $846a838139f2ac6b$export$ff05c3ac10437e03),
                validation
            ]
        ]
    }, renderProps.children));
}
const $e733553516d848a9$export$b085522c77523c51 = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
function $e733553516d848a9$var$Checkbox(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $e733553516d848a9$export$b085522c77523c51);
    let inputRef = (0, $bzgmy$react.useRef)(null);
    let groupState = (0, $bzgmy$react.useContext)($e733553516d848a9$export$139c5b8563afc1fc);
    var _props_validationBehavior;
    let { labelProps: labelProps, inputProps: inputProps, isSelected: isSelected, isDisabled: isDisabled, isReadOnly: isReadOnly, isPressed: isPressed, isInvalid: isInvalid } = groupState ? (0, $bzgmy$reactaria.useCheckboxGroupItem)({
        ...props,
        // Value is optional for standalone checkboxes, but required for CheckboxGroup items;
        // it's passed explicitly here to avoid typescript error (requires ignore).
        // @ts-ignore
        value: props.value,
        // ReactNode type doesn't allow function children.
        children: typeof props.children === "function" ? true : props.children
    }, groupState, inputRef) : (0, $bzgmy$reactaria.useCheckbox)({
        ...props,
        children: typeof props.children === "function" ? true : props.children,
        validationBehavior: (_props_validationBehavior = props.validationBehavior) !== null && _props_validationBehavior !== void 0 ? _props_validationBehavior : "native"
    }, (0, $bzgmy$reactstately.useToggleState)(props), inputRef);
    let { isFocused: isFocused, isFocusVisible: isFocusVisible, focusProps: focusProps } = (0, $bzgmy$reactaria.useFocusRing)();
    let isInteractionDisabled = isDisabled || isReadOnly;
    let { hoverProps: hoverProps, isHovered: isHovered } = (0, $bzgmy$reactaria.useHover)({
        ...props,
        isDisabled: isInteractionDisabled
    });
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        // TODO: should data attrs go on the label or on the <input>? useCheckbox passes them to the input...
        ...props,
        defaultClassName: "react-aria-Checkbox",
        values: {
            isSelected: isSelected,
            isIndeterminate: props.isIndeterminate || false,
            isPressed: isPressed,
            isHovered: isHovered,
            isFocused: isFocused,
            isFocusVisible: isFocusVisible,
            isDisabled: isDisabled,
            isReadOnly: isReadOnly,
            isInvalid: isInvalid,
            isRequired: props.isRequired || false
        }
    });
    let DOMProps = (0, $bzgmy$reactariautils.filterDOMProps)(props);
    delete DOMProps.id;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("label", {
        ...(0, $bzgmy$reactaria.mergeProps)(DOMProps, labelProps, hoverProps, renderProps),
        ref: ref,
        slot: props.slot || undefined,
        "data-selected": isSelected || undefined,
        "data-indeterminate": props.isIndeterminate || undefined,
        "data-pressed": isPressed || undefined,
        "data-hovered": isHovered || undefined,
        "data-focused": isFocused || undefined,
        "data-focus-visible": isFocusVisible || undefined,
        "data-disabled": isDisabled || undefined,
        "data-readonly": isReadOnly || undefined,
        "data-invalid": isInvalid || undefined,
        "data-required": props.isRequired || undefined
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $bzgmy$reactaria.VisuallyHidden), {
        elementType: "span"
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("input", {
        ...inputProps,
        ...focusProps,
        ref: inputRef
    })), renderProps.children);
}
/**
 * A checkbox allows a user to select multiple items from a list of individual items, or
 * to mark one individual item as selected.
 */ const $e733553516d848a9$export$48513f6b9f8ce62d = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($e733553516d848a9$var$Checkbox);
/**
 * A checkbox group allows a user to select multiple items from a list of options.
 */ const $e733553516d848a9$export$4aa08d5625cb8ead = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($e733553516d848a9$var$CheckboxGroup);


/*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 






/*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 


const $dcae72abc18c0045$export$f9c6924e160136d1 = /*#__PURE__*/ (0, $bzgmy$react.createContext)({});
function $dcae72abc18c0045$var$Group(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $dcae72abc18c0045$export$f9c6924e160136d1);
    let { isDisabled: isDisabled, isInvalid: isInvalid, onHoverStart: onHoverStart, onHoverChange: onHoverChange, onHoverEnd: onHoverEnd, ...otherProps } = props;
    let { hoverProps: hoverProps, isHovered: isHovered } = (0, $bzgmy$reactaria.useHover)({
        onHoverStart: onHoverStart,
        onHoverChange: onHoverChange,
        onHoverEnd: onHoverEnd,
        isDisabled: isDisabled
    });
    let { isFocused: isFocused, isFocusVisible: isFocusVisible, focusProps: focusProps } = (0, $bzgmy$reactaria.useFocusRing)({
        within: true
    });
    isDisabled !== null && isDisabled !== void 0 ? isDisabled : isDisabled = !!props["aria-disabled"] && props["aria-disabled"] !== "false";
    isInvalid !== null && isInvalid !== void 0 ? isInvalid : isInvalid = !!props["aria-invalid"] && props["aria-invalid"] !== "false";
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        values: {
            isHovered: isHovered,
            isFocusWithin: isFocused,
            isFocusVisible: isFocusVisible,
            isDisabled: isDisabled,
            isInvalid: isInvalid
        },
        defaultClassName: "react-aria-Group"
    });
    var _props_role, _props_slot;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...(0, $bzgmy$reactaria.mergeProps)(otherProps, focusProps, hoverProps),
        ...renderProps,
        ref: ref,
        role: (_props_role = props.role) !== null && _props_role !== void 0 ? _props_role : "group",
        slot: (_props_slot = props.slot) !== null && _props_slot !== void 0 ? _props_slot : undefined,
        "data-focus-within": isFocused || undefined,
        "data-hovered": isHovered || undefined,
        "data-focus-visible": isFocusVisible || undefined,
        "data-disabled": isDisabled || undefined,
        "data-invalid": isInvalid || undefined
    }, renderProps.children);
}
/**
 * A group represents a set of related UI controls, and supports interactive states for styling.
 */ const $dcae72abc18c0045$export$eb2fcfdbd7ba97d4 = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($dcae72abc18c0045$var$Group);


/*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 


const $1bcfcef5af644e13$export$37fb8590cf2c088c = /*#__PURE__*/ (0, $bzgmy$react.createContext)({});
let $1bcfcef5af644e13$var$filterHoverProps = (props)=>{
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    let { onHoverStart: onHoverStart, onHoverChange: onHoverChange, onHoverEnd: onHoverEnd, ...otherProps } = props;
    return otherProps;
};
function $1bcfcef5af644e13$var$Input(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $1bcfcef5af644e13$export$37fb8590cf2c088c);
    let { hoverProps: hoverProps, isHovered: isHovered } = (0, $bzgmy$reactaria.useHover)(props);
    let { isFocused: isFocused, isFocusVisible: isFocusVisible, focusProps: focusProps } = (0, $bzgmy$reactaria.useFocusRing)({
        isTextInput: true,
        autoFocus: props.autoFocus
    });
    let isInvalid = !!props["aria-invalid"] && props["aria-invalid"] !== "false";
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        values: {
            isHovered: isHovered,
            isFocused: isFocused,
            isFocusVisible: isFocusVisible,
            isDisabled: props.disabled || false,
            isInvalid: isInvalid
        },
        defaultClassName: "react-aria-Input"
    });
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("input", {
        ...(0, $bzgmy$reactaria.mergeProps)($1bcfcef5af644e13$var$filterHoverProps(props), focusProps, hoverProps),
        ...renderProps,
        ref: ref,
        "data-focused": isFocused || undefined,
        "data-disabled": props.disabled || undefined,
        "data-hovered": isHovered || undefined,
        "data-focus-visible": isFocusVisible || undefined,
        "data-invalid": isInvalid || undefined
    });
}
/**
 * An input allows a user to input text.
 */ const $1bcfcef5af644e13$export$f5b8910cec6cf069 = /*#__PURE__*/ (0, $c5ccf687772c0422$export$86427a43e3e48ebb)($1bcfcef5af644e13$var$Input);



/*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 


/*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 


function $368d79437ab76c11$export$2cfc5be7a55829f6(options) {
    let dragAndDropHooks = (0, $bzgmy$react.useMemo)(()=>{
        let { onDrop: onDrop, onInsert: onInsert, onItemDrop: onItemDrop, onReorder: onReorder, onRootDrop: onRootDrop, getItems: getItems, renderDragPreview: renderDragPreview, renderDropIndicator: renderDropIndicator, dropTargetDelegate: dropTargetDelegate } = options;
        let isDraggable = !!getItems;
        let isDroppable = !!(onDrop || onInsert || onItemDrop || onReorder || onRootDrop);
        let hooks = {};
        if (isDraggable) {
            hooks.useDraggableCollectionState = function useDraggableCollectionStateOverride(props) {
                return (0, $bzgmy$reactstately.useDraggableCollectionState)({
                    ...props,
                    ...options
                });
            };
            hooks.useDraggableCollection = (0, $bzgmy$reactaria.useDraggableCollection);
            hooks.useDraggableItem = (0, $bzgmy$reactaria.useDraggableItem);
            hooks.DragPreview = (0, $bzgmy$reactaria.DragPreview);
            hooks.renderDragPreview = renderDragPreview;
        }
        if (isDroppable) {
            hooks.useDroppableCollectionState = function useDroppableCollectionStateOverride(props) {
                return (0, $bzgmy$reactstately.useDroppableCollectionState)({
                    ...props,
                    ...options
                });
            }, hooks.useDroppableItem = (0, $bzgmy$reactaria.useDroppableItem);
            hooks.useDroppableCollection = function useDroppableCollectionOverride(props, state, ref) {
                return (0, $bzgmy$reactaria.useDroppableCollection)({
                    ...props,
                    ...options
                }, state, ref);
            };
            hooks.useDropIndicator = (0, $bzgmy$reactaria.useDropIndicator);
            hooks.renderDropIndicator = renderDropIndicator;
            hooks.dropTargetDelegate = dropTargetDelegate;
            hooks.ListDropTargetDelegate = (0, $bzgmy$reactaria.ListDropTargetDelegate);
        }
        return hooks;
    }, [
        options
    ]);
    return {
        dragAndDropHooks: dragAndDropHooks
    };
}
const $368d79437ab76c11$export$f55761759794cf55 = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
function $368d79437ab76c11$var$DropIndicator(props, ref) {
    let { render: render } = (0, $bzgmy$react.useContext)($368d79437ab76c11$export$f55761759794cf55);
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, ($parcel$interopDefault($bzgmy$react))).Fragment, null, render(props, ref));
}
/**
 * A DropIndicator is rendered between items in a collection to indicate where dropped data will be inserted.
 */ const $368d79437ab76c11$export$62ed72bc21f6b8a6 = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($368d79437ab76c11$var$DropIndicator);
const $368d79437ab76c11$export$d188a835a7bc5783 = /*#__PURE__*/ (0, $bzgmy$react.createContext)({});




/*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 


const $c7efb75a1a3fe2d2$export$e0e4026c12a8bdbb = /*#__PURE__*/ (0, $bzgmy$react.createContext)({});
function $c7efb75a1a3fe2d2$var$Header(originalProps, originalRef) {
    let [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(originalProps, originalRef, $c7efb75a1a3fe2d2$export$e0e4026c12a8bdbb);
    let shallow = (0, $3114c2382242bdc0$export$aeba0b1fb3dcd8b8)("header", originalProps, originalRef);
    if (shallow) return shallow;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("header", {
        className: "react-aria-Header",
        ...props,
        ref: ref
    }, props.children);
}
const $c7efb75a1a3fe2d2$export$8b251419efc915eb = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($c7efb75a1a3fe2d2$var$Header);



/*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 




const $54b202ace195eaa4$export$6615d83f6de245ce = /*#__PURE__*/ (0, $bzgmy$react.createContext)({});
function $54b202ace195eaa4$var$Separator(originalProps, originalRef) {
    let [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(originalProps, originalRef, $54b202ace195eaa4$export$6615d83f6de245ce);
    let { elementType: elementType, orientation: orientation, style: style, className: className } = props;
    let Element = elementType || "hr";
    if (Element === "hr" && orientation === "vertical") Element = "div";
    let { separatorProps: separatorProps } = (0, $bzgmy$reactaria.useSeparator)({
        elementType: elementType,
        orientation: orientation
    });
    let shallow = (0, $3114c2382242bdc0$export$aeba0b1fb3dcd8b8)("separator", originalProps, originalRef);
    if (shallow) return shallow;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement(Element, {
        ...(0, $bzgmy$reactariautils.filterDOMProps)(props),
        ...separatorProps,
        style: style,
        className: className !== null && className !== void 0 ? className : "react-aria-Separator",
        ref: ref,
        slot: props.slot || undefined
    });
}
const $54b202ace195eaa4$export$1ff3c3f08ae963c0 = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($54b202ace195eaa4$var$Separator);



const $a03b42240404b420$export$7ff8f37d2d81a48d = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
const $a03b42240404b420$export$7c5906fe4f1f2af2 = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
function $a03b42240404b420$var$ListBox(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $a03b42240404b420$export$7ff8f37d2d81a48d);
    let isHidden = (0, $bzgmy$react.useContext)((0, $c5ccf687772c0422$export$94b6d0abf7d33e8c));
    let state = (0, $bzgmy$react.useContext)($a03b42240404b420$export$7c5906fe4f1f2af2);
    let document = (0, $bzgmy$react.useContext)((0, $3114c2382242bdc0$export$8c25dea96356a8b6));
    // The structure of ListBox is a bit strange because it needs to work inside other components like ComboBox and Select.
    // Those components render two copies of their children so that the collection can be built even when the popover is closed.
    // The first copy sends a collection document via context which we render the collection portal into.
    // The second copy sends a ListState object via context which we use to render the ListBox without rebuilding the state.
    // Otherwise, we have a standalone ListBox, so we need to create a collection and state ourselves.
    if (document) return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $3114c2382242bdc0$export$813b5978dd974d8), props);
    if (state) return isHidden ? null : /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($a03b42240404b420$var$ListBoxInner, {
        state: state,
        props: props,
        listBoxRef: ref
    });
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($a03b42240404b420$var$StandaloneListBox, {
        props: props,
        listBoxRef: ref
    });
}
function $a03b42240404b420$var$StandaloneListBox({ props: props, listBoxRef: listBoxRef }) {
    let { portal: portal, collection: collection } = (0, $3114c2382242bdc0$export$6cd28814d92fa9c9)(props);
    props = {
        ...props,
        collection: collection,
        children: null,
        items: null
    };
    let state = (0, $bzgmy$reactstately.useListState)(props);
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, ($parcel$interopDefault($bzgmy$react))).Fragment, null, portal, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($a03b42240404b420$var$ListBoxInner, {
        state: state,
        props: props,
        listBoxRef: listBoxRef
    }));
}
/**
 * A listbox displays a list of options and allows a user to select one or more of them.
 */ const $a03b42240404b420$export$41f133550aa26f48 = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($a03b42240404b420$var$ListBox);
function $a03b42240404b420$var$ListBoxInner({ state: state, props: props, listBoxRef: listBoxRef }) {
    let { dragAndDropHooks: dragAndDropHooks, layout: layout = "stack", orientation: orientation = "vertical" } = props;
    let { collection: collection, selectionManager: selectionManager } = state;
    let isListDraggable = !!(dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.useDraggableCollectionState);
    let isListDroppable = !!(dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.useDroppableCollectionState);
    let { direction: direction } = (0, $bzgmy$reactaria.useLocale)();
    let { disabledBehavior: disabledBehavior, disabledKeys: disabledKeys } = selectionManager;
    let collator = (0, $bzgmy$reactaria.useCollator)({
        usage: "search",
        sensitivity: "base"
    });
    let keyboardDelegate = (0, $bzgmy$react.useMemo)(()=>props.keyboardDelegate || new (0, $bzgmy$reactaria.ListKeyboardDelegate)({
            collection: collection,
            collator: collator,
            ref: listBoxRef,
            disabledKeys: disabledBehavior === "selection" ? new Set() : disabledKeys,
            layout: layout,
            orientation: orientation,
            direction: direction
        }), [
        collection,
        collator,
        listBoxRef,
        disabledBehavior,
        disabledKeys,
        orientation,
        direction,
        props.keyboardDelegate,
        layout
    ]);
    let { listBoxProps: listBoxProps } = (0, $bzgmy$reactaria.useListBox)({
        ...props,
        shouldSelectOnPressUp: isListDraggable || props.shouldSelectOnPressUp,
        keyboardDelegate: keyboardDelegate
    }, state, listBoxRef);
    let children = (0, $3114c2382242bdc0$export$727c8fc270210f13)({
        items: collection,
        children: (item)=>{
            switch(item.type){
                case "section":
                    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($a03b42240404b420$var$ListBoxSection, {
                        section: item
                    });
                case "separator":
                    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $54b202ace195eaa4$export$1ff3c3f08ae963c0), item.props);
                case "item":
                    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($a03b42240404b420$var$Option, {
                        item: item
                    });
                default:
                    throw new Error("Unsupported node type in Menu: " + item.type);
            }
        }
    });
    let dragHooksProvided = (0, $bzgmy$react.useRef)(isListDraggable);
    let dropHooksProvided = (0, $bzgmy$react.useRef)(isListDroppable);
    (0, $bzgmy$react.useEffect)(()=>{
        if (dragHooksProvided.current !== isListDraggable) console.warn("Drag hooks were provided during one render, but not another. This should be avoided as it may produce unexpected behavior.");
        if (dropHooksProvided.current !== isListDroppable) console.warn("Drop hooks were provided during one render, but not another. This should be avoided as it may produce unexpected behavior.");
    }, [
        isListDraggable,
        isListDroppable
    ]);
    let dragState = undefined;
    let dropState = undefined;
    let droppableCollection = undefined;
    let isRootDropTarget = false;
    let dragPreview = null;
    let preview = (0, $bzgmy$react.useRef)(null);
    if (isListDraggable && dragAndDropHooks) {
        dragState = dragAndDropHooks.useDraggableCollectionState({
            collection: collection,
            selectionManager: selectionManager,
            preview: dragAndDropHooks.renderDragPreview ? preview : undefined
        });
        dragAndDropHooks.useDraggableCollection({}, dragState, listBoxRef);
        let DragPreview = dragAndDropHooks.DragPreview;
        dragPreview = dragAndDropHooks.renderDragPreview ? /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement(DragPreview, {
            ref: preview
        }, dragAndDropHooks.renderDragPreview) : null;
    }
    if (isListDroppable && dragAndDropHooks) {
        dropState = dragAndDropHooks.useDroppableCollectionState({
            collection: collection,
            selectionManager: selectionManager
        });
        let dropTargetDelegate = dragAndDropHooks.dropTargetDelegate || new dragAndDropHooks.ListDropTargetDelegate(collection, listBoxRef, {
            orientation: orientation,
            layout: layout,
            direction: direction
        });
        droppableCollection = dragAndDropHooks.useDroppableCollection({
            keyboardDelegate: keyboardDelegate,
            dropTargetDelegate: dropTargetDelegate
        }, dropState, listBoxRef);
        isRootDropTarget = dropState.isDropTarget({
            type: "root"
        });
    }
    let { focusProps: focusProps, isFocused: isFocused, isFocusVisible: isFocusVisible } = (0, $bzgmy$reactaria.useFocusRing)();
    let renderValues = {
        isDropTarget: isRootDropTarget,
        isEmpty: state.collection.size === 0,
        isFocused: isFocused,
        isFocusVisible: isFocusVisible,
        layout: props.layout || "stack",
        state: state
    };
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        className: props.className,
        style: props.style,
        defaultClassName: "react-aria-ListBox",
        values: renderValues
    });
    let emptyState = null;
    if (state.collection.size === 0 && props.renderEmptyState) emptyState = /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        // eslint-disable-next-line
        role: "option",
        style: {
            display: "contents"
        }
    }, props.renderEmptyState(renderValues));
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $bzgmy$reactaria.FocusScope), null, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...(0, $bzgmy$reactariautils.filterDOMProps)(props),
        ...(0, $bzgmy$reactaria.mergeProps)(listBoxProps, focusProps, droppableCollection === null || droppableCollection === void 0 ? void 0 : droppableCollection.collectionProps),
        ...renderProps,
        ref: listBoxRef,
        slot: props.slot || undefined,
        onScroll: props.onScroll,
        "data-drop-target": isRootDropTarget || undefined,
        "data-empty": state.collection.size === 0 || undefined,
        "data-focused": isFocused || undefined,
        "data-focus-visible": isFocusVisible || undefined,
        "data-layout": props.layout || "stack",
        "data-orientation": props.orientation || "vertical"
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c5ccf687772c0422$export$2881499e37b75b9a), {
        values: [
            [
                $a03b42240404b420$export$7ff8f37d2d81a48d,
                props
            ],
            [
                $a03b42240404b420$export$7c5906fe4f1f2af2,
                state
            ],
            [
                (0, $368d79437ab76c11$export$d188a835a7bc5783),
                {
                    dragAndDropHooks: dragAndDropHooks,
                    dragState: dragState,
                    dropState: dropState
                }
            ],
            [
                (0, $54b202ace195eaa4$export$6615d83f6de245ce),
                {
                    elementType: "div"
                }
            ],
            [
                (0, $368d79437ab76c11$export$f55761759794cf55),
                {
                    render: $a03b42240404b420$var$ListBoxDropIndicatorWrapper
                }
            ]
        ]
    }, children), emptyState, dragPreview));
}
function $a03b42240404b420$var$ListBoxSection({ section: section, className: className, style: style }) {
    var _section_props, _section_props1;
    let state = (0, $bzgmy$react.useContext)($a03b42240404b420$export$7c5906fe4f1f2af2);
    let [headingRef, heading] = (0, $c5ccf687772c0422$export$9d4c57ee4c6ffdd8)();
    var _section_props_arialabel;
    let { headingProps: headingProps, groupProps: groupProps } = (0, $bzgmy$reactaria.useListBoxSection)({
        heading: heading,
        "aria-label": (_section_props_arialabel = section.props["aria-label"]) !== null && _section_props_arialabel !== void 0 ? _section_props_arialabel : undefined
    });
    let children = (0, $3114c2382242bdc0$export$727c8fc270210f13)({
        items: state.collection.getChildren(section.key),
        children: (item)=>{
            switch(item.type){
                case "header":
                    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($a03b42240404b420$var$SectionHeader, {
                        item: item,
                        headingProps: headingProps,
                        headingRef: headingRef
                    });
                case "item":
                    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($a03b42240404b420$var$Option, {
                        item: item
                    });
                default:
                    throw new Error("Unsupported element type in Section: " + item.type);
            }
        }
    });
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("section", {
        ...(0, $bzgmy$reactariautils.filterDOMProps)(section.props),
        ...groupProps,
        className: className || ((_section_props = section.props) === null || _section_props === void 0 ? void 0 : _section_props.className) || "react-aria-Section",
        style: style || ((_section_props1 = section.props) === null || _section_props1 === void 0 ? void 0 : _section_props1.style),
        ref: section.props.ref
    }, children);
}
// This is a separate component so that headingProps.id doesn't override the item key in useCachedChildren.
function $a03b42240404b420$var$SectionHeader({ item: item, headingProps: headingProps, headingRef: headingRef }) {
    let { ref: ref, ...otherProps } = item.props;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c7efb75a1a3fe2d2$export$8b251419efc915eb), {
        ...headingProps,
        ...otherProps,
        ref: (0, $bzgmy$reactariautils.mergeRefs)(headingRef, ref)
    }, item.rendered);
}
function $a03b42240404b420$var$ListBoxItem(props, ref) {
    return (0, $3114c2382242bdc0$export$e7c29ae2353b16ea)("item", props, ref, props.children);
}
/**
 * A ListBoxItem represents an individual option in a ListBox.
 */ const $a03b42240404b420$export$a11e76429ed99b4 = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($a03b42240404b420$var$ListBoxItem);
function $a03b42240404b420$var$Option({ item: item }) {
    let ref = (0, $bzgmy$reactariautils.useObjectRef)(item.props.ref);
    let state = (0, $bzgmy$react.useContext)($a03b42240404b420$export$7c5906fe4f1f2af2);
    let { dragAndDropHooks: dragAndDropHooks, dragState: dragState, dropState: dropState } = (0, $bzgmy$react.useContext)((0, $368d79437ab76c11$export$d188a835a7bc5783));
    let { optionProps: optionProps, labelProps: labelProps, descriptionProps: descriptionProps, ...states } = (0, $bzgmy$reactaria.useOption)({
        key: item.key
    }, state, ref);
    let { hoverProps: hoverProps, isHovered: isHovered } = (0, $bzgmy$reactaria.useHover)({
        isDisabled: !states.allowsSelection && !states.hasAction
    });
    let draggableItem = null;
    if (dragState && dragAndDropHooks) draggableItem = dragAndDropHooks.useDraggableItem({
        key: item.key
    }, dragState);
    let droppableItem = null;
    if (dropState && dragAndDropHooks) droppableItem = dragAndDropHooks.useDroppableItem({
        target: {
            type: "item",
            key: item.key,
            dropPosition: "on"
        }
    }, dropState, ref);
    let props = item.props;
    let isDragging = dragState && dragState.isDragging(item.key);
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        id: undefined,
        children: item.rendered,
        defaultClassName: "react-aria-ListBoxItem",
        values: {
            ...states,
            isHovered: isHovered,
            selectionMode: state.selectionManager.selectionMode,
            selectionBehavior: state.selectionManager.selectionBehavior,
            allowsDragging: !!dragState,
            isDragging: isDragging,
            isDropTarget: droppableItem === null || droppableItem === void 0 ? void 0 : droppableItem.isDropTarget
        }
    });
    let renderDropIndicator = (dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.renderDropIndicator) || ((target)=>/*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $368d79437ab76c11$export$62ed72bc21f6b8a6), {
            target: target
        }));
    (0, $bzgmy$react.useEffect)(()=>{
        if (!item.textValue) console.warn("A `textValue` prop is required for <ListBoxItem> elements with non-plain text children in order to support accessibility features such as type to select.");
    }, [
        item.textValue
    ]);
    let ElementType = props.href ? "a" : "div";
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, ($parcel$interopDefault($bzgmy$react))).Fragment, null, (dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.useDropIndicator) && renderDropIndicator({
        type: "item",
        key: item.key,
        dropPosition: "before"
    }), /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement(ElementType, {
        ...(0, $bzgmy$reactaria.mergeProps)(optionProps, hoverProps, draggableItem === null || draggableItem === void 0 ? void 0 : draggableItem.dragProps, droppableItem === null || droppableItem === void 0 ? void 0 : droppableItem.dropProps),
        ...renderProps,
        ref: ref,
        "data-allows-dragging": !!dragState || undefined,
        "data-selected": states.isSelected || undefined,
        "data-disabled": states.isDisabled || undefined,
        "data-hovered": isHovered || undefined,
        "data-focused": states.isFocused || undefined,
        "data-focus-visible": states.isFocusVisible || undefined,
        "data-pressed": states.isPressed || undefined,
        "data-dragging": isDragging || undefined,
        "data-drop-target": (droppableItem === null || droppableItem === void 0 ? void 0 : droppableItem.isDropTarget) || undefined,
        "data-selection-mode": state.selectionManager.selectionMode === "none" ? undefined : state.selectionManager.selectionMode
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c5ccf687772c0422$export$2881499e37b75b9a), {
        values: [
            [
                (0, $a8a589c28affdc40$export$9afb8bc826b033ea),
                {
                    slots: {
                        label: labelProps,
                        description: descriptionProps
                    }
                }
            ]
        ]
    }, renderProps.children)), (dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.useDropIndicator) && state.collection.getKeyAfter(item.key) == null && renderDropIndicator({
        type: "item",
        key: item.key,
        dropPosition: "after"
    }));
}
function $a03b42240404b420$var$ListBoxDropIndicatorWrapper(props, ref) {
    ref = (0, $bzgmy$reactariautils.useObjectRef)(ref);
    let { dragAndDropHooks: dragAndDropHooks, dropState: dropState } = (0, $bzgmy$react.useContext)((0, $368d79437ab76c11$export$d188a835a7bc5783));
    let { dropIndicatorProps: dropIndicatorProps, isHidden: isHidden, isDropTarget: isDropTarget } = dragAndDropHooks.useDropIndicator(props, dropState, ref);
    if (isHidden) return null;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($a03b42240404b420$var$ListBoxtDropIndicatorForwardRef, {
        ...props,
        dropIndicatorProps: dropIndicatorProps,
        isDropTarget: isDropTarget,
        ref: ref
    });
}
function $a03b42240404b420$var$ListBoxtDropIndicator(props, ref) {
    let { dropIndicatorProps: dropIndicatorProps, isDropTarget: isDropTarget, ...otherProps } = props;
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...otherProps,
        defaultClassName: "react-aria-DropIndicator",
        values: {
            isDropTarget: isDropTarget
        }
    });
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...dropIndicatorProps,
        ...renderProps,
        // eslint-disable-next-line
        role: "option",
        ref: ref,
        "data-drop-target": isDropTarget || undefined
    });
}
const $a03b42240404b420$var$ListBoxtDropIndicatorForwardRef = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($a03b42240404b420$var$ListBoxtDropIndicator);


/*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 




/*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 


/*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 

const $ee5958cbdc6becc1$export$2de4954e8ae13b9f = /*#__PURE__*/ (0, $bzgmy$react.createContext)({
    placement: "bottom"
});
function $ee5958cbdc6becc1$var$OverlayArrow(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $ee5958cbdc6becc1$export$2de4954e8ae13b9f);
    let placement = props.placement;
    let style = {
        position: "absolute",
        [placement]: "100%",
        transform: placement === "top" || placement === "bottom" ? "translateX(-50%)" : "translateY(-50%)"
    };
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        defaultClassName: "react-aria-OverlayArrow",
        values: {
            placement: placement
        }
    });
    // remove undefined values from renderProps.style object so that it can be
    // spread merged with the other style object
    if (renderProps.style) Object.keys(renderProps.style).forEach((key)=>renderProps.style[key] === undefined && delete renderProps.style[key]);
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...props,
        ...renderProps,
        style: {
            ...style,
            ...renderProps.style
        },
        ref: ref,
        "data-placement": placement
    });
}
/**
 * An OverlayArrow renders a custom arrow element relative to an overlay element
 * such as a popover or tooltip such that it aligns with a trigger element.
 */ const $ee5958cbdc6becc1$export$746d02f47f4d381 = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($ee5958cbdc6becc1$var$OverlayArrow);





const $61e2b7078adb18bc$export$9b9a0cd73afb7ca4 = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
function $61e2b7078adb18bc$var$Popover(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $61e2b7078adb18bc$export$9b9a0cd73afb7ca4);
    let contextState = (0, $bzgmy$react.useContext)((0, $2979ab89b336194b$export$d2f961adcb0afbe));
    let localState = (0, $bzgmy$reactstately.useOverlayTriggerState)(props);
    let state = props.isOpen != null || props.defaultOpen != null || !contextState ? localState : contextState;
    let isExiting = (0, $c5ccf687772c0422$export$45fda7c47f93fd48)(ref, state.isOpen) || props.isExiting || false;
    let isHidden = (0, $bzgmy$react.useContext)((0, $c5ccf687772c0422$export$94b6d0abf7d33e8c));
    // If we are in a hidden tree, we still need to preserve our children.
    if (isHidden) {
        let children = props.children;
        if (typeof children === "function") children = children({
            trigger: props.trigger || null,
            placement: "bottom",
            isEntering: false,
            isExiting: false
        });
        return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, ($parcel$interopDefault($bzgmy$react))).Fragment, null, children);
    }
    if (state && !state.isOpen && !isExiting) return null;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($61e2b7078adb18bc$var$PopoverInner, {
        ...props,
        triggerRef: props.triggerRef,
        state: state,
        popoverRef: ref,
        isExiting: isExiting
    });
}
/**
 * A popover is an overlay element positioned relative to a trigger.
 */ const $61e2b7078adb18bc$export$5b6b19405a83ff9d = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($61e2b7078adb18bc$var$Popover);
function $61e2b7078adb18bc$var$PopoverInner({ state: state, isExiting: isExiting, UNSTABLE_portalContainer: UNSTABLE_portalContainer, ...props }) {
    var _props_offset;
    let { popoverProps: popoverProps, underlayProps: underlayProps, arrowProps: arrowProps, placement: placement } = (0, $bzgmy$reactaria.usePopover)({
        ...props,
        offset: (_props_offset = props.offset) !== null && _props_offset !== void 0 ? _props_offset : 8
    }, state);
    let ref = props.popoverRef;
    let isEntering = (0, $c5ccf687772c0422$export$6d3443f2c48bfc20)(ref, !!placement) || props.isEntering || false;
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        defaultClassName: "react-aria-Popover",
        values: {
            trigger: props.trigger || null,
            placement: placement,
            isEntering: isEntering,
            isExiting: isExiting
        }
    });
    let style = {
        ...popoverProps.style,
        ...renderProps.style
    };
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $bzgmy$reactaria.Overlay), {
        isExiting: isExiting,
        portalContainer: UNSTABLE_portalContainer
    }, !props.isNonModal && state.isOpen && /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...underlayProps,
        style: {
            position: "fixed",
            inset: 0
        }
    }), /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...(0, $bzgmy$reactariautils.mergeProps)((0, $bzgmy$reactariautils.filterDOMProps)(props), popoverProps),
        ...renderProps,
        ref: ref,
        slot: props.slot || undefined,
        style: style,
        "data-trigger": props.trigger,
        "data-placement": placement,
        "data-entering": isEntering || undefined,
        "data-exiting": isExiting || undefined
    }, !props.isNonModal && /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $bzgmy$reactaria.DismissButton), {
        onDismiss: state.close
    }), /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $ee5958cbdc6becc1$export$2de4954e8ae13b9f).Provider, {
        value: {
            ...arrowProps,
            placement: placement
        }
    }, renderProps.children), /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $bzgmy$reactaria.DismissButton), {
        onDismiss: state.close
    })));
}




const $2979ab89b336194b$export$8b93a07348a7730c = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
const $2979ab89b336194b$export$d2f961adcb0afbe = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
function $2979ab89b336194b$export$2e1e1122cf0cba88(props) {
    let state = (0, $bzgmy$reactstately.useOverlayTriggerState)(props);
    let buttonRef = (0, $bzgmy$react.useRef)(null);
    let { triggerProps: triggerProps, overlayProps: overlayProps } = (0, $bzgmy$reactaria.useOverlayTrigger)({
        type: "dialog"
    }, state, buttonRef);
    // Label dialog by the trigger as a fallback if there is no title slot.
    // This is done in RAC instead of hooks because otherwise we cannot distinguish
    // between context and props. Normally aria-labelledby overrides the title
    // but when sent by context we want the title to win.
    triggerProps.id = (0, $bzgmy$reactaria.useId)();
    overlayProps["aria-labelledby"] = triggerProps.id;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c5ccf687772c0422$export$2881499e37b75b9a), {
        values: [
            [
                $2979ab89b336194b$export$d2f961adcb0afbe,
                state
            ],
            [
                $2979ab89b336194b$export$8b93a07348a7730c,
                overlayProps
            ],
            [
                (0, $61e2b7078adb18bc$export$9b9a0cd73afb7ca4),
                {
                    trigger: "DialogTrigger",
                    triggerRef: buttonRef
                }
            ]
        ]
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $bzgmy$reactariainteractions.PressResponder), {
        ...triggerProps,
        ref: buttonRef,
        isPressed: state.isOpen
    }, props.children));
}
function $2979ab89b336194b$var$Dialog(props, ref) {
    let originalAriaLabelledby = props["aria-labelledby"];
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $2979ab89b336194b$export$8b93a07348a7730c);
    let { dialogProps: dialogProps, titleProps: titleProps } = (0, $bzgmy$reactaria.useDialog)({
        ...props,
        // Only pass aria-labelledby from props, not context.
        // Context is used as a fallback below.
        "aria-labelledby": originalAriaLabelledby
    }, ref);
    let state = (0, $bzgmy$react.useContext)($2979ab89b336194b$export$d2f961adcb0afbe);
    let children = props.children;
    if (typeof children === "function") children = children({
        close: (state === null || state === void 0 ? void 0 : state.close) || (()=>{})
    });
    if (!dialogProps["aria-label"] && !dialogProps["aria-labelledby"]) {
        // If aria-labelledby exists on props, we know it came from context.
        // Use that as a fallback in case there is no title slot.
        if (props["aria-labelledby"]) dialogProps["aria-labelledby"] = props["aria-labelledby"];
        else console.warn('If a Dialog does not contain a <Heading slot="title">, it must have an aria-label or aria-labelledby attribute for accessibility.');
    }
    var _props_className;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("section", {
        ...(0, $bzgmy$reactariautils.filterDOMProps)(props),
        ...dialogProps,
        ref: ref,
        slot: props.slot || undefined,
        style: props.style,
        className: (_props_className = props.className) !== null && _props_className !== void 0 ? _props_className : "react-aria-Dialog"
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c5ccf687772c0422$export$2881499e37b75b9a), {
        values: [
            [
                (0, $1063ac64677bb13f$export$d688439359537581),
                {
                    slots: {
                        [(0, $c5ccf687772c0422$export$8e0ef2c5844bfb6b)]: {},
                        title: {
                            ...titleProps,
                            level: 2
                        }
                    }
                }
            ]
        ]
    }, children));
}
/**
 * A dialog is an overlay shown above other content in an application.
 */ const $2979ab89b336194b$export$3ddf2d174ce01153 = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($2979ab89b336194b$var$Dialog);





const $1d716ce69f118fad$export$d414ccceff7063c3 = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
const $1d716ce69f118fad$export$c02625b26074192c = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
function $1d716ce69f118fad$var$ComboBox(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $1d716ce69f118fad$export$d414ccceff7063c3);
    let { collection: collection, document: document } = (0, $3114c2382242bdc0$export$7cd71aa5ddd6dc4e)();
    let { children: children, isDisabled: isDisabled = false, isInvalid: isInvalid = false, isRequired: isRequired = false } = props;
    children = (0, $bzgmy$react.useMemo)(()=>typeof children === "function" ? children({
            isOpen: false,
            isDisabled: isDisabled,
            isInvalid: isInvalid,
            isRequired: isRequired
        }) : children, [
        children,
        isDisabled,
        isInvalid,
        isRequired
    ]);
    var _props_items;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, ($parcel$interopDefault($bzgmy$react))).Fragment, null, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c5ccf687772c0422$export$8dc98ba7eadeaa56), null, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c5ccf687772c0422$export$2881499e37b75b9a), {
        values: [
            [
                (0, $3114c2382242bdc0$export$8c25dea96356a8b6),
                document
            ],
            [
                (0, $a03b42240404b420$export$7ff8f37d2d81a48d),
                {
                    items: (_props_items = props.items) !== null && _props_items !== void 0 ? _props_items : props.defaultItems
                }
            ]
        ]
    }, children)), /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($1d716ce69f118fad$var$ComboBoxInner, {
        props: props,
        collection: collection,
        comboBoxRef: ref
    }));
}
function $1d716ce69f118fad$var$ComboBoxInner({ props: props, collection: collection, comboBoxRef: ref }) {
    let { name: name, formValue: formValue = "key", allowsCustomValue: allowsCustomValue } = props;
    if (allowsCustomValue) formValue = "text";
    let { contains: contains } = (0, $bzgmy$reactaria.useFilter)({
        sensitivity: "base"
    });
    var _props_validationBehavior;
    let state = (0, $bzgmy$reactstately.useComboBoxState)({
        defaultFilter: props.defaultFilter || contains,
        ...props,
        // If props.items isn't provided, rely on collection filtering (aka listbox.items is provided or defaultItems provided to Combobox)
        items: props.items,
        children: undefined,
        collection: collection,
        validationBehavior: (_props_validationBehavior = props.validationBehavior) !== null && _props_validationBehavior !== void 0 ? _props_validationBehavior : "native"
    });
    let buttonRef = (0, $bzgmy$react.useRef)(null);
    let inputRef = (0, $bzgmy$react.useRef)(null);
    let listBoxRef = (0, $bzgmy$react.useRef)(null);
    let popoverRef = (0, $bzgmy$react.useRef)(null);
    let [labelRef, label] = (0, $c5ccf687772c0422$export$9d4c57ee4c6ffdd8)();
    var _props_validationBehavior1;
    let { buttonProps: buttonProps, inputProps: inputProps, listBoxProps: listBoxProps, labelProps: labelProps, descriptionProps: descriptionProps, errorMessageProps: errorMessageProps, ...validation } = (0, $bzgmy$reactaria.useComboBox)({
        ...(0, $c5ccf687772c0422$export$ef03459518577ad4)(props),
        label: label,
        inputRef: inputRef,
        buttonRef: buttonRef,
        listBoxRef: listBoxRef,
        popoverRef: popoverRef,
        name: formValue === "text" ? name : undefined,
        validationBehavior: (_props_validationBehavior1 = props.validationBehavior) !== null && _props_validationBehavior1 !== void 0 ? _props_validationBehavior1 : "native"
    }, state);
    // Make menu width match input + button
    let [menuWidth, setMenuWidth] = (0, $bzgmy$react.useState)(null);
    let onResize = (0, $bzgmy$react.useCallback)(()=>{
        if (inputRef.current) {
            var _buttonRef_current;
            let buttonRect = (_buttonRef_current = buttonRef.current) === null || _buttonRef_current === void 0 ? void 0 : _buttonRef_current.getBoundingClientRect();
            let inputRect = inputRef.current.getBoundingClientRect();
            let minX = buttonRect ? Math.min(buttonRect.left, inputRect.left) : inputRect.left;
            let maxX = buttonRect ? Math.max(buttonRect.right, inputRect.right) : inputRect.right;
            setMenuWidth(maxX - minX + "px");
        }
    }, [
        buttonRef,
        inputRef,
        setMenuWidth
    ]);
    (0, $bzgmy$reactariautils.useResizeObserver)({
        ref: inputRef,
        onResize: onResize
    });
    // Only expose a subset of state to renderProps function to avoid infinite render loop
    let renderPropsState = (0, $bzgmy$react.useMemo)(()=>({
            isOpen: state.isOpen,
            isDisabled: props.isDisabled || false,
            isInvalid: validation.isInvalid || false,
            isRequired: props.isRequired || false
        }), [
        state.isOpen,
        props.isDisabled,
        validation.isInvalid,
        props.isRequired
    ]);
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        values: renderPropsState,
        defaultClassName: "react-aria-ComboBox"
    });
    let DOMProps = (0, $bzgmy$reactariautils.filterDOMProps)(props);
    delete DOMProps.id;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c5ccf687772c0422$export$2881499e37b75b9a), {
        values: [
            [
                $1d716ce69f118fad$export$c02625b26074192c,
                state
            ],
            [
                (0, $84ae0bf5bd8e2a5f$export$75b6ee27786ba447),
                {
                    ...labelProps,
                    ref: labelRef
                }
            ],
            [
                (0, $b856e6788a7ea5bf$export$24d547caef80ccd1),
                {
                    ...buttonProps,
                    ref: buttonRef,
                    isPressed: state.isOpen
                }
            ],
            [
                (0, $1bcfcef5af644e13$export$37fb8590cf2c088c),
                {
                    ...inputProps,
                    ref: inputRef
                }
            ],
            [
                (0, $2979ab89b336194b$export$d2f961adcb0afbe),
                state
            ],
            [
                (0, $61e2b7078adb18bc$export$9b9a0cd73afb7ca4),
                {
                    ref: popoverRef,
                    triggerRef: inputRef,
                    placement: "bottom start",
                    isNonModal: true,
                    trigger: "ComboBox",
                    style: {
                        "--trigger-width": menuWidth
                    }
                }
            ],
            [
                (0, $a03b42240404b420$export$7ff8f37d2d81a48d),
                {
                    ...listBoxProps,
                    ref: listBoxRef
                }
            ],
            [
                (0, $a03b42240404b420$export$7c5906fe4f1f2af2),
                state
            ],
            [
                (0, $a8a589c28affdc40$export$9afb8bc826b033ea),
                {
                    slots: {
                        description: descriptionProps,
                        errorMessage: errorMessageProps
                    }
                }
            ],
            [
                (0, $dcae72abc18c0045$export$f9c6924e160136d1),
                {
                    isInvalid: validation.isInvalid,
                    isDisabled: props.isDisabled || false
                }
            ],
            [
                (0, $846a838139f2ac6b$export$ff05c3ac10437e03),
                validation
            ]
        ]
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...DOMProps,
        ...renderProps,
        ref: ref,
        slot: props.slot || undefined,
        "data-focused": state.isFocused || undefined,
        "data-open": state.isOpen || undefined,
        "data-disabled": props.isDisabled || undefined,
        "data-invalid": validation.isInvalid || undefined,
        "data-required": props.isRequired || undefined
    }), name && formValue === "key" && /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("input", {
        type: "hidden",
        name: name,
        value: state.selectedKey
    }));
}
/**
 * A combo box combines a text input with a listbox, allowing users to filter a list of options to items matching a query.
 */ const $1d716ce69f118fad$export$72b9695b8216309a = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($1d716ce69f118fad$var$ComboBox);



/*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 










const $9eb4e1c2268ca198$export$7b3e670c86da5fe8 = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
const $9eb4e1c2268ca198$export$8e17ddc448e87c1e = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
const $9eb4e1c2268ca198$export$3b08bebcf796eea0 = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
const $9eb4e1c2268ca198$export$5d8dc44abd10a920 = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
function $9eb4e1c2268ca198$var$DateField(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $9eb4e1c2268ca198$export$7b3e670c86da5fe8);
    let { locale: locale } = (0, $bzgmy$reactaria.useLocale)();
    var _props_validationBehavior;
    let state = (0, $bzgmy$reactstately.useDateFieldState)({
        ...props,
        locale: locale,
        createCalendar: $bzgmy$internationalizeddate.createCalendar,
        validationBehavior: (_props_validationBehavior = props.validationBehavior) !== null && _props_validationBehavior !== void 0 ? _props_validationBehavior : "native"
    });
    let fieldRef = (0, $bzgmy$react.useRef)(null);
    let [labelRef, label] = (0, $c5ccf687772c0422$export$9d4c57ee4c6ffdd8)();
    let inputRef = (0, $bzgmy$react.useRef)(null);
    var _props_validationBehavior1;
    let { labelProps: labelProps, fieldProps: fieldProps, inputProps: inputProps, descriptionProps: descriptionProps, errorMessageProps: errorMessageProps, ...validation } = (0, $bzgmy$reactaria.useDateField)({
        ...(0, $c5ccf687772c0422$export$ef03459518577ad4)(props),
        label: label,
        inputRef: inputRef,
        validationBehavior: (_props_validationBehavior1 = props.validationBehavior) !== null && _props_validationBehavior1 !== void 0 ? _props_validationBehavior1 : "native"
    }, state, fieldRef);
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...(0, $c5ccf687772c0422$export$ef03459518577ad4)(props),
        values: {
            state: state,
            isInvalid: state.isInvalid,
            isDisabled: state.isDisabled
        },
        defaultClassName: "react-aria-DateField"
    });
    let DOMProps = (0, $bzgmy$reactariautils.filterDOMProps)(props);
    delete DOMProps.id;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c5ccf687772c0422$export$2881499e37b75b9a), {
        values: [
            [
                $9eb4e1c2268ca198$export$3b08bebcf796eea0,
                state
            ],
            [
                (0, $dcae72abc18c0045$export$f9c6924e160136d1),
                {
                    ...fieldProps,
                    ref: fieldRef,
                    isInvalid: state.isInvalid
                }
            ],
            [
                (0, $1bcfcef5af644e13$export$37fb8590cf2c088c),
                {
                    ...inputProps,
                    ref: inputRef
                }
            ],
            [
                (0, $84ae0bf5bd8e2a5f$export$75b6ee27786ba447),
                {
                    ...labelProps,
                    ref: labelRef,
                    elementType: "span"
                }
            ],
            [
                (0, $a8a589c28affdc40$export$9afb8bc826b033ea),
                {
                    slots: {
                        description: descriptionProps,
                        errorMessage: errorMessageProps
                    }
                }
            ],
            [
                (0, $846a838139f2ac6b$export$ff05c3ac10437e03),
                validation
            ]
        ]
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...DOMProps,
        ...renderProps,
        ref: ref,
        slot: props.slot || undefined,
        "data-invalid": state.isInvalid || undefined
    }));
}
/**
 * A date field allows users to enter and edit date and time values using a keyboard.
 * Each part of a date value is displayed in an individually editable segment.
 */ const $9eb4e1c2268ca198$export$d9781c7894a82487 = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($9eb4e1c2268ca198$var$DateField);
function $9eb4e1c2268ca198$var$TimeField(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $9eb4e1c2268ca198$export$8e17ddc448e87c1e);
    let { locale: locale } = (0, $bzgmy$reactaria.useLocale)();
    var _props_validationBehavior;
    let state = (0, $bzgmy$reactstately.useTimeFieldState)({
        ...props,
        locale: locale,
        validationBehavior: (_props_validationBehavior = props.validationBehavior) !== null && _props_validationBehavior !== void 0 ? _props_validationBehavior : "native"
    });
    let fieldRef = (0, $bzgmy$react.useRef)(null);
    let [labelRef, label] = (0, $c5ccf687772c0422$export$9d4c57ee4c6ffdd8)();
    let inputRef = (0, $bzgmy$react.useRef)(null);
    var _props_validationBehavior1;
    let { labelProps: labelProps, fieldProps: fieldProps, inputProps: inputProps, descriptionProps: descriptionProps, errorMessageProps: errorMessageProps, ...validation } = (0, $bzgmy$reactaria.useTimeField)({
        ...(0, $c5ccf687772c0422$export$ef03459518577ad4)(props),
        label: label,
        inputRef: inputRef,
        validationBehavior: (_props_validationBehavior1 = props.validationBehavior) !== null && _props_validationBehavior1 !== void 0 ? _props_validationBehavior1 : "native"
    }, state, fieldRef);
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        values: {
            state: state,
            isInvalid: state.isInvalid,
            isDisabled: state.isDisabled
        },
        defaultClassName: "react-aria-TimeField"
    });
    let DOMProps = (0, $bzgmy$reactariautils.filterDOMProps)(props);
    delete DOMProps.id;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c5ccf687772c0422$export$2881499e37b75b9a), {
        values: [
            [
                $9eb4e1c2268ca198$export$5d8dc44abd10a920,
                state
            ],
            [
                (0, $dcae72abc18c0045$export$f9c6924e160136d1),
                {
                    ...fieldProps,
                    ref: fieldRef,
                    isInvalid: state.isInvalid
                }
            ],
            [
                (0, $1bcfcef5af644e13$export$37fb8590cf2c088c),
                {
                    ...inputProps,
                    ref: inputRef
                }
            ],
            [
                (0, $84ae0bf5bd8e2a5f$export$75b6ee27786ba447),
                {
                    ...labelProps,
                    ref: labelRef,
                    elementType: "span"
                }
            ],
            [
                (0, $a8a589c28affdc40$export$9afb8bc826b033ea),
                {
                    slots: {
                        description: descriptionProps,
                        errorMessage: errorMessageProps
                    }
                }
            ],
            [
                (0, $846a838139f2ac6b$export$ff05c3ac10437e03),
                validation
            ]
        ]
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...DOMProps,
        ...renderProps,
        ref: ref,
        slot: props.slot || undefined,
        "data-invalid": state.isInvalid || undefined
    }));
}
/**
 * A time field allows users to enter and edit time values using a keyboard.
 * Each part of a time value is displayed in an individually editable segment.
 */ const $9eb4e1c2268ca198$export$5eaee2322dd727eb = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($9eb4e1c2268ca198$var$TimeField);
function $9eb4e1c2268ca198$var$DateInput(props, ref) {
    // If state is provided by DateField/TimeField, just render.
    // Otherwise (e.g. in DatePicker), we need to call hooks and create state ourselves.
    let dateFieldState = (0, $bzgmy$react.useContext)($9eb4e1c2268ca198$export$3b08bebcf796eea0);
    let timeFieldState = (0, $bzgmy$react.useContext)($9eb4e1c2268ca198$export$5d8dc44abd10a920);
    return dateFieldState || timeFieldState ? /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($9eb4e1c2268ca198$var$DateInputInner, {
        ...props,
        ref: ref
    }) : /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($9eb4e1c2268ca198$var$DateInputStandalone, {
        ...props,
        ref: ref
    });
}
const $9eb4e1c2268ca198$var$DateInputStandalone = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)((props, ref)=>{
    let [dateFieldProps, fieldRef] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)({
        slot: props.slot
    }, ref, $9eb4e1c2268ca198$export$7b3e670c86da5fe8);
    let { locale: locale } = (0, $bzgmy$reactaria.useLocale)();
    let state = (0, $bzgmy$reactstately.useDateFieldState)({
        ...dateFieldProps,
        locale: locale,
        createCalendar: $bzgmy$internationalizeddate.createCalendar
    });
    let inputRef = (0, $bzgmy$react.useRef)(null);
    let { fieldProps: fieldProps, inputProps: inputProps } = (0, $bzgmy$reactaria.useDateField)({
        ...dateFieldProps,
        inputRef: inputRef
    }, state, fieldRef);
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c5ccf687772c0422$export$2881499e37b75b9a), {
        values: [
            [
                $9eb4e1c2268ca198$export$3b08bebcf796eea0,
                state
            ],
            [
                (0, $1bcfcef5af644e13$export$37fb8590cf2c088c),
                {
                    ...inputProps,
                    ref: inputRef
                }
            ],
            [
                (0, $dcae72abc18c0045$export$f9c6924e160136d1),
                {
                    ...fieldProps,
                    ref: fieldRef,
                    isInvalid: state.isInvalid
                }
            ]
        ]
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($9eb4e1c2268ca198$var$DateInputInner, props));
});
const $9eb4e1c2268ca198$var$DateInputInner = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)((props, ref)=>{
    let { className: className, children: children } = props;
    let dateFieldState = (0, $bzgmy$react.useContext)($9eb4e1c2268ca198$export$3b08bebcf796eea0);
    let timeFieldState = (0, $bzgmy$react.useContext)($9eb4e1c2268ca198$export$5d8dc44abd10a920);
    let state = dateFieldState !== null && dateFieldState !== void 0 ? dateFieldState : timeFieldState;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, ($parcel$interopDefault($bzgmy$react))).Fragment, null, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $dcae72abc18c0045$export$eb2fcfdbd7ba97d4), {
        ...props,
        ref: ref,
        slot: props.slot || undefined,
        className: className !== null && className !== void 0 ? className : "react-aria-DateInput",
        isInvalid: state.isInvalid
    }, state.segments.map((segment, i)=>/*#__PURE__*/ (0, $bzgmy$react.cloneElement)(children(segment), {
            key: i
        }))), /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $1bcfcef5af644e13$export$f5b8910cec6cf069), null));
});
/**
 * A date input groups the editable date segments within a date field.
 */ const $9eb4e1c2268ca198$export$7edc06cf1783b30f = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($9eb4e1c2268ca198$var$DateInput);
function $9eb4e1c2268ca198$var$DateSegment({ segment: segment, ...otherProps }, ref) {
    let dateFieldState = (0, $bzgmy$react.useContext)($9eb4e1c2268ca198$export$3b08bebcf796eea0);
    let timeFieldState = (0, $bzgmy$react.useContext)($9eb4e1c2268ca198$export$5d8dc44abd10a920);
    let state = dateFieldState !== null && dateFieldState !== void 0 ? dateFieldState : timeFieldState;
    let domRef = (0, $bzgmy$reactariautils.useObjectRef)(ref);
    let { segmentProps: segmentProps } = (0, $bzgmy$reactaria.useDateSegment)(segment, state, domRef);
    let { focusProps: focusProps, isFocused: isFocused, isFocusVisible: isFocusVisible } = (0, $bzgmy$reactaria.useFocusRing)();
    let { hoverProps: hoverProps, isHovered: isHovered } = (0, $bzgmy$reactaria.useHover)({
        ...otherProps,
        isDisabled: state.isDisabled || segment.type === "literal"
    });
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...otherProps,
        values: {
            ...segment,
            isReadOnly: !segment.isEditable,
            isInvalid: state.isInvalid,
            isHovered: isHovered,
            isFocused: isFocused,
            isFocusVisible: isFocusVisible
        },
        defaultChildren: segment.text,
        defaultClassName: "react-aria-DateSegment"
    });
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...(0, $bzgmy$reactaria.mergeProps)((0, $bzgmy$reactariautils.filterDOMProps)(otherProps), segmentProps, focusProps, hoverProps),
        ...renderProps,
        ref: domRef,
        "data-placeholder": segment.isPlaceholder || undefined,
        "data-invalid": state.isInvalid || undefined,
        "data-readonly": !segment.isEditable || undefined,
        "data-type": segment.type,
        "data-hovered": isHovered || undefined,
        "data-focused": isFocused || undefined,
        "data-focus-visible": isFocusVisible || undefined
    });
}
/**
 * A date segment displays an individual unit of a date and time, and allows users to edit
 * the value by typing or using the arrow keys to increment and decrement.
 */ const $9eb4e1c2268ca198$export$336ab7fa954c4b5f = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($9eb4e1c2268ca198$var$DateSegment);


/*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 













const $adfe8d3f75d5162e$export$cf316c7f3b44c11e = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
const $adfe8d3f75d5162e$export$8282edba42ee28a = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
const $adfe8d3f75d5162e$export$50a10c048fdcdee9 = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
const $adfe8d3f75d5162e$export$80d7ae1f804790be = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
function $adfe8d3f75d5162e$var$DatePicker(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $adfe8d3f75d5162e$export$cf316c7f3b44c11e);
    var _props_validationBehavior;
    let state = (0, $bzgmy$reactstately.useDatePickerState)({
        ...props,
        validationBehavior: (_props_validationBehavior = props.validationBehavior) !== null && _props_validationBehavior !== void 0 ? _props_validationBehavior : "native"
    });
    let groupRef = (0, $bzgmy$react.useRef)(null);
    let [labelRef, label] = (0, $c5ccf687772c0422$export$9d4c57ee4c6ffdd8)();
    var _props_validationBehavior1;
    let { groupProps: groupProps, labelProps: labelProps, fieldProps: fieldProps, buttonProps: buttonProps, dialogProps: dialogProps, calendarProps: calendarProps, descriptionProps: descriptionProps, errorMessageProps: errorMessageProps, ...validation } = (0, $bzgmy$reactaria.useDatePicker)({
        ...(0, $c5ccf687772c0422$export$ef03459518577ad4)(props),
        label: label,
        validationBehavior: (_props_validationBehavior1 = props.validationBehavior) !== null && _props_validationBehavior1 !== void 0 ? _props_validationBehavior1 : "native"
    }, state, groupRef);
    let { focusProps: focusProps, isFocused: isFocused, isFocusVisible: isFocusVisible } = (0, $bzgmy$reactaria.useFocusRing)({
        within: true
    });
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        values: {
            state: state,
            isFocusWithin: isFocused,
            isFocusVisible: isFocusVisible,
            isDisabled: props.isDisabled || false,
            isInvalid: state.isInvalid,
            isOpen: state.isOpen
        },
        defaultClassName: "react-aria-DatePicker"
    });
    let DOMProps = (0, $bzgmy$reactariautils.filterDOMProps)(props);
    delete DOMProps.id;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c5ccf687772c0422$export$2881499e37b75b9a), {
        values: [
            [
                $adfe8d3f75d5162e$export$50a10c048fdcdee9,
                state
            ],
            [
                (0, $dcae72abc18c0045$export$f9c6924e160136d1),
                {
                    ...groupProps,
                    ref: groupRef,
                    isInvalid: state.isInvalid
                }
            ],
            [
                (0, $9eb4e1c2268ca198$export$7b3e670c86da5fe8),
                fieldProps
            ],
            [
                (0, $b856e6788a7ea5bf$export$24d547caef80ccd1),
                {
                    ...buttonProps,
                    isPressed: state.isOpen
                }
            ],
            [
                (0, $84ae0bf5bd8e2a5f$export$75b6ee27786ba447),
                {
                    ...labelProps,
                    ref: labelRef,
                    elementType: "span"
                }
            ],
            [
                (0, $3f539f26b167ddde$export$3b805cea1f178355),
                calendarProps
            ],
            [
                (0, $2979ab89b336194b$export$d2f961adcb0afbe),
                state
            ],
            [
                (0, $61e2b7078adb18bc$export$9b9a0cd73afb7ca4),
                {
                    trigger: "DatePicker",
                    triggerRef: groupRef,
                    placement: "bottom start"
                }
            ],
            [
                (0, $2979ab89b336194b$export$8b93a07348a7730c),
                dialogProps
            ],
            [
                (0, $a8a589c28affdc40$export$9afb8bc826b033ea),
                {
                    slots: {
                        description: descriptionProps,
                        errorMessage: errorMessageProps
                    }
                }
            ],
            [
                (0, $846a838139f2ac6b$export$ff05c3ac10437e03),
                validation
            ]
        ]
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...focusProps,
        ...DOMProps,
        ...renderProps,
        ref: ref,
        slot: props.slot || undefined,
        "data-focus-within": isFocused || undefined,
        "data-invalid": state.isInvalid || undefined,
        "data-focus-visible": isFocusVisible || undefined,
        "data-disabled": props.isDisabled || undefined,
        "data-open": state.isOpen || undefined
    }));
}
/**
 * A date picker combines a DateField and a Calendar popover to allow users to enter or select a date and time value.
 */ const $adfe8d3f75d5162e$export$5109c6dd95d8fb00 = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($adfe8d3f75d5162e$var$DatePicker);
function $adfe8d3f75d5162e$var$DateRangePicker(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $adfe8d3f75d5162e$export$8282edba42ee28a);
    var _props_validationBehavior;
    let state = (0, $bzgmy$reactstately.useDateRangePickerState)({
        ...props,
        validationBehavior: (_props_validationBehavior = props.validationBehavior) !== null && _props_validationBehavior !== void 0 ? _props_validationBehavior : "native"
    });
    let groupRef = (0, $bzgmy$react.useRef)(null);
    let [labelRef, label] = (0, $c5ccf687772c0422$export$9d4c57ee4c6ffdd8)();
    var _props_validationBehavior1;
    let { groupProps: groupProps, labelProps: labelProps, startFieldProps: startFieldProps, endFieldProps: endFieldProps, buttonProps: buttonProps, dialogProps: dialogProps, calendarProps: calendarProps, descriptionProps: descriptionProps, errorMessageProps: errorMessageProps, ...validation } = (0, $bzgmy$reactaria.useDateRangePicker)({
        ...(0, $c5ccf687772c0422$export$ef03459518577ad4)(props),
        label: label,
        validationBehavior: (_props_validationBehavior1 = props.validationBehavior) !== null && _props_validationBehavior1 !== void 0 ? _props_validationBehavior1 : "native"
    }, state, groupRef);
    let { focusProps: focusProps, isFocused: isFocused, isFocusVisible: isFocusVisible } = (0, $bzgmy$reactaria.useFocusRing)({
        within: true
    });
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        values: {
            state: state,
            isFocusWithin: isFocused,
            isFocusVisible: isFocusVisible,
            isDisabled: props.isDisabled || false,
            isInvalid: state.isInvalid,
            isOpen: state.isOpen
        },
        defaultClassName: "react-aria-DateRangePicker"
    });
    let DOMProps = (0, $bzgmy$reactariautils.filterDOMProps)(props);
    delete DOMProps.id;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c5ccf687772c0422$export$2881499e37b75b9a), {
        values: [
            [
                $adfe8d3f75d5162e$export$80d7ae1f804790be,
                state
            ],
            [
                (0, $dcae72abc18c0045$export$f9c6924e160136d1),
                {
                    ...groupProps,
                    ref: groupRef,
                    isInvalid: state.isInvalid
                }
            ],
            [
                (0, $b856e6788a7ea5bf$export$24d547caef80ccd1),
                {
                    ...buttonProps,
                    isPressed: state.isOpen
                }
            ],
            [
                (0, $84ae0bf5bd8e2a5f$export$75b6ee27786ba447),
                {
                    ...labelProps,
                    ref: labelRef,
                    elementType: "span"
                }
            ],
            [
                (0, $3f539f26b167ddde$export$233dd9682e1ad64b),
                calendarProps
            ],
            [
                (0, $2979ab89b336194b$export$d2f961adcb0afbe),
                state
            ],
            [
                (0, $61e2b7078adb18bc$export$9b9a0cd73afb7ca4),
                {
                    trigger: "DateRangePicker",
                    triggerRef: groupRef,
                    placement: "bottom start"
                }
            ],
            [
                (0, $2979ab89b336194b$export$8b93a07348a7730c),
                dialogProps
            ],
            [
                (0, $9eb4e1c2268ca198$export$7b3e670c86da5fe8),
                {
                    slots: {
                        start: startFieldProps,
                        end: endFieldProps
                    }
                }
            ],
            [
                (0, $a8a589c28affdc40$export$9afb8bc826b033ea),
                {
                    slots: {
                        description: descriptionProps,
                        errorMessage: errorMessageProps
                    }
                }
            ],
            [
                (0, $846a838139f2ac6b$export$ff05c3ac10437e03),
                validation
            ]
        ]
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...focusProps,
        ...DOMProps,
        ...renderProps,
        ref: ref,
        slot: props.slot || undefined,
        "data-focus-within": isFocused || undefined,
        "data-invalid": state.isInvalid || undefined,
        "data-focus-visible": isFocusVisible || undefined,
        "data-disabled": props.isDisabled || undefined,
        "data-open": state.isOpen || undefined
    }));
}
/**
 * A date range picker combines two DateFields and a RangeCalendar popover to allow
 * users to enter or select a date and time range.
 */ const $adfe8d3f75d5162e$export$17334619f3ac2224 = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($adfe8d3f75d5162e$var$DateRangePicker);



/*
 * Copyright 2023 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 


var $d72d752ea1c67b9a$exports = {};


































$d72d752ea1c67b9a$exports = {
    "ar-AE": $7e3b9f6c0d3f98a7$exports,
    "bg-BG": $7c11c8bafabff514$exports,
    "cs-CZ": $d55d6a46d896aa4e$exports,
    "da-DK": $0bf85a6224525466$exports,
    "de-DE": $3cffc1bd30a143a7$exports,
    "el-GR": $af25cfd8212114c4$exports,
    "en-US": $4f0d6cca330ebbae$exports,
    "es-ES": $1e942d208b3f081e$exports,
    "et-EE": $7ecf22cba6524ed5$exports,
    "fi-FI": $4c3e2c694f8954f2$exports,
    "fr-FR": $5c093d840945be34$exports,
    "he-IL": $54ebe5cc44e081ca$exports,
    "hr-HR": $c87f289edc3c8208$exports,
    "hu-HU": $6752ef148a3dc43f$exports,
    "it-IT": $58fa24283081b65c$exports,
    "ja-JP": $770533c19d7b553a$exports,
    "ko-KR": $de8f7b8ad7f54d6d$exports,
    "lt-LT": $de235b5235305f02$exports,
    "lv-LV": $1badb5b4b4fa9042$exports,
    "nb-NO": $e0e47ca0931d41e2$exports,
    "nl-NL": $adb96033a361a81b$exports,
    "pl-PL": $96ebda5b7b663ef6$exports,
    "pt-BR": $010ef53c23794e08$exports,
    "pt-PT": $a0d0918dbe8cd238$exports,
    "ro-RO": $b73baeec3a0b138d$exports,
    "ru-RU": $aed1f56161d4731e$exports,
    "sk-SK": $3ff95b3a8291cbd7$exports,
    "sl-SI": $c7459bccfcc668d8$exports,
    "sr-SP": $d4deb497858acd42$exports,
    "sv-SE": $f07511ec9106f700$exports,
    "tr-TR": $8ecd910775d75b2a$exports,
    "uk-UA": $db0c53fb82554560$exports,
    "zh-CN": $c6fb62cc552205b8$exports,
    "zh-TW": $1830911445b53dbf$exports
};




const $80a65baccb138f12$export$14a72053295ff9a6 = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
function $80a65baccb138f12$var$DropZone(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $80a65baccb138f12$export$14a72053295ff9a6);
    let buttonRef = (0, $bzgmy$react.useRef)(null);
    let { dropProps: dropProps, dropButtonProps: dropButtonProps, isDropTarget: isDropTarget } = (0, $bzgmy$reactaria.useDrop)({
        ...props,
        ref: buttonRef,
        hasDropButton: true
    });
    let { hoverProps: hoverProps, isHovered: isHovered } = (0, $bzgmy$reactaria.useHover)(props);
    let { focusProps: focusProps, isFocused: isFocused, isFocusVisible: isFocusVisible } = (0, $bzgmy$reactaria.useFocusRing)();
    let stringFormatter = (0, $bzgmy$reactaria.useLocalizedStringFormatter)((0, (/*@__PURE__*/$parcel$interopDefault($d72d752ea1c67b9a$exports))), "react-aria-components");
    let textId = (0, $bzgmy$reactariautils.useSlotId)();
    let dropzoneId = (0, $bzgmy$reactariautils.useSlotId)();
    let ariaLabel = props["aria-label"] || stringFormatter.format("dropzoneLabel");
    let messageId = props["aria-labelledby"];
    // Chrome + VO will not announce the drop zone's accessible name if useLabels combines an aria-label and aria-labelledby
    let ariaLabelledby = [
        dropzoneId,
        textId,
        messageId
    ].filter(Boolean).join(" ");
    let labelProps = (0, $bzgmy$reactariautils.useLabels)({
        "aria-labelledby": ariaLabelledby
    });
    let { clipboardProps: clipboardProps } = (0, $bzgmy$reactaria.useClipboard)({
        onPaste: (items)=>{
            var _props_onDrop;
            return (_props_onDrop = props.onDrop) === null || _props_onDrop === void 0 ? void 0 : _props_onDrop.call(props, {
                type: "drop",
                items: items,
                x: 0,
                y: 0,
                dropOperation: "copy"
            });
        }
    });
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        values: {
            isHovered: isHovered,
            isFocused: isFocused,
            isFocusVisible: isFocusVisible,
            isDropTarget: isDropTarget
        },
        defaultClassName: "react-aria-DropZone"
    });
    let DOMProps = (0, $bzgmy$reactariautils.filterDOMProps)(props);
    delete DOMProps.id;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c5ccf687772c0422$export$2881499e37b75b9a), {
        values: [
            [
                (0, $a8a589c28affdc40$export$9afb8bc826b033ea),
                {
                    id: textId,
                    slot: "label"
                }
            ]
        ]
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...(0, $bzgmy$reactaria.mergeProps)(dropProps, hoverProps, DOMProps),
        ...renderProps,
        slot: props.slot || undefined,
        ref: ref,
        onClick: ()=>{
            var _buttonRef_current;
            return (_buttonRef_current = buttonRef.current) === null || _buttonRef_current === void 0 ? void 0 : _buttonRef_current.focus();
        },
        "data-hovered": isHovered || undefined,
        "data-focused": isFocused || undefined,
        "data-focus-visible": isFocusVisible || undefined,
        "data-drop-target": isDropTarget || undefined
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $bzgmy$reactaria.VisuallyHidden), null, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        id: dropzoneId,
        "aria-hidden": "true"
    }, ariaLabel), /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("button", {
        ...(0, $bzgmy$reactaria.mergeProps)(dropButtonProps, focusProps, clipboardProps, labelProps),
        ref: buttonRef
    })), renderProps.children));
}
/**
 * A drop zone is an area into which one or multiple objects can be dragged and dropped.
 */ const $80a65baccb138f12$export$3c6489d84dc98b6 = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($80a65baccb138f12$var$DropZone);



/*
 * Copyright 2023 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 



function $8e055a19745f522c$var$FileTrigger(props, ref) {
    let { onSelect: onSelect, acceptedFileTypes: acceptedFileTypes, allowsMultiple: allowsMultiple, defaultCamera: defaultCamera, children: children, acceptDirectory: acceptDirectory, ...rest } = props;
    let inputRef = (0, $bzgmy$reactariautils.useObjectRef)(ref);
    let domProps = (0, $bzgmy$reactariautils.filterDOMProps)(rest);
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, ($parcel$interopDefault($bzgmy$react))).Fragment, null, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $bzgmy$reactariainteractions.PressResponder), {
        onPress: ()=>{
            var _inputRef_current;
            if (inputRef.current.value) inputRef.current.value = "";
            (_inputRef_current = inputRef.current) === null || _inputRef_current === void 0 ? void 0 : _inputRef_current.click();
        }
    }, children), /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $1bcfcef5af644e13$export$f5b8910cec6cf069), {
        ...domProps,
        type: "file",
        ref: inputRef,
        style: {
            display: "none"
        },
        accept: acceptedFileTypes === null || acceptedFileTypes === void 0 ? void 0 : acceptedFileTypes.toString(),
        onChange: (e)=>onSelect === null || onSelect === void 0 ? void 0 : onSelect(e.target.files),
        capture: defaultCamera,
        multiple: allowsMultiple,
        // @ts-expect-error
        webkitdirectory: acceptDirectory ? "" : undefined
    }));
}
/**
 * A FileTrigger allows a user to access the file system with any pressable React Aria or React Spectrum component, or custom components built with usePress.
 */ const $8e055a19745f522c$export$6fb4a10d2c950550 = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($8e055a19745f522c$var$FileTrigger);


/*
 * Copyright 2023 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 

function $35157657e549736b$var$Form(props, ref) {
    let { validationErrors: validationErrors, children: children, className: className, ...domProps } = props;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("form", {
        ...domProps,
        ref: ref,
        className: className || "react-aria-Form"
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $bzgmy$reactstately.FormValidationContext).Provider, {
        value: validationErrors !== null && validationErrors !== void 0 ? validationErrors : {}
    }, children));
}
/**
 * A form is a group of inputs that allows users to submit data to a server,
 * with support for providing field validation errors.
 */ const $35157657e549736b$export$a7fed597f4b8afd8 = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($35157657e549736b$var$Form);


/*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 










const $132cbde493282f82$export$54fe942636b6416d = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
function $132cbde493282f82$var$GridList(props, ref) {
    // Render the portal first so that we have the collection by the time we render the DOM in SSR.
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $132cbde493282f82$export$54fe942636b6416d);
    let { collection: collection, portal: portal } = (0, $3114c2382242bdc0$export$6cd28814d92fa9c9)(props);
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, ($parcel$interopDefault($bzgmy$react))).Fragment, null, portal, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($132cbde493282f82$var$GridListInner, {
        props: props,
        collection: collection,
        gridListRef: ref
    }));
}
function $132cbde493282f82$var$GridListInner({ props: props, collection: collection, gridListRef: ref }) {
    let { dragAndDropHooks: dragAndDropHooks } = props;
    let state = (0, $bzgmy$reactstately.useListState)({
        ...props,
        collection: collection,
        children: undefined
    });
    let { gridProps: gridProps } = (0, $bzgmy$reactaria.useGridList)(props, state, ref);
    let children = (0, $3114c2382242bdc0$export$727c8fc270210f13)({
        items: collection,
        children: (item)=>{
            switch(item.type){
                case "item":
                    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($132cbde493282f82$var$GridListRow, {
                        item: item
                    });
                default:
                    throw new Error("Unsupported node type in GridList: " + item.type);
            }
        }
    });
    let selectionManager = state.selectionManager;
    let isListDraggable = !!(dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.useDraggableCollectionState);
    let isListDroppable = !!(dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.useDroppableCollectionState);
    let dragHooksProvided = (0, $bzgmy$react.useRef)(isListDraggable);
    let dropHooksProvided = (0, $bzgmy$react.useRef)(isListDroppable);
    (0, $bzgmy$react.useEffect)(()=>{
        if (dragHooksProvided.current !== isListDraggable) console.warn("Drag hooks were provided during one render, but not another. This should be avoided as it may produce unexpected behavior.");
        if (dropHooksProvided.current !== isListDroppable) console.warn("Drop hooks were provided during one render, but not another. This should be avoided as it may produce unexpected behavior.");
    }, [
        isListDraggable,
        isListDroppable
    ]);
    let dragState = undefined;
    let dropState = undefined;
    let droppableCollection = undefined;
    let isRootDropTarget = false;
    let dragPreview = null;
    let preview = (0, $bzgmy$react.useRef)(null);
    if (isListDraggable && dragAndDropHooks) {
        dragState = dragAndDropHooks.useDraggableCollectionState({
            collection: collection,
            selectionManager: selectionManager,
            preview: dragAndDropHooks.renderDragPreview ? preview : undefined
        });
        dragAndDropHooks.useDraggableCollection({}, dragState, ref);
        let DragPreview = dragAndDropHooks.DragPreview;
        dragPreview = dragAndDropHooks.renderDragPreview ? /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement(DragPreview, {
            ref: preview
        }, dragAndDropHooks.renderDragPreview) : null;
    }
    if (isListDroppable && dragAndDropHooks) {
        dropState = dragAndDropHooks.useDroppableCollectionState({
            collection: collection,
            selectionManager: selectionManager
        });
        let keyboardDelegate = new (0, $bzgmy$reactaria.ListKeyboardDelegate)(collection, selectionManager.disabledBehavior === "selection" ? new Set() : selectionManager.disabledKeys, ref);
        let dropTargetDelegate = dragAndDropHooks.dropTargetDelegate || new dragAndDropHooks.ListDropTargetDelegate(collection, ref);
        droppableCollection = dragAndDropHooks.useDroppableCollection({
            keyboardDelegate: keyboardDelegate,
            dropTargetDelegate: dropTargetDelegate
        }, dropState, ref);
        isRootDropTarget = dropState.isDropTarget({
            type: "root"
        });
    }
    let { focusProps: focusProps, isFocused: isFocused, isFocusVisible: isFocusVisible } = (0, $bzgmy$reactaria.useFocusRing)();
    let renderValues = {
        isDropTarget: isRootDropTarget,
        isEmpty: state.collection.size === 0,
        isFocused: isFocused,
        isFocusVisible: isFocusVisible,
        state: state
    };
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        className: props.className,
        style: props.style,
        defaultClassName: "react-aria-GridList",
        values: renderValues
    });
    let emptyState = null;
    let emptyStatePropOverrides = null;
    if (state.collection.size === 0 && props.renderEmptyState) {
        let content = props.renderEmptyState(renderValues);
        emptyState = /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
            role: "row",
            style: {
                display: "contents"
            }
        }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
            role: "gridcell",
            style: {
                display: "contents"
            }
        }, content));
    }
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $bzgmy$reactaria.FocusScope), null, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...(0, $bzgmy$reactariautils.filterDOMProps)(props),
        ...renderProps,
        ...(0, $bzgmy$reactaria.mergeProps)(gridProps, focusProps, droppableCollection === null || droppableCollection === void 0 ? void 0 : droppableCollection.collectionProps, emptyStatePropOverrides),
        ref: ref,
        slot: props.slot || undefined,
        onScroll: props.onScroll,
        "data-drop-target": isRootDropTarget || undefined,
        "data-empty": state.collection.size === 0 || undefined,
        "data-focused": isFocused || undefined,
        "data-focus-visible": isFocusVisible || undefined
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c5ccf687772c0422$export$2881499e37b75b9a), {
        values: [
            [
                (0, $a03b42240404b420$export$7c5906fe4f1f2af2),
                state
            ],
            [
                (0, $368d79437ab76c11$export$d188a835a7bc5783),
                {
                    dragAndDropHooks: dragAndDropHooks,
                    dragState: dragState,
                    dropState: dropState
                }
            ],
            [
                (0, $368d79437ab76c11$export$f55761759794cf55),
                {
                    render: $132cbde493282f82$var$GridListDropIndicatorWrapper
                }
            ]
        ]
    }, isListDroppable && /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($132cbde493282f82$var$RootDropIndicator, null), children), emptyState, dragPreview));
}
/**
 * A grid list displays a list of interactive items, with support for keyboard navigation,
 * single or multiple selection, and row actions.
 */ const $132cbde493282f82$export$a7bfbda1311ca015 = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($132cbde493282f82$var$GridList);
function $132cbde493282f82$var$GridListItem(props, ref) {
    return (0, $3114c2382242bdc0$export$e7c29ae2353b16ea)("item", props, ref, props.children);
}
/**
 * A GridListItem represents an individual item in a GridList.
 */ const $132cbde493282f82$export$e96fc9a8407faa6b = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($132cbde493282f82$var$GridListItem);
function $132cbde493282f82$var$GridListRow({ item: item }) {
    let state = (0, $bzgmy$react.useContext)((0, $a03b42240404b420$export$7c5906fe4f1f2af2));
    let { dragAndDropHooks: dragAndDropHooks, dragState: dragState, dropState: dropState } = (0, $bzgmy$react.useContext)((0, $368d79437ab76c11$export$d188a835a7bc5783));
    let ref = (0, $bzgmy$reactariautils.useObjectRef)(item.props.ref);
    let { rowProps: rowProps, gridCellProps: gridCellProps, descriptionProps: descriptionProps, ...states } = (0, $bzgmy$reactaria.useGridListItem)({
        node: item,
        shouldSelectOnPressUp: !!dragState
    }, state, ref);
    let { hoverProps: hoverProps, isHovered: isHovered } = (0, $bzgmy$reactaria.useHover)({
        isDisabled: !states.allowsSelection && !states.hasAction
    });
    let { isFocusVisible: isFocusVisible, focusProps: focusProps } = (0, $bzgmy$reactaria.useFocusRing)();
    let { checkboxProps: checkboxProps } = (0, $bzgmy$reactaria.useGridListSelectionCheckbox)({
        key: item.key
    }, state);
    let draggableItem = null;
    if (dragState && dragAndDropHooks) draggableItem = dragAndDropHooks.useDraggableItem({
        key: item.key,
        hasDragButton: true
    }, dragState);
    let dropIndicator = null;
    let dropIndicatorRef = (0, $bzgmy$react.useRef)(null);
    let { visuallyHiddenProps: visuallyHiddenProps } = (0, $bzgmy$reactaria.useVisuallyHidden)();
    if (dropState && dragAndDropHooks) dropIndicator = dragAndDropHooks.useDropIndicator({
        target: {
            type: "item",
            key: item.key,
            dropPosition: "on"
        }
    }, dropState, dropIndicatorRef);
    let props = item.props;
    let isDragging = dragState && dragState.isDragging(item.key);
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        id: undefined,
        children: item.rendered,
        defaultClassName: "react-aria-GridListItem",
        values: {
            ...states,
            isHovered: isHovered,
            isFocusVisible: isFocusVisible,
            selectionMode: state.selectionManager.selectionMode,
            selectionBehavior: state.selectionManager.selectionBehavior,
            allowsDragging: !!dragState,
            isDragging: isDragging,
            isDropTarget: dropIndicator === null || dropIndicator === void 0 ? void 0 : dropIndicator.isDropTarget
        }
    });
    let renderDropIndicator = (dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.renderDropIndicator) || ((target)=>/*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $368d79437ab76c11$export$62ed72bc21f6b8a6), {
            target: target
        }));
    let dragButtonRef = (0, $bzgmy$react.useRef)(null);
    (0, $bzgmy$react.useEffect)(()=>{
        if (dragState && !dragButtonRef.current) console.warn('Draggable items in a GridList must contain a <Button slot="drag"> element so that keyboard and screen reader users can drag them.');
    // eslint-disable-next-line
    }, []);
    (0, $bzgmy$react.useEffect)(()=>{
        if (!item.textValue) console.warn("A `textValue` prop is required for <GridListItem> elements with non-plain text children in order to support accessibility features such as type to select.");
    }, [
        item.textValue
    ]);
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, ($parcel$interopDefault($bzgmy$react))).Fragment, null, (dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.useDropIndicator) && renderDropIndicator({
        type: "item",
        key: item.key,
        dropPosition: "before"
    }), dropIndicator && !dropIndicator.isHidden && /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        role: "row",
        style: {
            position: "absolute"
        }
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        role: "gridcell"
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        role: "button",
        ...visuallyHiddenProps,
        ...dropIndicator === null || dropIndicator === void 0 ? void 0 : dropIndicator.dropIndicatorProps,
        ref: dropIndicatorRef
    }))), /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...(0, $bzgmy$reactaria.mergeProps)((0, $bzgmy$reactariautils.filterDOMProps)(props), rowProps, focusProps, hoverProps, draggableItem === null || draggableItem === void 0 ? void 0 : draggableItem.dragProps),
        ...renderProps,
        ref: ref,
        "data-selected": states.isSelected || undefined,
        "data-disabled": states.isDisabled || undefined,
        "data-hovered": isHovered || undefined,
        "data-focused": states.isFocused || undefined,
        "data-focus-visible": isFocusVisible || undefined,
        "data-pressed": states.isPressed || undefined,
        "data-allows-dragging": !!dragState || undefined,
        "data-dragging": isDragging || undefined,
        "data-drop-target": (dropIndicator === null || dropIndicator === void 0 ? void 0 : dropIndicator.isDropTarget) || undefined,
        "data-selection-mode": state.selectionManager.selectionMode === "none" ? undefined : state.selectionManager.selectionMode
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...gridCellProps,
        style: {
            display: "contents"
        }
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c5ccf687772c0422$export$2881499e37b75b9a), {
        values: [
            [
                (0, $e733553516d848a9$export$b085522c77523c51),
                {
                    slots: {
                        selection: checkboxProps
                    }
                }
            ],
            [
                (0, $b856e6788a7ea5bf$export$24d547caef80ccd1),
                {
                    slots: {
                        [(0, $c5ccf687772c0422$export$8e0ef2c5844bfb6b)]: {},
                        drag: {
                            ...draggableItem === null || draggableItem === void 0 ? void 0 : draggableItem.dragButtonProps,
                            ref: dragButtonRef,
                            style: {
                                pointerEvents: "none"
                            }
                        }
                    }
                }
            ],
            [
                (0, $a8a589c28affdc40$export$9afb8bc826b033ea),
                {
                    slots: {
                        description: descriptionProps
                    }
                }
            ]
        ]
    }, renderProps.children))), (dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.useDropIndicator) && state.collection.getKeyAfter(item.key) == null && renderDropIndicator({
        type: "item",
        key: item.key,
        dropPosition: "after"
    }));
}
function $132cbde493282f82$var$GridListDropIndicatorWrapper(props, ref) {
    ref = (0, $bzgmy$reactariautils.useObjectRef)(ref);
    let { dragAndDropHooks: dragAndDropHooks, dropState: dropState } = (0, $bzgmy$react.useContext)((0, $368d79437ab76c11$export$d188a835a7bc5783));
    let buttonRef = (0, $bzgmy$react.useRef)(null);
    let { dropIndicatorProps: dropIndicatorProps, isHidden: isHidden, isDropTarget: isDropTarget } = dragAndDropHooks.useDropIndicator(props, dropState, buttonRef);
    if (isHidden) return null;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($132cbde493282f82$var$GridListDropIndicatorForwardRef, {
        ...props,
        dropIndicatorProps: dropIndicatorProps,
        isDropTarget: isDropTarget,
        buttonRef: buttonRef,
        ref: ref
    });
}
function $132cbde493282f82$var$GridListDropIndicator(props, ref) {
    let { dropIndicatorProps: dropIndicatorProps, isDropTarget: isDropTarget, buttonRef: buttonRef, ...otherProps } = props;
    let { visuallyHiddenProps: visuallyHiddenProps } = (0, $bzgmy$reactaria.useVisuallyHidden)();
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...otherProps,
        defaultClassName: "react-aria-DropIndicator",
        values: {
            isDropTarget: isDropTarget
        }
    });
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...renderProps,
        role: "row",
        ref: ref,
        "data-drop-target": isDropTarget || undefined
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        role: "gridcell"
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...visuallyHiddenProps,
        role: "button",
        ...dropIndicatorProps,
        ref: buttonRef
    }), renderProps.children));
}
const $132cbde493282f82$var$GridListDropIndicatorForwardRef = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($132cbde493282f82$var$GridListDropIndicator);
function $132cbde493282f82$var$RootDropIndicator() {
    let { dragAndDropHooks: dragAndDropHooks, dropState: dropState } = (0, $bzgmy$react.useContext)((0, $368d79437ab76c11$export$d188a835a7bc5783));
    let ref = (0, $bzgmy$react.useRef)(null);
    let { dropIndicatorProps: dropIndicatorProps } = dragAndDropHooks.useDropIndicator({
        target: {
            type: "root"
        }
    }, dropState, ref);
    let isDropTarget = dropState.isDropTarget({
        type: "root"
    });
    let { visuallyHiddenProps: visuallyHiddenProps } = (0, $bzgmy$reactaria.useVisuallyHidden)();
    if (!isDropTarget && dropIndicatorProps["aria-hidden"]) return null;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        role: "row",
        "aria-hidden": dropIndicatorProps["aria-hidden"],
        style: {
            position: "absolute"
        }
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        role: "gridcell"
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        role: "button",
        ...visuallyHiddenProps,
        ...dropIndicatorProps,
        ref: ref
    })));
}







/*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 

const $70c886ca98ebdc2b$export$744d98a3b8a94e1c = /*#__PURE__*/ (0, $bzgmy$react.createContext)({});
function $70c886ca98ebdc2b$var$Keyboard(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $70c886ca98ebdc2b$export$744d98a3b8a94e1c);
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("kbd", {
        dir: "ltr",
        ...props,
        ref: ref
    });
}
const $70c886ca98ebdc2b$export$16e4d70cc375e707 = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($70c886ca98ebdc2b$var$Keyboard);





/*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 












const $a8f6e7d095d1cc86$export$c7e742effb1c51e2 = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
const $a8f6e7d095d1cc86$export$24aad8519b95b41b = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
function $a8f6e7d095d1cc86$export$27d2ad3c5815583e(props) {
    let state = (0, $bzgmy$reactstately.useMenuTriggerState)(props);
    let ref = (0, $bzgmy$react.useRef)(null);
    let { menuTriggerProps: menuTriggerProps, menuProps: menuProps } = (0, $bzgmy$reactaria.useMenuTrigger)({
        ...props,
        type: "menu"
    }, state, ref);
    // Allows menu width to match button
    let [buttonWidth, setButtonWidth] = (0, $bzgmy$react.useState)(null);
    let onResize = (0, $bzgmy$react.useCallback)(()=>{
        if (ref.current) setButtonWidth(ref.current.offsetWidth + "px");
    }, [
        ref
    ]);
    (0, $bzgmy$reactariautils.useResizeObserver)({
        ref: ref,
        onResize: onResize
    });
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c5ccf687772c0422$export$2881499e37b75b9a), {
        values: [
            [
                $a8f6e7d095d1cc86$export$c7e742effb1c51e2,
                menuProps
            ],
            [
                (0, $2979ab89b336194b$export$d2f961adcb0afbe),
                state
            ],
            [
                (0, $61e2b7078adb18bc$export$9b9a0cd73afb7ca4),
                {
                    trigger: "MenuTrigger",
                    triggerRef: ref,
                    placement: "bottom start",
                    style: {
                        "--trigger-width": buttonWidth
                    }
                }
            ]
        ]
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $bzgmy$reactariainteractions.PressResponder), {
        ...menuTriggerProps,
        ref: ref,
        isPressed: state.isOpen
    }, props.children));
}
function $a8f6e7d095d1cc86$var$Menu(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $a8f6e7d095d1cc86$export$c7e742effb1c51e2);
    let { portal: portal, collection: collection } = (0, $3114c2382242bdc0$export$6cd28814d92fa9c9)(props);
    // Delay rendering the actual menu until we have the collection so that auto focus works properly.
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, ($parcel$interopDefault($bzgmy$react))).Fragment, null, collection.size > 0 && /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($a8f6e7d095d1cc86$var$MenuInner, {
        props: props,
        collection: collection,
        menuRef: ref
    }), portal);
}
function $a8f6e7d095d1cc86$var$MenuInner({ props: props, collection: collection, menuRef: ref }) {
    let state = (0, $bzgmy$reactstately.useTreeState)({
        ...props,
        collection: collection,
        children: undefined
    });
    let { menuProps: menuProps } = (0, $bzgmy$reactaria.useMenu)(props, state, ref);
    let children = (0, $3114c2382242bdc0$export$727c8fc270210f13)({
        items: state.collection,
        children: (item)=>{
            switch(item.type){
                case "section":
                    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($a8f6e7d095d1cc86$var$MenuSection, {
                        section: item
                    });
                case "separator":
                    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $54b202ace195eaa4$export$1ff3c3f08ae963c0), item.props);
                case "item":
                    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($a8f6e7d095d1cc86$var$MenuItemInner, {
                        item: item
                    });
                default:
                    throw new Error("Unsupported node type in Menu: " + item.type);
            }
        }
    });
    var _props_className;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...(0, $bzgmy$reactariautils.filterDOMProps)(props),
        ...menuProps,
        ref: ref,
        slot: props.slot || undefined,
        onScroll: props.onScroll,
        style: props.style,
        className: (_props_className = props.className) !== null && _props_className !== void 0 ? _props_className : "react-aria-Menu"
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c5ccf687772c0422$export$2881499e37b75b9a), {
        values: [
            [
                $a8f6e7d095d1cc86$export$24aad8519b95b41b,
                state
            ],
            [
                (0, $54b202ace195eaa4$export$6615d83f6de245ce),
                {
                    elementType: "div"
                }
            ]
        ]
    }, children));
}
/**
 * A menu displays a list of actions or options that a user can choose.
 */ const $a8f6e7d095d1cc86$export$d9b273488cd8ce6f = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($a8f6e7d095d1cc86$var$Menu);
function $a8f6e7d095d1cc86$var$MenuSection({ section: section, className: className, style: style, ...otherProps }) {
    var _section_props, _section_props1;
    let state = (0, $bzgmy$react.useContext)($a8f6e7d095d1cc86$export$24aad8519b95b41b);
    let [headingRef, heading] = (0, $c5ccf687772c0422$export$9d4c57ee4c6ffdd8)();
    var _section_arialabel;
    let { headingProps: headingProps, groupProps: groupProps } = (0, $bzgmy$reactaria.useMenuSection)({
        heading: heading,
        "aria-label": (_section_arialabel = section["aria-label"]) !== null && _section_arialabel !== void 0 ? _section_arialabel : undefined
    });
    let children = (0, $3114c2382242bdc0$export$727c8fc270210f13)({
        items: state.collection.getChildren(section.key),
        children: (item)=>{
            switch(item.type){
                case "header":
                    {
                        let { ref: ref, ...otherProps } = item.props;
                        return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c7efb75a1a3fe2d2$export$8b251419efc915eb), {
                            ...headingProps,
                            ...otherProps,
                            ref: (0, $bzgmy$reactariautils.mergeRefs)(headingRef, ref)
                        }, item.rendered);
                    }
                case "item":
                    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($a8f6e7d095d1cc86$var$MenuItemInner, {
                        item: item
                    });
                default:
                    throw new Error("Unsupported element type in Section: " + item.type);
            }
        }
    });
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("section", {
        ...(0, $bzgmy$reactariautils.filterDOMProps)(otherProps),
        ...groupProps,
        className: className || ((_section_props = section.props) === null || _section_props === void 0 ? void 0 : _section_props.className) || "react-aria-Section",
        style: style || ((_section_props1 = section.props) === null || _section_props1 === void 0 ? void 0 : _section_props1.style),
        ref: section.props.ref
    }, children);
}
function $a8f6e7d095d1cc86$var$MenuItem(props, ref) {
    return (0, $3114c2382242bdc0$export$e7c29ae2353b16ea)("item", props, ref, props.children);
}
/**
 * A MenuItem represents an individual action in a Menu.
 */ const $a8f6e7d095d1cc86$export$2ce376c2cc3355c8 = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($a8f6e7d095d1cc86$var$MenuItem);
function $a8f6e7d095d1cc86$var$MenuItemInner({ item: item }) {
    let state = (0, $bzgmy$react.useContext)($a8f6e7d095d1cc86$export$24aad8519b95b41b);
    let ref = (0, $bzgmy$reactariautils.useObjectRef)(item.props.ref);
    let { menuItemProps: menuItemProps, labelProps: labelProps, descriptionProps: descriptionProps, keyboardShortcutProps: keyboardShortcutProps, ...states } = (0, $bzgmy$reactaria.useMenuItem)({
        key: item.key
    }, state, ref);
    let props = item.props;
    let { isFocusVisible: isFocusVisible, focusProps: focusProps } = (0, $bzgmy$reactaria.useFocusRing)();
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        id: undefined,
        children: item.rendered,
        defaultClassName: "react-aria-MenuItem",
        values: {
            ...states,
            isHovered: states.isFocused,
            isFocusVisible: isFocusVisible,
            selectionMode: state.selectionManager.selectionMode,
            selectionBehavior: state.selectionManager.selectionBehavior
        }
    });
    let ElementType = props.href ? "a" : "div";
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement(ElementType, {
        ...(0, $bzgmy$reactaria.mergeProps)(menuItemProps, focusProps),
        ...renderProps,
        ref: ref,
        "data-disabled": states.isDisabled || undefined,
        "data-hovered": states.isFocused || undefined,
        "data-focused": states.isFocused || undefined,
        "data-focus-visible": isFocusVisible || undefined,
        "data-pressed": states.isPressed || undefined,
        "data-selected": states.isSelected || undefined,
        "data-selection-mode": state.selectionManager.selectionMode === "none" ? undefined : state.selectionManager.selectionMode
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c5ccf687772c0422$export$2881499e37b75b9a), {
        values: [
            [
                (0, $a8a589c28affdc40$export$9afb8bc826b033ea),
                {
                    slots: {
                        label: labelProps,
                        description: descriptionProps
                    }
                }
            ],
            [
                (0, $70c886ca98ebdc2b$export$744d98a3b8a94e1c),
                keyboardShortcutProps
            ]
        ]
    }, renderProps.children));
}


/*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 



const $e85da53562ca5320$export$8b645da15a96b44f = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
function $e85da53562ca5320$var$Meter(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $e85da53562ca5320$export$8b645da15a96b44f);
    let { value: value = 0, minValue: minValue = 0, maxValue: maxValue = 100 } = props;
    let [labelRef, label] = (0, $c5ccf687772c0422$export$9d4c57ee4c6ffdd8)();
    let { meterProps: meterProps, labelProps: labelProps } = (0, $bzgmy$reactaria.useMeter)({
        ...props,
        label: label
    });
    // Calculate the width of the progress bar as a percentage
    let percentage = (value - minValue) / (maxValue - minValue) * 100;
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        defaultClassName: "react-aria-Meter",
        values: {
            percentage: percentage,
            valueText: meterProps["aria-valuetext"]
        }
    });
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...meterProps,
        ...renderProps,
        ref: ref,
        slot: props.slot || undefined
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $84ae0bf5bd8e2a5f$export$75b6ee27786ba447).Provider, {
        value: {
            ...labelProps,
            ref: labelRef,
            elementType: "span"
        }
    }, renderProps.children));
}
/**
 * A meter represents a quantity within a known range, or a fractional value.
 */ const $e85da53562ca5320$export$62e3ae2a4090b879 = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($e85da53562ca5320$var$Meter);


/*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 





const $71899cff63e14b82$export$ab57792b9b6974a6 = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
const $71899cff63e14b82$var$InternalModalContext = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
function $71899cff63e14b82$var$Modal(props, ref) {
    let ctx = (0, $bzgmy$react.useContext)($71899cff63e14b82$var$InternalModalContext);
    if (ctx) return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($71899cff63e14b82$var$ModalContent, {
        ...props,
        modalRef: ref
    }, props.children);
    let { isDismissable: isDismissable, isKeyboardDismissDisabled: isKeyboardDismissDisabled, isOpen: isOpen, defaultOpen: defaultOpen, onOpenChange: onOpenChange, children: children, isEntering: isEntering, isExiting: isExiting, UNSTABLE_portalContainer: UNSTABLE_portalContainer, ...otherProps } = props;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($71899cff63e14b82$export$8948f78d83984c69, {
        isDismissable: isDismissable,
        isKeyboardDismissDisabled: isKeyboardDismissDisabled,
        isOpen: isOpen,
        defaultOpen: defaultOpen,
        onOpenChange: onOpenChange,
        isEntering: isEntering,
        isExiting: isExiting,
        UNSTABLE_portalContainer: UNSTABLE_portalContainer
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($71899cff63e14b82$var$ModalContent, {
        ...otherProps,
        modalRef: ref
    }, children));
}
/**
 * A modal is an overlay element which blocks interaction with elements outside it.
 */ const $71899cff63e14b82$export$2b77a92f1a5ad772 = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($71899cff63e14b82$var$Modal);
function $71899cff63e14b82$var$ModalOverlayWithForwardRef(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $71899cff63e14b82$export$ab57792b9b6974a6);
    let contextState = (0, $bzgmy$react.useContext)((0, $2979ab89b336194b$export$d2f961adcb0afbe));
    let localState = (0, $bzgmy$reactstately.useOverlayTriggerState)(props);
    let state = props.isOpen != null || props.defaultOpen != null || !contextState ? localState : contextState;
    let objectRef = (0, $bzgmy$reactariautils.useObjectRef)(ref);
    let modalRef = (0, $bzgmy$react.useRef)(null);
    let isOverlayExiting = (0, $c5ccf687772c0422$export$45fda7c47f93fd48)(objectRef, state.isOpen);
    let isModalExiting = (0, $c5ccf687772c0422$export$45fda7c47f93fd48)(modalRef, state.isOpen);
    let isExiting = isOverlayExiting || isModalExiting || props.isExiting || false;
    let isSSR = (0, $bzgmy$reactaria.useIsSSR)();
    if (!state.isOpen && !isExiting || isSSR) return null;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($71899cff63e14b82$var$ModalOverlayInner, {
        ...props,
        state: state,
        isExiting: isExiting,
        overlayRef: objectRef,
        modalRef: modalRef
    });
}
const $71899cff63e14b82$export$8948f78d83984c69 = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($71899cff63e14b82$var$ModalOverlayWithForwardRef);
function $71899cff63e14b82$var$ModalOverlayInner({ UNSTABLE_portalContainer: UNSTABLE_portalContainer, ...props }) {
    let modalRef = props.modalRef;
    let { state: state } = props;
    let { modalProps: modalProps, underlayProps: underlayProps } = (0, $bzgmy$reactaria.useModalOverlay)(props, state, modalRef);
    let entering = (0, $c5ccf687772c0422$export$6d3443f2c48bfc20)(props.overlayRef) || props.isEntering || false;
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        defaultClassName: "react-aria-ModalOverlay",
        values: {
            isEntering: entering,
            isExiting: props.isExiting,
            state: state
        }
    });
    let viewport = (0, $bzgmy$reactariautils.useViewportSize)();
    let style = {
        ...renderProps.style,
        "--visual-viewport-height": viewport.height + "px"
    };
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $bzgmy$reactaria.Overlay), {
        isExiting: props.isExiting,
        portalContainer: UNSTABLE_portalContainer
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...(0, $bzgmy$reactariautils.mergeProps)((0, $bzgmy$reactariautils.filterDOMProps)(props), underlayProps),
        ...renderProps,
        style: style,
        ref: props.overlayRef,
        "data-entering": entering || undefined,
        "data-exiting": props.isExiting || undefined
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c5ccf687772c0422$export$2881499e37b75b9a), {
        values: [
            [
                $71899cff63e14b82$var$InternalModalContext,
                {
                    modalProps: modalProps,
                    modalRef: modalRef,
                    isExiting: props.isExiting,
                    isDismissable: props.isDismissable
                }
            ],
            [
                (0, $2979ab89b336194b$export$d2f961adcb0afbe),
                state
            ]
        ]
    }, renderProps.children)));
}
function $71899cff63e14b82$var$ModalContent(props) {
    let { modalProps: modalProps, modalRef: modalRef, isExiting: isExiting, isDismissable: isDismissable } = (0, $bzgmy$react.useContext)($71899cff63e14b82$var$InternalModalContext);
    let state = (0, $bzgmy$react.useContext)((0, $2979ab89b336194b$export$d2f961adcb0afbe));
    let mergedRefs = (0, $bzgmy$react.useMemo)(()=>(0, $bzgmy$reactariautils.mergeRefs)(props.modalRef, modalRef), [
        props.modalRef,
        modalRef
    ]);
    let ref = (0, $bzgmy$reactariautils.useObjectRef)(mergedRefs);
    let entering = (0, $c5ccf687772c0422$export$6d3443f2c48bfc20)(ref);
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        defaultClassName: "react-aria-Modal",
        values: {
            isEntering: entering,
            isExiting: isExiting,
            state: state
        }
    });
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...(0, $bzgmy$reactariautils.mergeProps)((0, $bzgmy$reactariautils.filterDOMProps)(props), modalProps),
        ...renderProps,
        ref: ref,
        "data-entering": entering || undefined,
        "data-exiting": isExiting || undefined
    }, isDismissable && /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $bzgmy$reactaria.DismissButton), {
        onDismiss: state.close
    }), renderProps.children);
}


/*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 










const $177b28eee7968d58$export$b414a48cf5dcbc11 = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
const $177b28eee7968d58$export$6cc906c6cff9bec5 = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
function $177b28eee7968d58$var$NumberField(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $177b28eee7968d58$export$b414a48cf5dcbc11);
    let { locale: locale } = (0, $bzgmy$reactaria.useLocale)();
    var _props_validationBehavior;
    let state = (0, $bzgmy$reactstately.useNumberFieldState)({
        ...props,
        locale: locale,
        validationBehavior: (_props_validationBehavior = props.validationBehavior) !== null && _props_validationBehavior !== void 0 ? _props_validationBehavior : "native"
    });
    let inputRef = (0, $bzgmy$react.useRef)(null);
    let [labelRef, label] = (0, $c5ccf687772c0422$export$9d4c57ee4c6ffdd8)();
    var _props_validationBehavior1;
    let { labelProps: labelProps, groupProps: groupProps, inputProps: inputProps, incrementButtonProps: incrementButtonProps, decrementButtonProps: decrementButtonProps, descriptionProps: descriptionProps, errorMessageProps: errorMessageProps, ...validation } = (0, $bzgmy$reactaria.useNumberField)({
        ...(0, $c5ccf687772c0422$export$ef03459518577ad4)(props),
        label: label,
        validationBehavior: (_props_validationBehavior1 = props.validationBehavior) !== null && _props_validationBehavior1 !== void 0 ? _props_validationBehavior1 : "native"
    }, state, inputRef);
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        values: {
            state: state,
            isDisabled: props.isDisabled || false,
            isInvalid: validation.isInvalid || false
        },
        defaultClassName: "react-aria-NumberField"
    });
    let DOMProps = (0, $bzgmy$reactariautils.filterDOMProps)(props);
    delete DOMProps.id;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c5ccf687772c0422$export$2881499e37b75b9a), {
        values: [
            [
                $177b28eee7968d58$export$6cc906c6cff9bec5,
                state
            ],
            [
                (0, $dcae72abc18c0045$export$f9c6924e160136d1),
                groupProps
            ],
            [
                (0, $1bcfcef5af644e13$export$37fb8590cf2c088c),
                {
                    ...inputProps,
                    ref: inputRef
                }
            ],
            [
                (0, $84ae0bf5bd8e2a5f$export$75b6ee27786ba447),
                {
                    ...labelProps,
                    ref: labelRef
                }
            ],
            [
                (0, $b856e6788a7ea5bf$export$24d547caef80ccd1),
                {
                    slots: {
                        increment: incrementButtonProps,
                        decrement: decrementButtonProps
                    }
                }
            ],
            [
                (0, $a8a589c28affdc40$export$9afb8bc826b033ea),
                {
                    slots: {
                        description: descriptionProps,
                        errorMessage: errorMessageProps
                    }
                }
            ],
            [
                (0, $846a838139f2ac6b$export$ff05c3ac10437e03),
                validation
            ]
        ]
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...DOMProps,
        ...renderProps,
        ref: ref,
        slot: props.slot || undefined,
        "data-disabled": props.isDisabled || undefined,
        "data-invalid": validation.isInvalid || undefined
    }), props.name && /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("input", {
        type: "hidden",
        name: props.name,
        value: isNaN(state.numberValue) ? "" : state.numberValue
    }));
}
/**
 * A number field allows a user to enter a number, and increment or decrement the value using stepper buttons.
 */ const $177b28eee7968d58$export$63c5fa0b2fdccd2e = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($177b28eee7968d58$var$NumberField);




/*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 



const $0d6436f6a1b0b001$export$e9f3bf65a26ce129 = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
function $0d6436f6a1b0b001$var$ProgressBar(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $0d6436f6a1b0b001$export$e9f3bf65a26ce129);
    let { value: value = 0, minValue: minValue = 0, maxValue: maxValue = 100, isIndeterminate: isIndeterminate = false } = props;
    let [labelRef, label] = (0, $c5ccf687772c0422$export$9d4c57ee4c6ffdd8)();
    let { progressBarProps: progressBarProps, labelProps: labelProps } = (0, $bzgmy$reactaria.useProgressBar)({
        ...props,
        label: label
    });
    // Calculate the width of the progress bar as a percentage
    let percentage = isIndeterminate ? undefined : (value - minValue) / (maxValue - minValue) * 100;
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        defaultClassName: "react-aria-ProgressBar",
        values: {
            percentage: percentage,
            valueText: progressBarProps["aria-valuetext"],
            isIndeterminate: isIndeterminate
        }
    });
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...progressBarProps,
        ...renderProps,
        ref: ref,
        slot: props.slot || undefined
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $84ae0bf5bd8e2a5f$export$75b6ee27786ba447).Provider, {
        value: {
            ...labelProps,
            ref: labelRef,
            elementType: "span"
        }
    }, renderProps.children));
}
/**
 * Progress bars show either determinate or indeterminate progress of an operation
 * over time.
 */ const $0d6436f6a1b0b001$export$c17561cb55d4db30 = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($0d6436f6a1b0b001$var$ProgressBar);


/*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 







const $1456b76f687bd4ed$export$a79eda4ff50e30b6 = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
const $1456b76f687bd4ed$export$b118023277d4a5c3 = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
const $1456b76f687bd4ed$export$29d84393af70866c = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
function $1456b76f687bd4ed$var$RadioGroup(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $1456b76f687bd4ed$export$a79eda4ff50e30b6);
    var _props_validationBehavior;
    let state = (0, $bzgmy$reactstately.useRadioGroupState)({
        ...props,
        validationBehavior: (_props_validationBehavior = props.validationBehavior) !== null && _props_validationBehavior !== void 0 ? _props_validationBehavior : "native"
    });
    let [labelRef, label] = (0, $c5ccf687772c0422$export$9d4c57ee4c6ffdd8)();
    var _props_validationBehavior1;
    let { radioGroupProps: radioGroupProps, labelProps: labelProps, descriptionProps: descriptionProps, errorMessageProps: errorMessageProps, ...validation } = (0, $bzgmy$reactaria.useRadioGroup)({
        ...props,
        label: label,
        validationBehavior: (_props_validationBehavior1 = props.validationBehavior) !== null && _props_validationBehavior1 !== void 0 ? _props_validationBehavior1 : "native"
    }, state);
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        values: {
            orientation: props.orientation || "vertical",
            isDisabled: state.isDisabled,
            isReadOnly: state.isReadOnly,
            isRequired: state.isRequired,
            isInvalid: state.isInvalid,
            state: state
        },
        defaultClassName: "react-aria-RadioGroup"
    });
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...radioGroupProps,
        ...renderProps,
        ref: ref,
        slot: props.slot || undefined,
        "data-orientation": props.orientation || "vertical",
        "data-invalid": state.isInvalid || undefined,
        "data-disabled": state.isDisabled || undefined,
        "data-readonly": state.isReadOnly || undefined,
        "data-required": state.isRequired || undefined
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c5ccf687772c0422$export$2881499e37b75b9a), {
        values: [
            [
                $1456b76f687bd4ed$export$29d84393af70866c,
                state
            ],
            [
                (0, $84ae0bf5bd8e2a5f$export$75b6ee27786ba447),
                {
                    ...labelProps,
                    ref: labelRef,
                    elementType: "span"
                }
            ],
            [
                (0, $a8a589c28affdc40$export$9afb8bc826b033ea),
                {
                    slots: {
                        description: descriptionProps,
                        errorMessage: errorMessageProps
                    }
                }
            ],
            [
                (0, $846a838139f2ac6b$export$ff05c3ac10437e03),
                validation
            ]
        ]
    }, renderProps.children));
}
function $1456b76f687bd4ed$var$Radio(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $1456b76f687bd4ed$export$b118023277d4a5c3);
    let state = (0, ($parcel$interopDefault($bzgmy$react))).useContext($1456b76f687bd4ed$export$29d84393af70866c);
    let inputRef = (0, $bzgmy$react.useRef)(null);
    let { labelProps: labelProps, inputProps: inputProps, isSelected: isSelected, isDisabled: isDisabled, isPressed: isPressed } = (0, $bzgmy$reactaria.useRadio)({
        ...(0, $c5ccf687772c0422$export$ef03459518577ad4)(props),
        // ReactNode type doesn't allow function children.
        children: typeof props.children === "function" ? true : props.children
    }, state, inputRef);
    let { isFocused: isFocused, isFocusVisible: isFocusVisible, focusProps: focusProps } = (0, $bzgmy$reactaria.useFocusRing)();
    let interactionDisabled = isDisabled || state.isReadOnly;
    let { hoverProps: hoverProps, isHovered: isHovered } = (0, $bzgmy$reactaria.useHover)({
        ...props,
        isDisabled: interactionDisabled
    });
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        defaultClassName: "react-aria-Radio",
        values: {
            isSelected: isSelected,
            isPressed: isPressed,
            isHovered: isHovered,
            isFocused: isFocused,
            isFocusVisible: isFocusVisible,
            isDisabled: isDisabled,
            isReadOnly: state.isReadOnly,
            isInvalid: state.isInvalid,
            isRequired: state.isRequired
        }
    });
    let DOMProps = (0, $bzgmy$reactariautils.filterDOMProps)(props);
    delete DOMProps.id;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("label", {
        ...(0, $bzgmy$reactariautils.mergeProps)(DOMProps, labelProps, hoverProps, renderProps),
        ref: ref,
        "data-selected": isSelected || undefined,
        "data-pressed": isPressed || undefined,
        "data-hovered": isHovered || undefined,
        "data-focused": isFocused || undefined,
        "data-focus-visible": isFocusVisible || undefined,
        "data-disabled": isDisabled || undefined,
        "data-readonly": state.isReadOnly || undefined,
        "data-invalid": state.isInvalid || undefined,
        "data-required": state.isRequired || undefined
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $bzgmy$reactaria.VisuallyHidden), {
        elementType: "span"
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("input", {
        ...(0, $bzgmy$reactariautils.mergeProps)(inputProps, focusProps),
        ref: inputRef
    })), renderProps.children);
}
/**
 * A radio group allows a user to select a single item from a list of mutually exclusive options.
 */ const $1456b76f687bd4ed$export$a98f0dcb43a68a25 = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($1456b76f687bd4ed$var$RadioGroup);
/**
 * A radio represents an individual option within a radio group.
 */ const $1456b76f687bd4ed$export$d7b12c4107be0d61 = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($1456b76f687bd4ed$var$Radio);


/*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 










const $a83c69b310385d53$export$d1c4e4c63cb03a11 = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
function $a83c69b310385d53$var$SearchField(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $a83c69b310385d53$export$d1c4e4c63cb03a11);
    let inputRef = (0, $bzgmy$react.useRef)(null);
    let [labelRef, label] = (0, $c5ccf687772c0422$export$9d4c57ee4c6ffdd8)();
    var _props_validationBehavior;
    let state = (0, $bzgmy$reactstately.useSearchFieldState)({
        ...props,
        validationBehavior: (_props_validationBehavior = props.validationBehavior) !== null && _props_validationBehavior !== void 0 ? _props_validationBehavior : "native"
    });
    var _props_validationBehavior1;
    let { labelProps: labelProps, inputProps: inputProps, clearButtonProps: clearButtonProps, descriptionProps: descriptionProps, errorMessageProps: errorMessageProps, ...validation } = (0, $bzgmy$reactaria.useSearchField)({
        ...(0, $c5ccf687772c0422$export$ef03459518577ad4)(props),
        label: label,
        validationBehavior: (_props_validationBehavior1 = props.validationBehavior) !== null && _props_validationBehavior1 !== void 0 ? _props_validationBehavior1 : "native"
    }, state, inputRef);
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        values: {
            isEmpty: state.value === "",
            isDisabled: props.isDisabled || false,
            isInvalid: validation.isInvalid || false,
            state: state
        },
        defaultClassName: "react-aria-SearchField"
    });
    let DOMProps = (0, $bzgmy$reactariautils.filterDOMProps)(props);
    delete DOMProps.id;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...DOMProps,
        ...renderProps,
        ref: ref,
        slot: props.slot || undefined,
        "data-empty": state.value === "" || undefined,
        "data-disabled": props.isDisabled || undefined,
        "data-invalid": validation.isInvalid || undefined
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c5ccf687772c0422$export$2881499e37b75b9a), {
        values: [
            [
                (0, $84ae0bf5bd8e2a5f$export$75b6ee27786ba447),
                {
                    ...labelProps,
                    ref: labelRef
                }
            ],
            [
                (0, $1bcfcef5af644e13$export$37fb8590cf2c088c),
                {
                    ...inputProps,
                    ref: inputRef
                }
            ],
            [
                (0, $b856e6788a7ea5bf$export$24d547caef80ccd1),
                clearButtonProps
            ],
            [
                (0, $a8a589c28affdc40$export$9afb8bc826b033ea),
                {
                    slots: {
                        description: descriptionProps,
                        errorMessage: errorMessageProps
                    }
                }
            ],
            [
                (0, $dcae72abc18c0045$export$f9c6924e160136d1),
                {
                    isInvalid: validation.isInvalid,
                    isDisabled: props.isDisabled || false
                }
            ],
            [
                (0, $846a838139f2ac6b$export$ff05c3ac10437e03),
                validation
            ]
        ]
    }, renderProps.children));
}
/**
 * A search field allows a user to enter and clear a search query.
 */ const $a83c69b310385d53$export$b94867ecbd698f21 = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($a83c69b310385d53$var$SearchField);


/*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 













const $17f0ecdc17674b23$export$7540cee5be7dc19b = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
const $17f0ecdc17674b23$export$ef445b55be0601bd = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
function $17f0ecdc17674b23$var$Select(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $17f0ecdc17674b23$export$7540cee5be7dc19b);
    let { collection: collection, document: document } = (0, $3114c2382242bdc0$export$7cd71aa5ddd6dc4e)();
    var _props_validationBehavior;
    let state = (0, $bzgmy$reactstately.useSelectState)({
        ...props,
        collection: collection,
        children: undefined,
        validationBehavior: (_props_validationBehavior = props.validationBehavior) !== null && _props_validationBehavior !== void 0 ? _props_validationBehavior : "native"
    });
    let { isFocusVisible: isFocusVisible, focusProps: focusProps } = (0, $bzgmy$reactaria.useFocusRing)({
        within: true
    });
    // Get props for child elements from useSelect
    let buttonRef = (0, $bzgmy$react.useRef)(null);
    let [labelRef, label] = (0, $c5ccf687772c0422$export$9d4c57ee4c6ffdd8)();
    var _props_validationBehavior1;
    let { labelProps: labelProps, triggerProps: triggerProps, valueProps: valueProps, menuProps: menuProps, descriptionProps: descriptionProps, errorMessageProps: errorMessageProps, ...validation } = (0, $bzgmy$reactaria.useSelect)({
        ...(0, $c5ccf687772c0422$export$ef03459518577ad4)(props),
        label: label,
        validationBehavior: (_props_validationBehavior1 = props.validationBehavior) !== null && _props_validationBehavior1 !== void 0 ? _props_validationBehavior1 : "native"
    }, state, buttonRef);
    // Make menu width match input + button
    let [buttonWidth, setButtonWidth] = (0, $bzgmy$react.useState)(null);
    let onResize = (0, $bzgmy$react.useCallback)(()=>{
        if (buttonRef.current) setButtonWidth(buttonRef.current.offsetWidth + "px");
    }, [
        buttonRef
    ]);
    (0, $bzgmy$reactariautils.useResizeObserver)({
        ref: buttonRef,
        onResize: onResize
    });
    // Only expose a subset of state to renderProps function to avoid infinite render loop
    let renderPropsState = (0, $bzgmy$react.useMemo)(()=>({
            isOpen: state.isOpen,
            isFocused: state.isFocused,
            isFocusVisible: isFocusVisible,
            isDisabled: props.isDisabled || false,
            isInvalid: validation.isInvalid || false,
            isRequired: props.isRequired || false
        }), [
        state.isOpen,
        state.isFocused,
        isFocusVisible,
        props.isDisabled,
        validation.isInvalid,
        props.isRequired
    ]);
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        values: renderPropsState,
        defaultClassName: "react-aria-Select"
    });
    let DOMProps = (0, $bzgmy$reactariautils.filterDOMProps)(props);
    delete DOMProps.id;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, ($parcel$interopDefault($bzgmy$react))).Fragment, null, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c5ccf687772c0422$export$8dc98ba7eadeaa56), null, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c5ccf687772c0422$export$2881499e37b75b9a), {
        values: [
            [
                $17f0ecdc17674b23$export$7540cee5be7dc19b,
                props
            ],
            [
                $17f0ecdc17674b23$export$ef445b55be0601bd,
                state
            ],
            [
                (0, $3114c2382242bdc0$export$8c25dea96356a8b6),
                document
            ]
        ]
    }, renderProps.children)), /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c5ccf687772c0422$export$2881499e37b75b9a), {
        values: [
            [
                $17f0ecdc17674b23$export$7540cee5be7dc19b,
                props
            ],
            [
                $17f0ecdc17674b23$export$ef445b55be0601bd,
                state
            ],
            [
                $17f0ecdc17674b23$export$f8f745c04421623f,
                valueProps
            ],
            [
                (0, $84ae0bf5bd8e2a5f$export$75b6ee27786ba447),
                {
                    ...labelProps,
                    ref: labelRef,
                    elementType: "span"
                }
            ],
            [
                (0, $b856e6788a7ea5bf$export$24d547caef80ccd1),
                {
                    ...triggerProps,
                    ref: buttonRef,
                    isPressed: state.isOpen
                }
            ],
            [
                (0, $2979ab89b336194b$export$d2f961adcb0afbe),
                state
            ],
            [
                (0, $61e2b7078adb18bc$export$9b9a0cd73afb7ca4),
                {
                    trigger: "Select",
                    triggerRef: buttonRef,
                    placement: "bottom start",
                    style: {
                        "--trigger-width": buttonWidth
                    }
                }
            ],
            [
                (0, $a03b42240404b420$export$7ff8f37d2d81a48d),
                menuProps
            ],
            [
                (0, $a03b42240404b420$export$7c5906fe4f1f2af2),
                state
            ],
            [
                (0, $a8a589c28affdc40$export$9afb8bc826b033ea),
                {
                    slots: {
                        description: descriptionProps,
                        errorMessage: errorMessageProps
                    }
                }
            ],
            [
                (0, $846a838139f2ac6b$export$ff05c3ac10437e03),
                validation
            ]
        ]
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...DOMProps,
        ...renderProps,
        ...focusProps,
        ref: ref,
        slot: props.slot || undefined,
        "data-focused": state.isFocused || undefined,
        "data-focus-visible": isFocusVisible || undefined,
        "data-open": state.isOpen || undefined,
        "data-disabled": props.isDisabled || undefined,
        "data-invalid": validation.isInvalid || undefined,
        "data-required": props.isRequired || undefined
    }), /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $bzgmy$reactaria.HiddenSelect), {
        state: state,
        triggerRef: buttonRef,
        label: label,
        name: props.name,
        isDisabled: props.isDisabled
    })));
}
/**
 * A select displays a collapsible list of options and allows a user to select one of them.
 */ const $17f0ecdc17674b23$export$ef9b1a59e592288f = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($17f0ecdc17674b23$var$Select);
const $17f0ecdc17674b23$export$f8f745c04421623f = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
function $17f0ecdc17674b23$var$SelectValue(props, ref) {
    var _state_selectedItem, _state_selectedItem1;
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $17f0ecdc17674b23$export$f8f745c04421623f);
    let state = (0, $bzgmy$react.useContext)($17f0ecdc17674b23$export$ef445b55be0601bd);
    let { placeholder: placeholder } = (0, $c5ccf687772c0422$export$fabf2dc03a41866e)($17f0ecdc17674b23$export$7540cee5be7dc19b);
    let selectedItem = state.selectedKey != null ? state.collection.getItem(state.selectedKey) : null;
    let rendered = selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.rendered;
    if (typeof rendered === "function") {
        // If the selected item has a function as a child, we need to call it to render to React.JSX.
        let fn = rendered;
        rendered = fn({
            isHovered: false,
            isPressed: false,
            isSelected: false,
            isFocused: false,
            isFocusVisible: false,
            isDisabled: false,
            selectionMode: "single",
            selectionBehavior: "toggle"
        });
    }
    let stringFormatter = (0, $bzgmy$reactaria.useLocalizedStringFormatter)((0, (/*@__PURE__*/$parcel$interopDefault($d72d752ea1c67b9a$exports))), "react-aria-components");
    var _state_selectedItem_value, _state_selectedItem_textValue;
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        defaultChildren: rendered || placeholder || stringFormatter.format("selectPlaceholder"),
        defaultClassName: "react-aria-SelectValue",
        values: {
            selectedItem: (_state_selectedItem_value = (_state_selectedItem = state.selectedItem) === null || _state_selectedItem === void 0 ? void 0 : _state_selectedItem.value) !== null && _state_selectedItem_value !== void 0 ? _state_selectedItem_value : null,
            selectedText: (_state_selectedItem_textValue = (_state_selectedItem1 = state.selectedItem) === null || _state_selectedItem1 === void 0 ? void 0 : _state_selectedItem1.textValue) !== null && _state_selectedItem_textValue !== void 0 ? _state_selectedItem_textValue : null,
            isPlaceholder: !selectedItem
        }
    });
    let DOMProps = (0, $bzgmy$reactariautils.filterDOMProps)(props);
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("span", {
        ref: ref,
        ...DOMProps,
        ...renderProps,
        "data-placeholder": !selectedItem || undefined
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $a8a589c28affdc40$export$9afb8bc826b033ea).Provider, {
        value: undefined
    }, renderProps.children));
}
/**
 * SelectValue renders the current value of a Select, or a placeholder if no value is selected.
 * It is usually placed within the button element.
 */ const $17f0ecdc17674b23$export$e288731fd71264f0 = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($17f0ecdc17674b23$var$SelectValue);



/*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 





const $b7152ce4839d0838$export$e99164f0030f3bff = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
const $b7152ce4839d0838$export$1e7083018727fa60 = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
const $b7152ce4839d0838$export$f1fce0420cc6d8ee = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
const $b7152ce4839d0838$export$6189c2744041d8f8 = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
function $b7152ce4839d0838$var$Slider(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $b7152ce4839d0838$export$e99164f0030f3bff);
    let trackRef = (0, $bzgmy$react.useRef)(null);
    let numberFormatter = (0, $bzgmy$reactaria.useNumberFormatter)(props.formatOptions);
    let state = (0, $bzgmy$reactstately.useSliderState)({
        ...props,
        numberFormatter: numberFormatter
    });
    let [labelRef, label] = (0, $c5ccf687772c0422$export$9d4c57ee4c6ffdd8)();
    let { groupProps: groupProps, trackProps: trackProps, labelProps: labelProps, outputProps: outputProps } = (0, $bzgmy$reactaria.useSlider)({
        ...props,
        label: label
    }, state, trackRef);
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        values: {
            orientation: state.orientation,
            isDisabled: state.isDisabled,
            state: state
        },
        defaultClassName: "react-aria-Slider"
    });
    let DOMProps = (0, $bzgmy$reactariautils.filterDOMProps)(props);
    delete DOMProps.id;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c5ccf687772c0422$export$2881499e37b75b9a), {
        values: [
            [
                $b7152ce4839d0838$export$1e7083018727fa60,
                state
            ],
            [
                $b7152ce4839d0838$export$f1fce0420cc6d8ee,
                {
                    ...trackProps,
                    ref: trackRef
                }
            ],
            [
                $b7152ce4839d0838$export$6189c2744041d8f8,
                outputProps
            ],
            [
                (0, $84ae0bf5bd8e2a5f$export$75b6ee27786ba447),
                {
                    ...labelProps,
                    ref: labelRef
                }
            ]
        ]
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...DOMProps,
        ...groupProps,
        ...renderProps,
        ref: ref,
        slot: props.slot || undefined,
        "data-orientation": state.orientation,
        "data-disabled": state.isDisabled || undefined
    }));
}
/**
 * A slider allows a user to select one or more values within a range.
 */ const $b7152ce4839d0838$export$472062a354075cee = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($b7152ce4839d0838$var$Slider);
function $b7152ce4839d0838$var$SliderOutput(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $b7152ce4839d0838$export$6189c2744041d8f8);
    let { children: children, style: style, className: className, ...otherProps } = props;
    let state = (0, $bzgmy$react.useContext)($b7152ce4839d0838$export$1e7083018727fa60);
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        className: className,
        style: style,
        children: children,
        defaultChildren: state.getThumbValueLabel(0),
        defaultClassName: "react-aria-SliderOutput",
        values: {
            orientation: state.orientation,
            isDisabled: state.isDisabled,
            state: state
        }
    });
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("output", {
        ...otherProps,
        ...renderProps,
        ref: ref,
        "data-orientation": state.orientation || undefined,
        "data-disabled": state.isDisabled || undefined
    });
}
/**
 * A slider output displays the current value of a slider as text.
 */ const $b7152ce4839d0838$export$a590f758a961cb5b = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($b7152ce4839d0838$var$SliderOutput);
function $b7152ce4839d0838$var$SliderTrack(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $b7152ce4839d0838$export$f1fce0420cc6d8ee);
    let state = (0, $bzgmy$react.useContext)($b7152ce4839d0838$export$1e7083018727fa60);
    let { onHoverStart: onHoverStart, onHoverEnd: onHoverEnd, onHoverChange: onHoverChange, ...otherProps } = props;
    let { hoverProps: hoverProps, isHovered: isHovered } = (0, $bzgmy$reactaria.useHover)({
        onHoverStart: onHoverStart,
        onHoverEnd: onHoverEnd,
        onHoverChange: onHoverChange
    });
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        defaultClassName: "react-aria-SliderTrack",
        values: {
            orientation: state.orientation,
            isDisabled: state.isDisabled,
            isHovered: isHovered,
            state: state
        }
    });
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...(0, $bzgmy$reactaria.mergeProps)(otherProps, hoverProps),
        ...renderProps,
        ref: ref,
        "data-hovered": isHovered || undefined,
        "data-orientation": state.orientation || undefined,
        "data-disabled": state.isDisabled || undefined
    });
}
/**
 * A slider track is a container for one or more slider thumbs.
 */ const $b7152ce4839d0838$export$105594979f116971 = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($b7152ce4839d0838$var$SliderTrack);
function $b7152ce4839d0838$var$SliderThumb(props, ref) {
    let state = (0, $bzgmy$react.useContext)($b7152ce4839d0838$export$1e7083018727fa60);
    let { ref: trackRef } = (0, $c5ccf687772c0422$export$fabf2dc03a41866e)($b7152ce4839d0838$export$f1fce0420cc6d8ee);
    let { index: index = 0 } = props;
    let inputRef = (0, $bzgmy$react.useRef)(null);
    let [labelRef, label] = (0, $c5ccf687772c0422$export$9d4c57ee4c6ffdd8)();
    let { thumbProps: thumbProps, inputProps: inputProps, labelProps: labelProps, isDragging: isDragging, isFocused: isFocused, isDisabled: isDisabled } = (0, $bzgmy$reactaria.useSliderThumb)({
        ...props,
        index: index,
        trackRef: trackRef,
        inputRef: inputRef,
        label: label
    }, state);
    let { focusProps: focusProps, isFocusVisible: isFocusVisible } = (0, $bzgmy$reactaria.useFocusRing)();
    let { hoverProps: hoverProps, isHovered: isHovered } = (0, $bzgmy$reactaria.useHover)(props);
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        defaultClassName: "react-aria-SliderThumb",
        values: {
            state: state,
            isHovered: isHovered,
            isDragging: isDragging,
            isFocused: isFocused,
            isFocusVisible: isFocusVisible,
            isDisabled: isDisabled
        }
    });
    let DOMProps = (0, $bzgmy$reactariautils.filterDOMProps)(props);
    delete DOMProps.id;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...(0, $bzgmy$reactaria.mergeProps)(DOMProps, thumbProps, hoverProps),
        ...renderProps,
        ref: ref,
        style: {
            ...thumbProps.style,
            ...renderProps.style
        },
        "data-hovered": isHovered || undefined,
        "data-dragging": isDragging || undefined,
        "data-focused": isFocused || undefined,
        "data-focus-visible": isFocusVisible || undefined,
        "data-disabled": isDisabled || undefined
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $bzgmy$reactaria.VisuallyHidden), null, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("input", {
        ref: inputRef,
        ...(0, $bzgmy$reactaria.mergeProps)(inputProps, focusProps)
    })), /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c5ccf687772c0422$export$2881499e37b75b9a), {
        values: [
            [
                (0, $84ae0bf5bd8e2a5f$export$75b6ee27786ba447),
                {
                    ...labelProps,
                    ref: labelRef
                }
            ]
        ]
    }, renderProps.children));
}
/**
 * A slider thumb represents an individual value that the user can adjust within a slider track.
 */ const $b7152ce4839d0838$export$2c1b491743890dec = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($b7152ce4839d0838$var$SliderThumb);


/*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 




const $8d81efc5c2ff8011$export$8699e3b644d5a28a = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
function $8d81efc5c2ff8011$var$Switch(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $8d81efc5c2ff8011$export$8699e3b644d5a28a);
    let inputRef = (0, $bzgmy$react.useRef)(null);
    let state = (0, $bzgmy$reactstately.useToggleState)(props);
    let { labelProps: labelProps, inputProps: inputProps, isSelected: isSelected, isDisabled: isDisabled, isReadOnly: isReadOnly, isPressed: isPressed } = (0, $bzgmy$reactaria.useSwitch)({
        ...(0, $c5ccf687772c0422$export$ef03459518577ad4)(props),
        // ReactNode type doesn't allow function children.
        children: typeof props.children === "function" ? true : props.children
    }, state, inputRef);
    let { isFocused: isFocused, isFocusVisible: isFocusVisible, focusProps: focusProps } = (0, $bzgmy$reactaria.useFocusRing)();
    let isInteractionDisabled = props.isDisabled || props.isReadOnly;
    let { hoverProps: hoverProps, isHovered: isHovered } = (0, $bzgmy$reactaria.useHover)({
        ...props,
        isDisabled: isInteractionDisabled
    });
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        defaultClassName: "react-aria-Switch",
        values: {
            isSelected: isSelected,
            isPressed: isPressed,
            isHovered: isHovered,
            isFocused: isFocused,
            isFocusVisible: isFocusVisible,
            isDisabled: isDisabled,
            isReadOnly: isReadOnly,
            state: state
        }
    });
    let DOMProps = (0, $bzgmy$reactariautils.filterDOMProps)(props);
    delete DOMProps.id;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("label", {
        ...(0, $bzgmy$reactaria.mergeProps)(DOMProps, labelProps, hoverProps, renderProps),
        ref: ref,
        slot: props.slot || undefined,
        "data-selected": isSelected || undefined,
        "data-pressed": isPressed || undefined,
        "data-hovered": isHovered || undefined,
        "data-focused": isFocused || undefined,
        "data-focus-visible": isFocusVisible || undefined,
        "data-disabled": isDisabled || undefined,
        "data-readonly": isReadOnly || undefined
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $bzgmy$reactaria.VisuallyHidden), {
        elementType: "span"
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("input", {
        ...inputProps,
        ...focusProps,
        ref: inputRef
    })), renderProps.children);
}
/**
 * A switch allows a user to turn a setting on or off.
 */ const $8d81efc5c2ff8011$export$b5d5cf8927ab7262 = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($8d81efc5c2ff8011$var$Switch);














class $37b9a5d4bd0d4ded$var$TableCollection extends (0, $3114c2382242bdc0$export$408d25a4e12db025) {
    addNode(node) {
        super.addNode(node);
        this.columnsDirty || (this.columnsDirty = node.type === "column");
        if (node.type === "tableheader") this.head = node;
        if (node.type === "tablebody") this.body = node;
    }
    commit(firstKey, lastKey, isSSR = false) {
        this.updateColumns(isSSR);
        super.commit(firstKey, lastKey, isSSR);
    }
    updateColumns(isSSR) {
        if (!this.columnsDirty) return;
        this.rowHeaderColumnKeys = new Set();
        this.columns = [];
        let columnKeyMap = new Map();
        let visit = (node)=>{
            switch(node.type){
                case "column":
                    columnKeyMap.set(node.key, node);
                    if (!node.hasChildNodes) {
                        node.index = this.columns.length;
                        this.columns.push(node);
                        if (node.props.isRowHeader) this.rowHeaderColumnKeys.add(node.key);
                    }
                    break;
            }
            for (let child of this.getChildren(node.key))visit(child);
        };
        for (let node of this.getChildren(this.head.key))visit(node);
        this.headerRows = (0, $bzgmy$reactstatelytable.buildHeaderRows)(columnKeyMap, this.columns);
        this.columnsDirty = false;
        if (this.rowHeaderColumnKeys.size === 0 && this.columns.length > 0 && !isSSR) throw new Error("A table must have at least one Column with the isRowHeader prop set to true");
    }
    get columnCount() {
        return this.columns.length;
    }
    get rows() {
        return [
            ...this.getChildren(this.body.key)
        ];
    }
    *[Symbol.iterator]() {
        yield* this.getChildren(this.body.key);
    }
    get size() {
        return [
            ...this.getChildren(this.body.key)
        ].length;
    }
    getFirstKey() {
        var _;
        return (_ = [
            ...this.getChildren(this.body.key)
        ][0]) === null || _ === void 0 ? void 0 : _.key;
    }
    getLastKey() {
        var _rows_;
        let rows = [
            ...this.getChildren(this.body.key)
        ];
        return (_rows_ = rows[rows.length - 1]) === null || _rows_ === void 0 ? void 0 : _rows_.key;
    }
    getKeyAfter(key) {
        let node = this.getItem(key);
        var _node_nextKey;
        if ((node === null || node === void 0 ? void 0 : node.type) === "column") return (_node_nextKey = node.nextKey) !== null && _node_nextKey !== void 0 ? _node_nextKey : null;
        return super.getKeyAfter(key);
    }
    getKeyBefore(key) {
        var _this_getItem;
        let node = this.getItem(key);
        var _node_prevKey;
        if ((node === null || node === void 0 ? void 0 : node.type) === "column") return (_node_prevKey = node.prevKey) !== null && _node_prevKey !== void 0 ? _node_prevKey : null;
        let k = super.getKeyBefore(key);
        if (k != null && ((_this_getItem = this.getItem(k)) === null || _this_getItem === void 0 ? void 0 : _this_getItem.type) === "tablebody") return null;
        return k;
    }
    getChildren(key) {
        if (!this.getItem(key)) for (let row of this.headerRows){
            if (row.key === key) return row.childNodes;
        }
        return super.getChildren(key);
    }
    clone() {
        let collection = super.clone();
        collection.headerRows = this.headerRows;
        collection.columns = this.columns;
        collection.rowHeaderColumnKeys = this.rowHeaderColumnKeys;
        collection.head = this.head;
        collection.body = this.body;
        return collection;
    }
    getTextValue(key) {
        let row = this.getItem(key);
        if (!row) return "";
        // If the row has a textValue, use that.
        if (row.textValue) return row.textValue;
        // Otherwise combine the text of each of the row header columns.
        let rowHeaderColumnKeys = this.rowHeaderColumnKeys;
        let text = [];
        for (let cell of this.getChildren(key)){
            let column = this.columns[cell.index];
            if (rowHeaderColumnKeys.has(column.key) && cell.textValue) text.push(cell.textValue);
            if (text.length === rowHeaderColumnKeys.size) break;
        }
        return text.join(" ");
    }
    constructor(...args){
        super(...args);
        this.headerRows = [];
        this.columns = [];
        this.rowHeaderColumnKeys = new Set();
        this.head = new (0, $3114c2382242bdc0$export$f5d856d854e74713)("tableheader", -1);
        this.body = new (0, $3114c2382242bdc0$export$f5d856d854e74713)("tablebody", -2);
        this.columnsDirty = true;
    }
}
const $37b9a5d4bd0d4ded$var$ResizableTableContainerContext = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
function $37b9a5d4bd0d4ded$var$ResizableTableContainer(props, ref) {
    let objectRef = (0, $bzgmy$reactariautils.useObjectRef)(ref);
    let [width, setWidth] = (0, $bzgmy$react.useState)(0);
    (0, $bzgmy$reactariautils.useResizeObserver)({
        ref: objectRef,
        onResize () {
            var _objectRef_current;
            setWidth((_objectRef_current = objectRef.current) === null || _objectRef_current === void 0 ? void 0 : _objectRef_current.clientWidth);
        }
    });
    (0, $bzgmy$reactariautils.useLayoutEffect)(()=>{
        var _objectRef_current;
        setWidth((_objectRef_current = objectRef.current) === null || _objectRef_current === void 0 ? void 0 : _objectRef_current.clientWidth);
    }, [
        objectRef
    ]);
    let ctx = (0, $bzgmy$react.useMemo)(()=>({
            tableWidth: width,
            useTableColumnResizeState: $bzgmy$reactstately.useTableColumnResizeState,
            onResizeStart: props.onResizeStart,
            onResize: props.onResize,
            onResizeEnd: props.onResizeEnd
        }), [
        width,
        props.onResizeStart,
        props.onResize,
        props.onResizeEnd
    ]);
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...(0, $bzgmy$reactariautils.filterDOMProps)(props),
        ref: objectRef,
        className: props.className || "react-aria-ResizableTableContainer",
        style: props.style,
        onScroll: props.onScroll
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($37b9a5d4bd0d4ded$var$ResizableTableContainerContext.Provider, {
        value: ctx
    }, props.children));
}
const $37b9a5d4bd0d4ded$export$7063e69b8a954175 = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($37b9a5d4bd0d4ded$var$ResizableTableContainer);
const $37b9a5d4bd0d4ded$export$93e4b0b2cc49b648 = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
const $37b9a5d4bd0d4ded$export$38de1cb0526c21fb = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
const $37b9a5d4bd0d4ded$export$a2680a798823803c = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
function $37b9a5d4bd0d4ded$var$Table(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $37b9a5d4bd0d4ded$export$93e4b0b2cc49b648);
    let initialCollection = (0, $bzgmy$react.useMemo)(()=>new $37b9a5d4bd0d4ded$var$TableCollection(), []);
    let { portal: portal, collection: collection } = (0, $3114c2382242bdc0$export$6cd28814d92fa9c9)(props, initialCollection);
    let state = (0, $bzgmy$reactstately.useTableState)({
        ...props,
        collection: collection,
        children: undefined
    });
    let { gridProps: gridProps } = (0, $bzgmy$reactaria.useTable)(props, state, ref);
    let { dragAndDropHooks: dragAndDropHooks } = props;
    let selectionManager = state.selectionManager;
    let isListDraggable = !!(dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.useDraggableCollectionState);
    let isListDroppable = !!(dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.useDroppableCollectionState);
    let dragHooksProvided = (0, $bzgmy$react.useRef)(isListDraggable);
    let dropHooksProvided = (0, $bzgmy$react.useRef)(isListDroppable);
    (0, $bzgmy$react.useEffect)(()=>{
        if (dragHooksProvided.current !== isListDraggable) console.warn("Drag hooks were provided during one render, but not another. This should be avoided as it may produce unexpected behavior.");
        if (dropHooksProvided.current !== isListDroppable) console.warn("Drop hooks were provided during one render, but not another. This should be avoided as it may produce unexpected behavior.");
    }, [
        isListDraggable,
        isListDroppable
    ]);
    let dragState = undefined;
    let dropState = undefined;
    let droppableCollection = undefined;
    let isRootDropTarget = false;
    let dragPreview = null;
    let preview = (0, $bzgmy$react.useRef)(null);
    if (isListDraggable && dragAndDropHooks) {
        dragState = dragAndDropHooks.useDraggableCollectionState({
            collection: collection,
            selectionManager: selectionManager,
            preview: dragAndDropHooks.renderDragPreview ? preview : undefined
        });
        dragAndDropHooks.useDraggableCollection({}, dragState, ref);
        let DragPreview = dragAndDropHooks.DragPreview;
        dragPreview = dragAndDropHooks.renderDragPreview ? /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement(DragPreview, {
            ref: preview
        }, dragAndDropHooks.renderDragPreview) : null;
    }
    if (isListDroppable && dragAndDropHooks) {
        dropState = dragAndDropHooks.useDroppableCollectionState({
            collection: collection,
            selectionManager: selectionManager
        });
        let keyboardDelegate = new (0, $bzgmy$reactaria.ListKeyboardDelegate)(collection, selectionManager.disabledBehavior === "selection" ? new Set() : selectionManager.disabledKeys, ref);
        let dropTargetDelegate = dragAndDropHooks.dropTargetDelegate || new dragAndDropHooks.ListDropTargetDelegate(collection, ref);
        droppableCollection = dragAndDropHooks.useDroppableCollection({
            keyboardDelegate: keyboardDelegate,
            dropTargetDelegate: dropTargetDelegate
        }, dropState, ref);
        isRootDropTarget = dropState.isDropTarget({
            type: "root"
        });
    }
    let { focusProps: focusProps, isFocused: isFocused, isFocusVisible: isFocusVisible } = (0, $bzgmy$reactaria.useFocusRing)();
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        className: props.className,
        style: props.style,
        defaultClassName: "react-aria-Table",
        values: {
            isDropTarget: isRootDropTarget,
            isFocused: isFocused,
            isFocusVisible: isFocusVisible,
            state: state
        }
    });
    let { selectionBehavior: selectionBehavior, selectionMode: selectionMode, disallowEmptySelection: disallowEmptySelection } = state.selectionManager;
    let ctx = (0, $bzgmy$react.useMemo)(()=>({
            selectionBehavior: selectionMode === "none" ? null : selectionBehavior,
            selectionMode: selectionMode,
            disallowEmptySelection: disallowEmptySelection,
            allowsDragging: isListDraggable
        }), [
        selectionBehavior,
        selectionMode,
        disallowEmptySelection,
        isListDraggable
    ]);
    let style = renderProps.style;
    let tableContainerContext = (0, $bzgmy$react.useContext)($37b9a5d4bd0d4ded$var$ResizableTableContainerContext);
    let layoutState = null;
    if (tableContainerContext) {
        layoutState = tableContainerContext.useTableColumnResizeState({
            tableWidth: tableContainerContext.tableWidth
        }, state);
        style = {
            ...style,
            tableLayout: "fixed",
            width: "fit-content"
        };
    }
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, ($parcel$interopDefault($bzgmy$react))).Fragment, null, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($37b9a5d4bd0d4ded$var$TableOptionsContext.Provider, {
        value: ctx
    }, portal), /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c5ccf687772c0422$export$2881499e37b75b9a), {
        values: [
            [
                $37b9a5d4bd0d4ded$export$38de1cb0526c21fb,
                state
            ],
            [
                $37b9a5d4bd0d4ded$export$a2680a798823803c,
                layoutState
            ],
            [
                (0, $368d79437ab76c11$export$d188a835a7bc5783),
                {
                    dragAndDropHooks: dragAndDropHooks,
                    dragState: dragState,
                    dropState: dropState
                }
            ],
            [
                (0, $368d79437ab76c11$export$f55761759794cf55),
                {
                    render: $37b9a5d4bd0d4ded$var$TableDropIndicatorWrapper
                }
            ]
        ]
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $bzgmy$reactaria.FocusScope), null, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("table", {
        ...(0, $bzgmy$reactariautils.filterDOMProps)(props),
        ...renderProps,
        ...(0, $bzgmy$reactaria.mergeProps)(gridProps, focusProps, droppableCollection === null || droppableCollection === void 0 ? void 0 : droppableCollection.collectionProps),
        style: style,
        ref: ref,
        slot: props.slot || undefined,
        onScroll: props.onScroll,
        "data-allows-dragging": isListDraggable || undefined,
        "data-drop-target": isRootDropTarget || undefined,
        "data-focused": isFocused || undefined,
        "data-focus-visible": isFocusVisible || undefined
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($37b9a5d4bd0d4ded$var$TableHeaderRowGroup, {
        collection: collection
    }), /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($37b9a5d4bd0d4ded$var$TableBodyRowGroup, {
        collection: collection,
        isDroppable: isListDroppable
    }))), dragPreview));
}
/**
 * A table displays data in rows and columns and enables a user to navigate its contents via directional navigation keys,
 * and optionally supports row selection and sorting.
 */ const $37b9a5d4bd0d4ded$export$54ec01a60f47d33d = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($37b9a5d4bd0d4ded$var$Table);
const $37b9a5d4bd0d4ded$var$TableOptionsContext = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
function $37b9a5d4bd0d4ded$export$fddc468cd8cb4db9() {
    return (0, $bzgmy$react.useContext)($37b9a5d4bd0d4ded$var$TableOptionsContext);
}
function $37b9a5d4bd0d4ded$var$TableHeader(props, ref) {
    let children = (0, $3114c2382242bdc0$export$901dbff4e54a6dd0)({
        children: props.children,
        items: props.columns,
        dependencies: props.dependencies
    });
    let renderer = typeof props.children === "function" ? props.children : null;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $3114c2382242bdc0$export$4feb769f8ddf26c5).Provider, {
        value: renderer
    }, (0, $3114c2382242bdc0$export$e7c29ae2353b16ea)("tableheader", props, ref, null, children));
}
/**
 * A header within a `<Table>`, containing the table columns.
 */ const $37b9a5d4bd0d4ded$export$f850895b287ef28e = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($37b9a5d4bd0d4ded$var$TableHeader);
function $37b9a5d4bd0d4ded$var$Column(props, ref) {
    return (0, $3114c2382242bdc0$export$e7c29ae2353b16ea)("column", props, ref, props.children);
}
/**
 * A column within a `<Table>`.
 */ const $37b9a5d4bd0d4ded$export$816b5d811295e6bc = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($37b9a5d4bd0d4ded$var$Column);
function $37b9a5d4bd0d4ded$var$TableBody(props, ref) {
    let children = (0, $3114c2382242bdc0$export$901dbff4e54a6dd0)(props);
    return (0, $3114c2382242bdc0$export$e7c29ae2353b16ea)("tablebody", props, ref, null, children);
}
/**
 * The body of a `<Table>`, containing the table rows.
 */ const $37b9a5d4bd0d4ded$export$76ccd210b9029917 = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($37b9a5d4bd0d4ded$var$TableBody);
function $37b9a5d4bd0d4ded$var$Row(props, ref) {
    let dependencies = [
        props.value
    ].concat(props.dependencies);
    let children = (0, $3114c2382242bdc0$export$901dbff4e54a6dd0)({
        dependencies: dependencies,
        children: props.children,
        items: props.columns,
        idScope: props.id
    });
    let ctx = (0, $bzgmy$react.useMemo)(()=>({
            idScope: props.id,
            dependencies: dependencies
        }), [
        props.id,
        ...dependencies
    ]);
    return (0, $3114c2382242bdc0$export$e7c29ae2353b16ea)("item", props, ref, null, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $3114c2382242bdc0$export$db36075d98ba73d3).Provider, {
        value: ctx
    }, children));
}
/**
 * A row within a `<Table>`.
 */ const $37b9a5d4bd0d4ded$export$b59bdbef9ce70de2 = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($37b9a5d4bd0d4ded$var$Row);
function $37b9a5d4bd0d4ded$var$Cell(props, ref) {
    return (0, $3114c2382242bdc0$export$e7c29ae2353b16ea)("cell", props, ref, props.children);
}
/**
 * A cell within a table row.
 */ const $37b9a5d4bd0d4ded$export$f6f0c3fe4ec306ea = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($37b9a5d4bd0d4ded$var$Cell);
function $37b9a5d4bd0d4ded$var$TableHeaderRowGroup({ collection: collection }) {
    let headerRows = (0, $3114c2382242bdc0$export$727c8fc270210f13)({
        items: collection.headerRows,
        children: (0, $bzgmy$react.useCallback)((item)=>{
            switch(item.type){
                case "headerrow":
                    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($37b9a5d4bd0d4ded$var$TableHeaderRow, {
                        item: item
                    });
                default:
                    throw new Error("Unsupported node type in TableHeader: " + item.type);
            }
        }, [])
    });
    let { rowGroupProps: rowGroupProps } = (0, $bzgmy$reactaria.useTableRowGroup)();
    var _collection_head_props_className;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("thead", {
        ...(0, $bzgmy$reactariautils.filterDOMProps)(collection.head.props),
        ...rowGroupProps,
        ref: collection.head.props.ref,
        className: (_collection_head_props_className = collection.head.props.className) !== null && _collection_head_props_className !== void 0 ? _collection_head_props_className : "react-aria-TableHeader",
        style: collection.head.props.style
    }, headerRows);
}
function $37b9a5d4bd0d4ded$var$TableBodyRowGroup(props) {
    let { collection: collection, isDroppable: isDroppable } = props;
    let bodyRows = (0, $3114c2382242bdc0$export$727c8fc270210f13)({
        items: collection.rows,
        children: (0, $bzgmy$react.useCallback)((item)=>{
            switch(item.type){
                case "item":
                    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($37b9a5d4bd0d4ded$var$TableRow, {
                        item: item
                    });
                default:
                    throw new Error("Unsupported node type in TableBody: " + item.type);
            }
        }, [])
    });
    let state = (0, $bzgmy$react.useContext)($37b9a5d4bd0d4ded$export$38de1cb0526c21fb);
    let { dropState: dropState } = (0, $bzgmy$react.useContext)((0, $368d79437ab76c11$export$d188a835a7bc5783));
    var _dropState_isDropTarget;
    let isRootDropTarget = isDroppable && !!dropState && ((_dropState_isDropTarget = dropState.isDropTarget({
        type: "root"
    })) !== null && _dropState_isDropTarget !== void 0 ? _dropState_isDropTarget : false);
    let bodyProps = collection.body.props;
    let renderValues = {
        isDropTarget: isRootDropTarget,
        isEmpty: collection.size === 0
    };
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...bodyProps,
        id: undefined,
        children: undefined,
        defaultClassName: "react-aria-TableBody",
        values: renderValues
    });
    let emptyState;
    if (collection.size === 0 && bodyProps.renderEmptyState && state) emptyState = /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("tr", {
        role: "row"
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("td", {
        role: "gridcell",
        colSpan: collection.columnCount
    }, bodyProps.renderEmptyState(renderValues)));
    let { rowGroupProps: rowGroupProps } = (0, $bzgmy$reactaria.useTableRowGroup)();
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("tbody", {
        ...(0, $bzgmy$reactaria.mergeProps)((0, $bzgmy$reactariautils.filterDOMProps)(bodyProps), rowGroupProps),
        ...renderProps,
        ref: collection.body.props.ref,
        "data-empty": collection.size === 0 || undefined
    }, isDroppable && /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($37b9a5d4bd0d4ded$var$RootDropIndicator, null), bodyRows, emptyState);
}
function $37b9a5d4bd0d4ded$var$TableHeaderRow({ item: item }) {
    let ref = (0, $bzgmy$react.useRef)(null);
    let state = (0, $bzgmy$react.useContext)($37b9a5d4bd0d4ded$export$38de1cb0526c21fb);
    let { rowProps: rowProps } = (0, $bzgmy$reactaria.useTableHeaderRow)({
        node: item
    }, state, ref);
    let { checkboxProps: checkboxProps } = (0, $bzgmy$reactaria.useTableSelectAllCheckbox)(state);
    let cells = (0, $3114c2382242bdc0$export$727c8fc270210f13)({
        items: state.collection.getChildren(item.key),
        children: (item)=>{
            switch(item.type){
                case "column":
                    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($37b9a5d4bd0d4ded$var$TableColumnHeader, {
                        column: item
                    });
                default:
                    throw new Error("Unsupported node type in Row: " + item.type);
            }
        }
    });
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("tr", {
        ...rowProps,
        ref: ref
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c5ccf687772c0422$export$2881499e37b75b9a), {
        values: [
            [
                (0, $e733553516d848a9$export$b085522c77523c51),
                {
                    slots: {
                        selection: checkboxProps
                    }
                }
            ]
        ]
    }, cells));
}
const $37b9a5d4bd0d4ded$var$ColumnResizerContext = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
function $37b9a5d4bd0d4ded$var$TableColumnHeader({ column: column }) {
    var _state_sortDescriptor, _state_sortDescriptor1;
    let ref = (0, $bzgmy$reactariautils.useObjectRef)(column.props.ref);
    let state = (0, $bzgmy$react.useContext)($37b9a5d4bd0d4ded$export$38de1cb0526c21fb);
    let { columnHeaderProps: columnHeaderProps } = (0, $bzgmy$reactaria.useTableColumnHeader)({
        node: column
    }, state, ref);
    let { isFocused: isFocused, isFocusVisible: isFocusVisible, focusProps: focusProps } = (0, $bzgmy$reactaria.useFocusRing)();
    let layoutState = (0, $bzgmy$react.useContext)($37b9a5d4bd0d4ded$export$a2680a798823803c);
    let isResizing = false;
    if (layoutState) isResizing = layoutState.resizingColumn === column.key;
    else {
        for(let prop in [
            "width",
            "defaultWidth",
            "minWidth",
            "maxWidth"
        ])if (prop in column.props) console.warn(`The ${prop} prop on a <Column> only applies when a <Table> is wrapped in a <ResizableTableContainer>. If you aren't using column resizing, you can set the width of a column with CSS.`);
    }
    let props = column.props;
    let { hoverProps: hoverProps, isHovered: isHovered } = (0, $bzgmy$reactaria.useHover)({
        isDisabled: !props.allowsSorting
    });
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        id: undefined,
        children: column.rendered,
        defaultClassName: "react-aria-Column",
        values: {
            isHovered: isHovered,
            isFocused: isFocused,
            isFocusVisible: isFocusVisible,
            allowsSorting: column.props.allowsSorting,
            sortDirection: ((_state_sortDescriptor = state.sortDescriptor) === null || _state_sortDescriptor === void 0 ? void 0 : _state_sortDescriptor.column) === column.key ? state.sortDescriptor.direction : undefined,
            isResizing: isResizing,
            startResize: ()=>{
                if (layoutState) {
                    layoutState.startResize(column.key);
                    state.setKeyboardNavigationDisabled(true);
                } else throw new Error("Wrap your <Table> in a <ResizableTableContainer> to enable column resizing");
            },
            sort: (direction)=>{
                state.sort(column.key, direction);
            }
        }
    });
    let style = renderProps.style;
    if (layoutState) style = {
        ...style,
        width: layoutState.getColumnWidth(column.key)
    };
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("th", {
        ...(0, $bzgmy$reactaria.mergeProps)((0, $bzgmy$reactariautils.filterDOMProps)(props), columnHeaderProps, focusProps, hoverProps),
        ...renderProps,
        style: style,
        colSpan: column.colspan,
        ref: ref,
        "data-hovered": isHovered || undefined,
        "data-focused": isFocused || undefined,
        "data-focus-visible": isFocusVisible || undefined,
        "data-resizing": isResizing || undefined,
        "data-allows-sorting": column.props.allowsSorting || undefined,
        "data-sort-direction": ((_state_sortDescriptor1 = state.sortDescriptor) === null || _state_sortDescriptor1 === void 0 ? void 0 : _state_sortDescriptor1.column) === column.key ? state.sortDescriptor.direction : undefined
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($37b9a5d4bd0d4ded$var$ColumnResizerContext.Provider, {
        value: {
            column: column,
            triggerRef: ref
        }
    }, renderProps.children));
}
function $37b9a5d4bd0d4ded$var$ColumnResizer(props, ref) {
    let layoutState = (0, $bzgmy$react.useContext)($37b9a5d4bd0d4ded$export$a2680a798823803c);
    if (!layoutState) throw new Error("Wrap your <Table> in a <ResizableTableContainer> to enable column resizing");
    let stringFormatter = (0, $bzgmy$reactaria.useLocalizedStringFormatter)((0, (/*@__PURE__*/$parcel$interopDefault($d72d752ea1c67b9a$exports))), "react-aria-components");
    let { onResizeStart: onResizeStart, onResize: onResize, onResizeEnd: onResizeEnd } = (0, $bzgmy$react.useContext)($37b9a5d4bd0d4ded$var$ResizableTableContainerContext);
    let { column: column, triggerRef: triggerRef } = (0, $bzgmy$react.useContext)($37b9a5d4bd0d4ded$var$ColumnResizerContext);
    let inputRef = (0, $bzgmy$react.useRef)(null);
    let { resizerProps: resizerProps, inputProps: inputProps, isResizing: isResizing } = (0, $bzgmy$reactaria.useTableColumnResize)({
        column: column,
        "aria-label": props["aria-label"] || stringFormatter.format("tableResizer"),
        onResizeStart: onResizeStart,
        onResize: onResize,
        onResizeEnd: onResizeEnd,
        triggerRef: triggerRef
    }, layoutState, inputRef);
    let { focusProps: focusProps, isFocused: isFocused, isFocusVisible: isFocusVisible } = (0, $bzgmy$reactaria.useFocusRing)();
    let { hoverProps: hoverProps, isHovered: isHovered } = (0, $bzgmy$reactaria.useHover)(props);
    let isEResizable = layoutState.getColumnMinWidth(column.key) >= layoutState.getColumnWidth(column.key);
    let isWResizable = layoutState.getColumnMaxWidth(column.key) <= layoutState.getColumnWidth(column.key);
    let { direction: direction } = (0, $bzgmy$reactaria.useLocale)();
    let resizableDirection = "both";
    if (isEResizable) resizableDirection = direction === "rtl" ? "right" : "left";
    else if (isWResizable) resizableDirection = direction === "rtl" ? "left" : "right";
    else resizableDirection = "both";
    let objectRef = (0, $bzgmy$reactariautils.useObjectRef)(ref);
    let [cursor, setCursor] = (0, $bzgmy$react.useState)("");
    (0, $bzgmy$react.useEffect)(()=>{
        let style = window.getComputedStyle(objectRef.current);
        setCursor(style.cursor);
    }, [
        objectRef,
        resizableDirection
    ]);
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        defaultClassName: "react-aria-ColumnResizer",
        values: {
            isFocused: isFocused,
            isFocusVisible: isFocusVisible,
            isResizing: isResizing,
            isHovered: isHovered,
            resizableDirection: resizableDirection
        }
    });
    let [isMouseDown, setMouseDown] = (0, $bzgmy$react.useState)(false);
    let onPointerDown = (e)=>{
        if (e.pointerType === "mouse") setMouseDown(true);
    };
    if (!isResizing && isMouseDown) setMouseDown(false);
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ref: objectRef,
        role: "presentation",
        ...renderProps,
        ...(0, $bzgmy$reactaria.mergeProps)(resizerProps, {
            onPointerDown: onPointerDown
        }, hoverProps),
        "data-hovered": isHovered || undefined,
        "data-focused": isFocused || undefined,
        "data-focus-visible": isFocusVisible || undefined,
        "data-resizing": isResizing || undefined,
        "data-resizable-direction": resizableDirection
    }, renderProps.children, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("input", {
        ref: inputRef,
        ...(0, $bzgmy$reactaria.mergeProps)(inputProps, focusProps)
    }), isResizing && isMouseDown && /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$reactdom))).createPortal(/*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        style: {
            position: "fixed",
            top: 0,
            left: 0,
            bottom: 0,
            right: 0,
            cursor: cursor
        }
    }), document.body));
}
const $37b9a5d4bd0d4ded$export$ee689e97a7664bfd = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($37b9a5d4bd0d4ded$var$ColumnResizer);
function $37b9a5d4bd0d4ded$var$TableRow({ item: item }) {
    let ref = (0, $bzgmy$reactariautils.useObjectRef)(item.props.ref);
    let state = (0, $bzgmy$react.useContext)($37b9a5d4bd0d4ded$export$38de1cb0526c21fb);
    let { dragAndDropHooks: dragAndDropHooks, dragState: dragState, dropState: dropState } = (0, $bzgmy$react.useContext)((0, $368d79437ab76c11$export$d188a835a7bc5783));
    let { rowProps: rowProps, ...states } = (0, $bzgmy$reactaria.useTableRow)({
        node: item,
        shouldSelectOnPressUp: !!dragState
    }, state, ref);
    let { isFocused: isFocused, isFocusVisible: isFocusVisible, focusProps: focusProps } = (0, $bzgmy$reactaria.useFocusRing)();
    let { hoverProps: hoverProps, isHovered: isHovered } = (0, $bzgmy$reactaria.useHover)({
        isDisabled: !states.allowsSelection && !states.hasAction
    });
    let { checkboxProps: checkboxProps } = (0, $bzgmy$reactaria.useTableSelectionCheckbox)({
        key: item.key
    }, state);
    let draggableItem = undefined;
    if (dragState && dragAndDropHooks) draggableItem = dragAndDropHooks.useDraggableItem({
        key: item.key,
        hasDragButton: true
    }, dragState);
    let dropIndicator = undefined;
    let dropIndicatorRef = (0, $bzgmy$react.useRef)(null);
    let { visuallyHiddenProps: visuallyHiddenProps } = (0, $bzgmy$reactaria.useVisuallyHidden)();
    if (dropState && dragAndDropHooks) dropIndicator = dragAndDropHooks.useDropIndicator({
        target: {
            type: "item",
            key: item.key,
            dropPosition: "on"
        }
    }, dropState, dropIndicatorRef);
    let renderDropIndicator = (dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.renderDropIndicator) || ((target)=>/*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $368d79437ab76c11$export$62ed72bc21f6b8a6), {
            target: target
        }));
    let dragButtonRef = (0, $bzgmy$react.useRef)(null);
    (0, $bzgmy$react.useEffect)(()=>{
        if (dragState && !dragButtonRef.current) console.warn('Draggable items in a Table must contain a <Button slot="drag"> element so that keyboard and screen reader users can drag them.');
    // eslint-disable-next-line
    }, []);
    let props = item.props;
    let isDragging = dragState && dragState.isDragging(item.key);
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    let { children: _, ...restProps } = props;
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...restProps,
        id: undefined,
        defaultClassName: "react-aria-Row",
        values: {
            ...states,
            isHovered: isHovered,
            isFocused: isFocused,
            isFocusVisible: isFocusVisible,
            selectionMode: state.selectionManager.selectionMode,
            selectionBehavior: state.selectionManager.selectionBehavior,
            isDragging: isDragging,
            isDropTarget: dropIndicator === null || dropIndicator === void 0 ? void 0 : dropIndicator.isDropTarget
        }
    });
    let cells = (0, $3114c2382242bdc0$export$727c8fc270210f13)({
        items: state.collection.getChildren(item.key),
        children: (item)=>{
            switch(item.type){
                case "cell":
                    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($37b9a5d4bd0d4ded$var$TableCell, {
                        cell: item
                    });
                default:
                    throw new Error("Unsupported node type in Row: " + item.type);
            }
        }
    });
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, ($parcel$interopDefault($bzgmy$react))).Fragment, null, (dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.useDropIndicator) && renderDropIndicator({
        type: "item",
        key: item.key,
        dropPosition: "before"
    }), dropIndicator && !dropIndicator.isHidden && /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("tr", {
        role: "row",
        style: {
            height: 0
        }
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("td", {
        role: "gridcell",
        colSpan: state.collection.columnCount,
        style: {
            padding: 0
        }
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        role: "button",
        ...visuallyHiddenProps,
        ...dropIndicator.dropIndicatorProps,
        ref: dropIndicatorRef
    }))), /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("tr", {
        ...(0, $bzgmy$reactaria.mergeProps)((0, $bzgmy$reactariautils.filterDOMProps)(props), rowProps, focusProps, hoverProps, draggableItem === null || draggableItem === void 0 ? void 0 : draggableItem.dragProps),
        ...renderProps,
        ref: ref,
        "data-disabled": states.isDisabled || undefined,
        "data-selected": states.isSelected || undefined,
        "data-hovered": isHovered || undefined,
        "data-focused": states.isFocused || undefined,
        "data-focus-visible": isFocusVisible || undefined,
        "data-pressed": states.isPressed || undefined,
        "data-dragging": isDragging || undefined,
        "data-drop-target": (dropIndicator === null || dropIndicator === void 0 ? void 0 : dropIndicator.isDropTarget) || undefined,
        "data-selection-mode": state.selectionManager.selectionMode === "none" ? undefined : state.selectionManager.selectionMode
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c5ccf687772c0422$export$2881499e37b75b9a), {
        values: [
            [
                (0, $e733553516d848a9$export$b085522c77523c51),
                {
                    slots: {
                        selection: checkboxProps
                    }
                }
            ],
            [
                (0, $b856e6788a7ea5bf$export$24d547caef80ccd1),
                {
                    slots: {
                        [(0, $c5ccf687772c0422$export$8e0ef2c5844bfb6b)]: {},
                        drag: {
                            ...draggableItem === null || draggableItem === void 0 ? void 0 : draggableItem.dragButtonProps,
                            ref: dragButtonRef,
                            style: {
                                pointerEvents: "none"
                            }
                        }
                    }
                }
            ]
        ]
    }, cells)), (dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.useDropIndicator) && state.collection.getKeyAfter(item.key) == null && renderDropIndicator({
        type: "item",
        key: item.key,
        dropPosition: "after"
    }));
}
function $37b9a5d4bd0d4ded$var$TableCell({ cell: cell }) {
    let ref = (0, $bzgmy$reactariautils.useObjectRef)(cell.props.ref);
    let state = (0, $bzgmy$react.useContext)($37b9a5d4bd0d4ded$export$38de1cb0526c21fb);
    let { dragState: dragState } = (0, $bzgmy$react.useContext)((0, $368d79437ab76c11$export$d188a835a7bc5783));
    // @ts-ignore
    cell.column = state.collection.columns[cell.index];
    let { gridCellProps: gridCellProps, isPressed: isPressed } = (0, $bzgmy$reactaria.useTableCell)({
        node: cell,
        shouldSelectOnPressUp: !!dragState
    }, state, ref);
    let { isFocused: isFocused, isFocusVisible: isFocusVisible, focusProps: focusProps } = (0, $bzgmy$reactaria.useFocusRing)();
    let { hoverProps: hoverProps, isHovered: isHovered } = (0, $bzgmy$reactaria.useHover)({});
    let props = cell.props;
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        id: undefined,
        defaultClassName: "react-aria-Cell",
        values: {
            isFocused: isFocused,
            isFocusVisible: isFocusVisible,
            isPressed: isPressed,
            isHovered: isHovered
        }
    });
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("td", {
        ...(0, $bzgmy$reactaria.mergeProps)((0, $bzgmy$reactariautils.filterDOMProps)(props), gridCellProps, focusProps, hoverProps),
        ...renderProps,
        ref: ref,
        "data-focused": isFocused || undefined,
        "data-focus-visible": isFocusVisible || undefined,
        "data-pressed": isPressed || undefined
    }, renderProps.children);
}
function $37b9a5d4bd0d4ded$var$TableDropIndicatorWrapper(props, ref) {
    ref = (0, $bzgmy$reactariautils.useObjectRef)(ref);
    let { dragAndDropHooks: dragAndDropHooks, dropState: dropState } = (0, $bzgmy$react.useContext)((0, $368d79437ab76c11$export$d188a835a7bc5783));
    let buttonRef = (0, $bzgmy$react.useRef)(null);
    let { dropIndicatorProps: dropIndicatorProps, isHidden: isHidden, isDropTarget: isDropTarget } = dragAndDropHooks.useDropIndicator(props, dropState, buttonRef);
    if (isHidden) return null;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($37b9a5d4bd0d4ded$var$TableDropIndicatorForwardRef, {
        ...props,
        dropIndicatorProps: dropIndicatorProps,
        isDropTarget: isDropTarget,
        buttonRef: buttonRef,
        ref: ref
    });
}
function $37b9a5d4bd0d4ded$var$TableDropIndicator(props, ref) {
    let { dropIndicatorProps: dropIndicatorProps, isDropTarget: isDropTarget, buttonRef: buttonRef, ...otherProps } = props;
    let state = (0, $bzgmy$react.useContext)($37b9a5d4bd0d4ded$export$38de1cb0526c21fb);
    let { visuallyHiddenProps: visuallyHiddenProps } = (0, $bzgmy$reactaria.useVisuallyHidden)();
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...otherProps,
        defaultClassName: "react-aria-DropIndicator",
        values: {
            isDropTarget: isDropTarget
        }
    });
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("tr", {
        ...(0, $bzgmy$reactariautils.filterDOMProps)(props),
        ...renderProps,
        role: "row",
        ref: ref,
        "data-drop-target": isDropTarget || undefined
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("td", {
        role: "gridcell",
        colSpan: state.collection.columnCount,
        style: {
            padding: 0
        }
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...visuallyHiddenProps,
        role: "button",
        ...dropIndicatorProps,
        ref: buttonRef
    }), renderProps.children));
}
const $37b9a5d4bd0d4ded$var$TableDropIndicatorForwardRef = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($37b9a5d4bd0d4ded$var$TableDropIndicator);
function $37b9a5d4bd0d4ded$var$RootDropIndicator() {
    let state = (0, $bzgmy$react.useContext)($37b9a5d4bd0d4ded$export$38de1cb0526c21fb);
    let { dragAndDropHooks: dragAndDropHooks, dropState: dropState } = (0, $bzgmy$react.useContext)((0, $368d79437ab76c11$export$d188a835a7bc5783));
    let ref = (0, $bzgmy$react.useRef)(null);
    let { dropIndicatorProps: dropIndicatorProps } = dragAndDropHooks.useDropIndicator({
        target: {
            type: "root"
        }
    }, dropState, ref);
    let isDropTarget = dropState.isDropTarget({
        type: "root"
    });
    let { visuallyHiddenProps: visuallyHiddenProps } = (0, $bzgmy$reactaria.useVisuallyHidden)();
    if (!isDropTarget && dropIndicatorProps["aria-hidden"]) return null;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("tr", {
        role: "row",
        "aria-hidden": dropIndicatorProps["aria-hidden"],
        style: {
            height: 0
        }
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("td", {
        role: "gridcell",
        colSpan: state.collection.columnCount,
        style: {
            padding: 0
        }
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        role: "button",
        ...visuallyHiddenProps,
        ...dropIndicatorProps,
        ref: ref
    })));
}


/*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 





const $f982e6cd1aac14a3$export$cfa7aa87c26e7d1f = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
const $f982e6cd1aac14a3$export$364712098d2aa57c = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
function $f982e6cd1aac14a3$var$Tabs(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $f982e6cd1aac14a3$export$cfa7aa87c26e7d1f);
    let { collection: collection, document: document } = (0, $3114c2382242bdc0$export$7cd71aa5ddd6dc4e)();
    let { children: children, orientation: orientation = "horizontal" } = props;
    children = (0, $bzgmy$react.useMemo)(()=>typeof children === "function" ? children({
            orientation: orientation
        }) : children, [
        children,
        orientation
    ]);
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, ($parcel$interopDefault($bzgmy$react))).Fragment, null, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c5ccf687772c0422$export$8dc98ba7eadeaa56), null, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $3114c2382242bdc0$export$8c25dea96356a8b6).Provider, {
        value: document
    }, children)), /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($f982e6cd1aac14a3$var$TabsInner, {
        props: props,
        collection: collection,
        tabsRef: ref
    }));
}
function $f982e6cd1aac14a3$var$TabsInner({ props: props, tabsRef: ref, collection: collection }) {
    let { orientation: orientation = "horizontal" } = props;
    let state = (0, $bzgmy$reactstately.useTabListState)({
        ...props,
        collection: collection,
        children: undefined
    });
    let { focusProps: focusProps, isFocused: isFocused, isFocusVisible: isFocusVisible } = (0, $bzgmy$reactaria.useFocusRing)({
        within: true
    });
    let values = (0, $bzgmy$react.useMemo)(()=>({
            orientation: orientation,
            isFocusWithin: isFocused,
            isFocusVisible: isFocusVisible
        }), [
        orientation,
        isFocused,
        isFocusVisible
    ]);
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        defaultClassName: "react-aria-Tabs",
        values: values
    });
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...(0, $bzgmy$reactariautils.filterDOMProps)(props),
        ...focusProps,
        ...renderProps,
        ref: ref,
        slot: props.slot || undefined,
        "data-focused": isFocused || undefined,
        "data-orientation": orientation,
        "data-focus-visible": isFocusVisible || undefined,
        "data-disabled": state.isDisabled || undefined
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c5ccf687772c0422$export$2881499e37b75b9a), {
        values: [
            [
                $f982e6cd1aac14a3$export$cfa7aa87c26e7d1f,
                props
            ],
            [
                $f982e6cd1aac14a3$export$364712098d2aa57c,
                state
            ]
        ]
    }, renderProps.children));
}
/**
 * Tabs organize content into multiple sections and allow users to navigate between them.
 */ const $f982e6cd1aac14a3$export$b2539bed5023c21c = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($f982e6cd1aac14a3$var$Tabs);
function $f982e6cd1aac14a3$var$TabList(props, ref) {
    let document = (0, $bzgmy$react.useContext)((0, $3114c2382242bdc0$export$8c25dea96356a8b6));
    return document ? /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $3114c2382242bdc0$export$813b5978dd974d8), props) : /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($f982e6cd1aac14a3$var$TabListInner, {
        props: props,
        forwardedRef: ref
    });
}
function $f982e6cd1aac14a3$var$TabListInner({ props: props, forwardedRef: ref }) {
    let state = (0, $bzgmy$react.useContext)($f982e6cd1aac14a3$export$364712098d2aa57c);
    let { orientation: orientation = "horizontal", keyboardActivation: keyboardActivation = "automatic" } = (0, $c5ccf687772c0422$export$fabf2dc03a41866e)($f982e6cd1aac14a3$export$cfa7aa87c26e7d1f);
    let objectRef = (0, $bzgmy$reactariautils.useObjectRef)(ref);
    let { tabListProps: tabListProps } = (0, $bzgmy$reactaria.useTabList)({
        ...props,
        orientation: orientation,
        keyboardActivation: keyboardActivation
    }, state, objectRef);
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        children: null,
        defaultClassName: "react-aria-TabList",
        values: {
            orientation: orientation,
            state: state
        }
    });
    let DOMProps = (0, $bzgmy$reactariautils.filterDOMProps)(props);
    delete DOMProps.id;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...DOMProps,
        ...tabListProps,
        ref: objectRef,
        ...renderProps,
        "data-orientation": orientation || undefined
    }, [
        ...state.collection
    ].map((item)=>/*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($f982e6cd1aac14a3$var$TabInner, {
            key: item.key,
            item: item,
            state: state
        })));
}
/**
 * A TabList is used within Tabs to group tabs that a user can switch between.
 * The ids of the items within the <TabList> must match up with a corresponding item inside the <TabPanels>.
 */ const $f982e6cd1aac14a3$export$e51a686c67fdaa2d = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($f982e6cd1aac14a3$var$TabList);
function $f982e6cd1aac14a3$var$Tab(props, ref) {
    return (0, $3114c2382242bdc0$export$e7c29ae2353b16ea)("item", props, ref, props.children);
}
/**
 * A Tab provides a title for an individual item within a TabList.
 */ const $f982e6cd1aac14a3$export$3e41faf802a29e71 = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($f982e6cd1aac14a3$var$Tab);
function $f982e6cd1aac14a3$var$TabInner({ item: item, state: state }) {
    let { key: key } = item;
    let ref = (0, $bzgmy$reactariautils.useObjectRef)(item.props.ref);
    let { tabProps: tabProps, isSelected: isSelected, isDisabled: isDisabled, isPressed: isPressed } = (0, $bzgmy$reactaria.useTab)({
        key: key
    }, state, ref);
    let { focusProps: focusProps, isFocused: isFocused, isFocusVisible: isFocusVisible } = (0, $bzgmy$reactaria.useFocusRing)();
    let { hoverProps: hoverProps, isHovered: isHovered } = (0, $bzgmy$reactaria.useHover)({
        isDisabled: isDisabled
    });
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...item.props,
        children: item.rendered,
        defaultClassName: "react-aria-Tab",
        values: {
            isSelected: isSelected,
            isDisabled: isDisabled,
            isFocused: isFocused,
            isFocusVisible: isFocusVisible,
            isPressed: isPressed,
            isHovered: isHovered,
            state: state
        }
    });
    let ElementType = item.props.href ? "a" : "div";
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement(ElementType, {
        ...(0, $bzgmy$reactaria.mergeProps)(tabProps, focusProps, hoverProps, renderProps),
        ref: ref,
        "data-selected": isSelected || undefined,
        "data-disabled": isDisabled || undefined,
        "data-focus-visible": isFocusVisible || undefined,
        "data-pressed": isPressed || undefined,
        "data-hovered": isHovered || undefined
    });
}
function $f982e6cd1aac14a3$var$TabPanel(props, forwardedRef) {
    const state = (0, $bzgmy$react.useContext)($f982e6cd1aac14a3$export$364712098d2aa57c);
    let ref = (0, $bzgmy$reactariautils.useObjectRef)(forwardedRef);
    let { tabPanelProps: tabPanelProps } = (0, $bzgmy$reactaria.useTabPanel)(props, state, ref);
    let { focusProps: focusProps, isFocused: isFocused, isFocusVisible: isFocusVisible } = (0, $bzgmy$reactaria.useFocusRing)();
    let isSelected = state.selectedKey === props.id;
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        defaultClassName: "react-aria-TabPanel",
        values: {
            isFocused: isFocused,
            isFocusVisible: isFocusVisible,
            isInert: !isSelected,
            state: state
        }
    });
    if (!isSelected && !props.shouldForceMount) return null;
    let DOMProps = (0, $bzgmy$reactariautils.filterDOMProps)(props);
    delete DOMProps.id;
    let domProps = isSelected ? (0, $bzgmy$reactaria.mergeProps)(DOMProps, tabPanelProps, focusProps, renderProps) : renderProps;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...domProps,
        ref: ref,
        "data-focused": isFocused || undefined,
        "data-focus-visible": isFocusVisible || undefined,
        // @ts-ignore
        inert: !isSelected ? "true" : undefined,
        "data-inert": !isSelected ? "true" : undefined
    });
}
/**
 * A TabPanel provides the content for a tab.
 */ const $f982e6cd1aac14a3$export$3d96ec278d3efce4 = /*#__PURE__*/ (0, $c5ccf687772c0422$export$86427a43e3e48ebb)($f982e6cd1aac14a3$var$TabPanel);


/*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 









const $ecf55d0c218a575e$export$5b07b5dd2cbd96e3 = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
const $ecf55d0c218a575e$export$e755ce3685dd0ca9 = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
function $ecf55d0c218a575e$var$TagGroup(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $ecf55d0c218a575e$export$5b07b5dd2cbd96e3);
    let tagListRef = (0, $bzgmy$react.useRef)(null);
    let [labelRef, label] = (0, $c5ccf687772c0422$export$9d4c57ee4c6ffdd8)();
    let { collection: collection, document: document } = (0, $3114c2382242bdc0$export$7cd71aa5ddd6dc4e)();
    let state = (0, $bzgmy$reactstately.useListState)({
        ...props,
        children: undefined,
        collection: collection
    });
    // Prevent DOM props from going to two places.
    let domProps = (0, $bzgmy$reactariautils.filterDOMProps)(props);
    let domPropOverrides = Object.fromEntries(Object.entries(domProps).map(([k])=>[
            k,
            undefined
        ]));
    let { gridProps: gridProps, labelProps: labelProps, descriptionProps: descriptionProps, errorMessageProps: errorMessageProps } = (0, $bzgmy$reactaria.useTagGroup)({
        ...props,
        ...domPropOverrides,
        label: label
    }, state, tagListRef);
    var _props_className;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...domProps,
        ref: ref,
        slot: props.slot || undefined,
        className: (_props_className = props.className) !== null && _props_className !== void 0 ? _props_className : "react-aria-TagGroup",
        style: props.style
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c5ccf687772c0422$export$2881499e37b75b9a), {
        values: [
            [
                (0, $84ae0bf5bd8e2a5f$export$75b6ee27786ba447),
                {
                    ...labelProps,
                    elementType: "span",
                    ref: labelRef
                }
            ],
            [
                $ecf55d0c218a575e$export$e755ce3685dd0ca9,
                {
                    ...gridProps,
                    ref: tagListRef
                }
            ],
            [
                (0, $a03b42240404b420$export$7c5906fe4f1f2af2),
                state
            ],
            [
                (0, $3114c2382242bdc0$export$8c25dea96356a8b6),
                document
            ],
            [
                (0, $a8a589c28affdc40$export$9afb8bc826b033ea),
                {
                    slots: {
                        description: descriptionProps,
                        errorMessage: errorMessageProps
                    }
                }
            ]
        ]
    }, props.children));
}
/**
 * A tag group is a focusable list of labels, categories, keywords, filters, or other items, with support for keyboard navigation, selection, and removal.
 */ const $ecf55d0c218a575e$export$67ea30858aaf75e3 = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($ecf55d0c218a575e$var$TagGroup);
function $ecf55d0c218a575e$var$TagList(props, forwardedRef) {
    // Render the portal first so that we have the collection by the time we render the DOM in SSR.
    let portal = (0, $3114c2382242bdc0$export$ad42d5efb4461b31)(props);
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, ($parcel$interopDefault($bzgmy$react))).Fragment, null, portal, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($ecf55d0c218a575e$var$TagListInner, {
        props: props,
        forwardedRef: forwardedRef
    }));
}
function $ecf55d0c218a575e$var$TagListInner({ props: props, forwardedRef: forwardedRef }) {
    let state = (0, $bzgmy$react.useContext)((0, $a03b42240404b420$export$7c5906fe4f1f2af2));
    let [gridProps, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, forwardedRef, $ecf55d0c218a575e$export$e755ce3685dd0ca9);
    delete gridProps.items;
    delete gridProps.renderEmptyState;
    let children = (0, $3114c2382242bdc0$export$727c8fc270210f13)({
        items: state.collection,
        children: (item)=>{
            switch(item.type){
                case "item":
                    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($ecf55d0c218a575e$var$TagItem, {
                        item: item
                    });
                default:
                    throw new Error("Unsupported node type in TagList: " + item.type);
            }
        }
    });
    let { focusProps: focusProps, isFocused: isFocused, isFocusVisible: isFocusVisible } = (0, $bzgmy$reactaria.useFocusRing)();
    let renderValues = {
        isEmpty: state.collection.size === 0,
        isFocused: isFocused,
        isFocusVisible: isFocusVisible,
        state: state
    };
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        className: props.className,
        style: props.style,
        defaultClassName: "react-aria-TagList",
        values: renderValues
    });
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...(0, $bzgmy$reactariautils.mergeProps)(gridProps, focusProps),
        ...renderProps,
        ref: ref,
        "data-empty": state.collection.size === 0 || undefined,
        "data-focused": isFocused || undefined,
        "data-focus-visible": isFocusVisible || undefined
    }, state.collection.size === 0 && props.renderEmptyState ? props.renderEmptyState(renderValues) : children);
}
/**
 * A tag list is a container for tags within a TagGroup.
 */ const $ecf55d0c218a575e$export$f9fef0f55402315b = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($ecf55d0c218a575e$var$TagList);
function $ecf55d0c218a575e$var$Tag(props, ref) {
    return (0, $3114c2382242bdc0$export$e7c29ae2353b16ea)("item", props, ref, props.children);
}
/**
 * A Tag is an individual item within a TagList.
 */ const $ecf55d0c218a575e$export$3288d34c523a1192 = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($ecf55d0c218a575e$var$Tag);
function $ecf55d0c218a575e$var$TagItem({ item: item }) {
    let state = (0, $bzgmy$react.useContext)((0, $a03b42240404b420$export$7c5906fe4f1f2af2));
    let ref = (0, $bzgmy$reactariautils.useObjectRef)(item.props.ref);
    let { focusProps: focusProps, isFocusVisible: isFocusVisible } = (0, $bzgmy$reactaria.useFocusRing)({
        within: true
    });
    let { rowProps: rowProps, gridCellProps: gridCellProps, removeButtonProps: removeButtonProps, ...states } = (0, $bzgmy$reactaria.useTag)({
        item: item
    }, state, ref);
    let { hoverProps: hoverProps, isHovered: isHovered } = (0, $bzgmy$reactaria.useHover)({
        isDisabled: !states.allowsSelection
    });
    let props = item.props;
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        id: undefined,
        children: item.rendered,
        defaultClassName: "react-aria-Tag",
        values: {
            ...states,
            isFocusVisible: isFocusVisible,
            isHovered: isHovered,
            selectionMode: state.selectionManager.selectionMode,
            selectionBehavior: state.selectionManager.selectionBehavior
        }
    });
    (0, $bzgmy$react.useEffect)(()=>{
        if (!item.textValue) console.warn("A `textValue` prop is required for <Tag> elements with non-plain text children for accessibility.");
    }, [
        item.textValue
    ]);
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ref: ref,
        ...renderProps,
        ...(0, $bzgmy$reactariautils.mergeProps)((0, $bzgmy$reactariautils.filterDOMProps)(props), rowProps, focusProps, hoverProps),
        "data-selected": states.isSelected || undefined,
        "data-disabled": states.isDisabled || undefined,
        "data-hovered": isHovered || undefined,
        "data-focused": states.isFocused || undefined,
        "data-focus-visible": isFocusVisible || undefined,
        "data-pressed": states.isPressed || undefined,
        "data-allows-removing": states.allowsRemoving || undefined,
        "data-selection-mode": state.selectionManager.selectionMode === "none" ? undefined : state.selectionManager.selectionMode
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...gridCellProps,
        style: {
            display: "contents"
        }
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c5ccf687772c0422$export$2881499e37b75b9a), {
        values: [
            [
                (0, $b856e6788a7ea5bf$export$24d547caef80ccd1),
                {
                    slots: {
                        remove: removeButtonProps
                    }
                }
            ]
        ]
    }, renderProps.children)));
}






const $a5d2423f42834231$export$2dc6166a7e65358c = /*#__PURE__*/ (0, $bzgmy$react.createContext)({});
let $a5d2423f42834231$var$filterHoverProps = (props)=>{
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    let { onHoverStart: onHoverStart, onHoverChange: onHoverChange, onHoverEnd: onHoverEnd, ...otherProps } = props;
    return otherProps;
};
function $a5d2423f42834231$var$TextArea(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $a5d2423f42834231$export$2dc6166a7e65358c);
    let { hoverProps: hoverProps, isHovered: isHovered } = (0, $bzgmy$reactaria.useHover)(props);
    let { isFocused: isFocused, isFocusVisible: isFocusVisible, focusProps: focusProps } = (0, $bzgmy$reactaria.useFocusRing)({
        isTextInput: true,
        autoFocus: props.autoFocus
    });
    let isInvalid = !!props["aria-invalid"] && props["aria-invalid"] !== "false";
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        values: {
            isHovered: isHovered,
            isFocused: isFocused,
            isFocusVisible: isFocusVisible,
            isDisabled: props.disabled || false,
            isInvalid: isInvalid
        },
        defaultClassName: "react-aria-TextArea"
    });
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("textarea", {
        ...(0, $bzgmy$reactaria.mergeProps)($a5d2423f42834231$var$filterHoverProps(props), focusProps, hoverProps),
        ...renderProps,
        ref: ref,
        "data-focused": isFocused || undefined,
        "data-disabled": props.disabled || undefined,
        "data-hovered": isHovered || undefined,
        "data-focus-visible": isFocusVisible || undefined,
        "data-invalid": isInvalid || undefined
    });
}
/**
 * A textarea allows a user to input mult-line text.
 */ const $a5d2423f42834231$export$f5c9f3c2c4054eec = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($a5d2423f42834231$var$TextArea);


/*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 








const $3f2c5af9d7d8905b$export$2129e27b3ef0d483 = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
function $3f2c5af9d7d8905b$var$TextField(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $3f2c5af9d7d8905b$export$2129e27b3ef0d483);
    let inputRef = (0, $bzgmy$react.useRef)(null);
    let [labelRef, label] = (0, $c5ccf687772c0422$export$9d4c57ee4c6ffdd8)();
    let [inputElementType, setInputElementType] = (0, $bzgmy$react.useState)("input");
    var _props_validationBehavior;
    let { labelProps: labelProps, inputProps: inputProps, descriptionProps: descriptionProps, errorMessageProps: errorMessageProps, ...validation } = (0, $bzgmy$reactaria.useTextField)({
        ...(0, $c5ccf687772c0422$export$ef03459518577ad4)(props),
        inputElementType: inputElementType,
        label: label,
        validationBehavior: (_props_validationBehavior = props.validationBehavior) !== null && _props_validationBehavior !== void 0 ? _props_validationBehavior : "native"
    }, inputRef);
    // Intercept setting the input ref so we can determine what kind of element we have.
    // useTextField uses this to determine what props to include.
    let inputOrTextAreaRef = (0, $bzgmy$react.useCallback)((el)=>{
        inputRef.current = el;
        if (el) setInputElementType(el instanceof HTMLTextAreaElement ? "textarea" : "input");
    }, []);
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        values: {
            isDisabled: props.isDisabled || false,
            isInvalid: validation.isInvalid
        },
        defaultClassName: "react-aria-TextField"
    });
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...(0, $bzgmy$reactariautils.filterDOMProps)(props),
        ...renderProps,
        ref: ref,
        slot: props.slot || undefined,
        "data-disabled": props.isDisabled || undefined,
        "data-invalid": validation.isInvalid || undefined
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c5ccf687772c0422$export$2881499e37b75b9a), {
        values: [
            [
                (0, $84ae0bf5bd8e2a5f$export$75b6ee27786ba447),
                {
                    ...labelProps,
                    ref: labelRef
                }
            ],
            [
                (0, $1bcfcef5af644e13$export$37fb8590cf2c088c),
                {
                    ...inputProps,
                    ref: inputOrTextAreaRef
                }
            ],
            [
                (0, $a5d2423f42834231$export$2dc6166a7e65358c),
                {
                    ...inputProps,
                    ref: inputOrTextAreaRef
                }
            ],
            [
                (0, $a8a589c28affdc40$export$9afb8bc826b033ea),
                {
                    slots: {
                        description: descriptionProps,
                        errorMessage: errorMessageProps
                    }
                }
            ],
            [
                (0, $846a838139f2ac6b$export$ff05c3ac10437e03),
                validation
            ]
        ]
    }, renderProps.children));
}
/**
 * A text field allows a user to enter a plain text value with a keyboard.
 */ const $3f2c5af9d7d8905b$export$2c73285ae9390cec = (0, $bzgmy$react.forwardRef)($3f2c5af9d7d8905b$var$TextField);


/*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 



const $3def510c5b419a98$export$43506d75ebd2e218 = /*#__PURE__*/ (0, $bzgmy$react.createContext)({});
function $3def510c5b419a98$var$ToggleButton(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $3def510c5b419a98$export$43506d75ebd2e218);
    let state = (0, $bzgmy$reactstately.useToggleState)(props);
    let { buttonProps: buttonProps, isPressed: isPressed } = (0, $bzgmy$reactaria.useToggleButton)(props, state, ref);
    let { focusProps: focusProps, isFocused: isFocused, isFocusVisible: isFocusVisible } = (0, $bzgmy$reactaria.useFocusRing)(props);
    let { hoverProps: hoverProps, isHovered: isHovered } = (0, $bzgmy$reactaria.useHover)(props);
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        values: {
            isHovered: isHovered,
            isPressed: isPressed,
            isFocused: isFocused,
            isSelected: state.isSelected,
            isFocusVisible: isFocusVisible,
            isDisabled: props.isDisabled || false,
            state: state
        },
        defaultClassName: "react-aria-ToggleButton"
    });
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("button", {
        ...(0, $bzgmy$reactaria.mergeProps)(buttonProps, focusProps, hoverProps),
        ...renderProps,
        ref: ref,
        slot: props.slot || undefined,
        "data-focused": isFocused || undefined,
        "data-disabled": props.isDisabled || undefined,
        "data-pressed": isPressed || undefined,
        "data-selected": state.isSelected || undefined,
        "data-hovered": isHovered || undefined,
        "data-focus-visible": isFocusVisible || undefined
    });
}
/**
 * A toggle button allows a user to toggle a selection on or off, for example switching between two states or modes.
 */ const $3def510c5b419a98$export$d2b052e7b4be1756 = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($3def510c5b419a98$var$ToggleButton);


/*
 * Copyright 2023 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 



const $a36bb7fee39de77a$export$6311e7ab80ef752f = /*#__PURE__*/ (0, $bzgmy$react.createContext)({});
function $a36bb7fee39de77a$var$Toolbar(props, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $a36bb7fee39de77a$export$6311e7ab80ef752f);
    let { toolbarProps: toolbarProps } = (0, $bzgmy$reactariatoolbar.useToolbar)(props, ref);
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        values: {
            orientation: props.orientation || "horizontal"
        },
        defaultClassName: "react-aria-Toolbar"
    });
    let DOMProps = (0, $bzgmy$reactariautils.filterDOMProps)(props);
    delete DOMProps.id;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...(0, $bzgmy$reactariautils.mergeProps)(toolbarProps, DOMProps),
        ...renderProps,
        ref: ref,
        slot: props.slot || undefined,
        "data-orientation": props.orientation || "horizontal"
    }, renderProps.children);
}
/**
 * A toolbar is a container for a set of interactive controls, such as buttons, dropdown menus, or checkboxes,
 * with arrow key navigation.
 */ const $a36bb7fee39de77a$export$4c260019440d418f = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($a36bb7fee39de77a$var$Toolbar);


/*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 





const $f9dd4061eb43ac38$export$7a7623236eec67fa = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
const $f9dd4061eb43ac38$export$39ae08fa83328b12 = /*#__PURE__*/ (0, $bzgmy$react.createContext)(null);
function $f9dd4061eb43ac38$export$8c610744efcf8a1d(props) {
    let state = (0, $bzgmy$reactstately.useTooltipTriggerState)(props);
    let ref = (0, $bzgmy$react.useRef)(null);
    let { triggerProps: triggerProps, tooltipProps: tooltipProps } = (0, $bzgmy$reactaria.useTooltipTrigger)(props, state, ref);
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $c5ccf687772c0422$export$2881499e37b75b9a), {
        values: [
            [
                $f9dd4061eb43ac38$export$7a7623236eec67fa,
                state
            ],
            [
                $f9dd4061eb43ac38$export$39ae08fa83328b12,
                {
                    ...tooltipProps,
                    triggerRef: ref
                }
            ]
        ]
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $bzgmy$reactariafocus.FocusableProvider), {
        ...triggerProps,
        ref: ref
    }, props.children));
}
function $f9dd4061eb43ac38$var$Tooltip({ UNSTABLE_portalContainer: UNSTABLE_portalContainer, ...props }, ref) {
    [props, ref] = (0, $c5ccf687772c0422$export$29f1550f4b0d4415)(props, ref, $f9dd4061eb43ac38$export$39ae08fa83328b12);
    let contextState = (0, $bzgmy$react.useContext)($f9dd4061eb43ac38$export$7a7623236eec67fa);
    let localState = (0, $bzgmy$reactstately.useTooltipTriggerState)(props);
    let state = props.isOpen != null || props.defaultOpen != null || !contextState ? localState : contextState;
    let isExiting = (0, $c5ccf687772c0422$export$45fda7c47f93fd48)(ref, state.isOpen) || props.isExiting || false;
    if (!state.isOpen && !isExiting) return null;
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $bzgmy$reactaria.OverlayContainer), {
        portalContainer: UNSTABLE_portalContainer
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement($f9dd4061eb43ac38$var$TooltipInner, {
        ...props,
        tooltipRef: ref,
        isExiting: isExiting
    }));
}
/**
 * A tooltip displays a description of an element on hover or focus.
 */ const $f9dd4061eb43ac38$export$28c660c63b792dea = /*#__PURE__*/ (0, $bzgmy$react.forwardRef)($f9dd4061eb43ac38$var$Tooltip);
function $f9dd4061eb43ac38$var$TooltipInner(props) {
    let state = (0, $bzgmy$react.useContext)($f9dd4061eb43ac38$export$7a7623236eec67fa);
    let { overlayProps: overlayProps, arrowProps: arrowProps, placement: placement } = (0, $bzgmy$reactaria.useOverlayPosition)({
        placement: props.placement || "top",
        targetRef: props.triggerRef,
        overlayRef: props.tooltipRef,
        offset: props.offset,
        crossOffset: props.crossOffset,
        isOpen: state.isOpen
    });
    let isEntering = (0, $c5ccf687772c0422$export$6d3443f2c48bfc20)(props.tooltipRef, !!placement) || props.isEntering || false;
    let renderProps = (0, $c5ccf687772c0422$export$4d86445c2cf5e3)({
        ...props,
        defaultClassName: "react-aria-Tooltip",
        values: {
            placement: placement,
            isEntering: isEntering,
            isExiting: props.isExiting,
            state: state
        }
    });
    props = (0, $bzgmy$reactaria.mergeProps)(props, overlayProps);
    let { tooltipProps: tooltipProps } = (0, $bzgmy$reactaria.useTooltip)(props, state);
    return /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement("div", {
        ...tooltipProps,
        ref: props.tooltipRef,
        ...renderProps,
        style: {
            ...overlayProps.style,
            ...renderProps.style
        },
        "data-placement": placement,
        "data-entering": isEntering || undefined,
        "data-exiting": props.isExiting || undefined
    }, /*#__PURE__*/ (0, ($parcel$interopDefault($bzgmy$react))).createElement((0, $ee5958cbdc6becc1$export$2de4954e8ae13b9f).Provider, {
        value: {
            ...arrowProps,
            placement: placement
        }
    }, renderProps.children));
}







//# sourceMappingURL=main.js.map
